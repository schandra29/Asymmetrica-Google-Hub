{"version":3,"names":["_sha","require","_deterministicCbor","cov_ghm79j0ig","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","CACHE_DURATION","TOLERANCE_PERCENT","CALIBRATION_PATHS","TemplateCalibration","constructor","cache","Map","alerts","cborEncoder","DeterministicCBOREncoder","calibrate","hostname","options","startTime","Date","now","cached","getFromCache","forceRefresh","url","parameters","captureParameters","templateId","generateTemplateId","template","captured","expires","calibrationPath","set","alertTemplateChange","error","Error","message","tls","http2","http3","timing","headers","controller","AbortController","timeout","setTimeout","abort","response","fetch","method","signal","clearTimeout","captureHeaders","performance","getEntriesByName","entries","length","captureTiming","simulateTLSCapture","get","includes","simulateHTTP2Settings","relevantHeaders","header","value","entry","dns","Math","round","domainLookupEnd","domainLookupStart","tcp","connectEnd","connectStart","requestStart","ttfb","responseStart","total","responseEnd","fetchStart","version","cipherSuite","alpn","supportedGroups","signatureAlgorithms","serverCertificateType","compressionMethods","extensions","SETTINGS_ENABLE_PUSH","SETTINGS_MAX_CONCURRENT_STREAMS","SETTINGS_INITIAL_WINDOW_SIZE","SETTINGS_MAX_FRAME_SIZE","SETTINGS_MAX_HEADER_LIST_SIZE","SETTINGS_HEADER_TABLE_SIZE","canonical","canonicalizeParameters","encoded","encode","sha256","params","sortedKeys","Object","keys","sort","key","Array","isArray","slice","verifyConnection","currentParameters","currentTemplateId","matches","compareTemplateIds","withinTolerance","checkTolerance","valid","expected","actual","expectedValue","actualValue","tolerance","diff","abs","equal","i","delete","oldTemplate","newTemplate","alert","timestamp","severity","oldTemplateId","bytesToHex","newTemplateId","changes","identifyChanges","push","window","dispatchEvent","CustomEvent","detail","console","oldParams","newParams","oldValue","fullPath","newValue","nestedChanges","bytes","from","map","toString","padStart","join","getAlerts","since","filter","clearAlerts","exportCache","exported","importCache","data","item","Uint8Array","exports","TemplateRegistry","registry","signatures","register","metadata","registered","isRegistered","registeredId","getAll","all","_default","default"],"sources":["template-calibration.js"],"sourcesContent":["/**\n * Template Calibration System\n * Based on Betanet specs Section 8.1\n * \n * Detect MITM attacks by fingerprinting server behavior\n * and verifying consistency across connections\n */\n\nimport { sha256 } from '@noble/hashes/sha256';\nimport { DeterministicCBOREncoder } from '../cbor/deterministic-cbor.js';\n\n// Constants from Section 8.1\nconst CACHE_DURATION = 24 * 60 * 60 * 1000; // 24 hours\nconst TOLERANCE_PERCENT = 10; // Â±10% for numeric values\nconst CALIBRATION_PATHS = ['/robots.txt', '/favicon.ico'];\n\n/**\n * Template Calibration System\n * \n * Captures server behavior to create a fingerprint (TemplateID)\n * that can detect when connections are hijacked\n */\nexport class TemplateCalibration {\n  constructor() {\n    this.cache = new Map();\n    this.alerts = [];\n    this.cborEncoder = new DeterministicCBOREncoder();\n  }\n  \n  /**\n   * Perform calibration fetch to capture server parameters\n   * Section 8.1.1\n   */\n  async calibrate(hostname, options = {}) {\n    const startTime = Date.now();\n    \n    try {\n      // Check cache first\n      const cached = this.getFromCache(hostname);\n      if (cached && !options.forceRefresh) {\n        return cached;\n      }\n      \n      // Select calibration path\n      const path = options.path || CALIBRATION_PATHS[0];\n      const url = `https://${hostname}${path}`;\n      \n      // Capture TLS and HTTP parameters\n      const parameters = await this.captureParameters(url, options);\n      \n      // Generate TemplateID\n      const templateId = this.generateTemplateId(parameters);\n      \n      // Create template record\n      const template = {\n        hostname,\n        templateId,\n        parameters,\n        captured: startTime,\n        expires: startTime + CACHE_DURATION,\n        calibrationPath: path\n      };\n      \n      // Cache the template\n      this.cache.set(hostname, template);\n      \n      // Check for changes if we had a previous template\n      if (cached && cached.templateId !== templateId) {\n        this.alertTemplateChange(hostname, cached, template);\n      }\n      \n      return template;\n    } catch (error) {\n      throw new Error(`Calibration failed for ${hostname}: ${error.message}`);\n    }\n  }\n  \n  /**\n   * Capture server parameters for fingerprinting\n   * Section 8.1.1 and 8.1.3\n   */\n  async captureParameters(url, options = {}) {\n    const parameters = {\n      tls: {},\n      http2: {},\n      http3: {},\n      timing: {},\n      headers: {}\n    };\n    \n    // Perform fetch with detailed observation\n    const controller = new AbortController();\n    const timeout = setTimeout(() => controller.abort(), options.timeout || 10000);\n    \n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        signal: controller.signal,\n        // Note: In production, we'd use a lower-level API to capture TLS details\n        // For now, we'll simulate with what's available in the browser\n      });\n      \n      clearTimeout(timeout);\n      \n      // Capture response headers (these are observable)\n      parameters.headers = this.captureHeaders(response.headers);\n      \n      // Capture timing information\n      if (performance && performance.getEntriesByName) {\n        const entries = performance.getEntriesByName(url);\n        if (entries.length > 0) {\n          const timing = entries[entries.length - 1];\n          parameters.timing = this.captureTiming(timing);\n        }\n      }\n      \n      // In a real implementation, we would capture:\n      // - TLS cipher suites via connection info\n      // - ALPN negotiation results\n      // - HTTP/2 SETTINGS frames\n      // - QUIC transport parameters for HTTP/3\n      \n      // Simulate TLS parameters (in production, use TLS connection info)\n      parameters.tls = await this.simulateTLSCapture(url);\n      \n      // Simulate HTTP/2 settings (in production, capture actual frames)\n      if (response.headers.get('alt-svc')?.includes('h2')) {\n        parameters.http2 = this.simulateHTTP2Settings();\n      }\n      \n      return parameters;\n    } finally {\n      clearTimeout(timeout);\n    }\n  }\n  \n  /**\n   * Capture observable HTTP headers\n   */\n  captureHeaders(headers) {\n    const captured = {};\n    const relevantHeaders = [\n      'server',\n      'x-powered-by',\n      'strict-transport-security',\n      'x-frame-options',\n      'x-content-type-options',\n      'content-security-policy',\n      'alt-svc'\n    ];\n    \n    for (const header of relevantHeaders) {\n      const value = headers.get(header);\n      if (value) {\n        captured[header] = value;\n      }\n    }\n    \n    return captured;\n  }\n  \n  /**\n   * Capture timing characteristics\n   */\n  captureTiming(entry) {\n    return {\n      dns: Math.round(entry.domainLookupEnd - entry.domainLookupStart),\n      tcp: Math.round(entry.connectEnd - entry.connectStart),\n      tls: Math.round(entry.requestStart - entry.connectEnd),\n      ttfb: Math.round(entry.responseStart - entry.requestStart),\n      total: Math.round(entry.responseEnd - entry.fetchStart)\n    };\n  }\n  \n  /**\n   * Simulate TLS parameter capture\n   * In production, this would use actual TLS connection info\n   */\n  async simulateTLSCapture(url) {\n    // In a real implementation, we'd capture:\n    return {\n      version: 'TLS 1.3',\n      cipherSuite: 'TLS_AES_128_GCM_SHA256',\n      alpn: ['h2', 'http/1.1'],\n      supportedGroups: ['x25519', 'secp256r1', 'secp384r1'],\n      signatureAlgorithms: [\n        'ecdsa_secp256r1_sha256',\n        'rsa_pss_rsae_sha256',\n        'rsa_pkcs1_sha256'\n      ],\n      serverCertificateType: 'X.509',\n      compressionMethods: ['none'],\n      extensions: [\n        'server_name',\n        'status_request',\n        'supported_groups',\n        'ec_point_formats',\n        'signature_algorithms',\n        'alpn',\n        'signed_certificate_timestamp',\n        'key_share',\n        'psk_key_exchange_modes',\n        'supported_versions'\n      ]\n    };\n  }\n  \n  /**\n   * Simulate HTTP/2 settings capture\n   * Section 8.1.3\n   */\n  simulateHTTP2Settings() {\n    return {\n      SETTINGS_ENABLE_PUSH: 0,\n      SETTINGS_MAX_CONCURRENT_STREAMS: 100,\n      SETTINGS_INITIAL_WINDOW_SIZE: 65535,\n      SETTINGS_MAX_FRAME_SIZE: 16384,\n      SETTINGS_MAX_HEADER_LIST_SIZE: 8192,\n      SETTINGS_HEADER_TABLE_SIZE: 4096\n    };\n  }\n  \n  /**\n   * Generate TemplateID from parameters\n   * Section 8.1.1 - SHA-256 of deterministic CBOR encoding\n   */\n  generateTemplateId(parameters) {\n    // Sort and canonicalize parameters\n    const canonical = this.canonicalizeParameters(parameters);\n    \n    // Encode with deterministic CBOR\n    const encoded = this.cborEncoder.encode(canonical);\n    \n    // Return SHA-256 hash\n    return sha256(encoded);\n  }\n  \n  /**\n   * Canonicalize parameters for consistent hashing\n   */\n  canonicalizeParameters(params) {\n    const canonical = {};\n    \n    // Sort top-level keys\n    const sortedKeys = Object.keys(params).sort();\n    \n    for (const key of sortedKeys) {\n      const value = params[key];\n      \n      if (typeof value === 'object' && value !== null) {\n        // Recursively canonicalize nested objects\n        canonical[key] = this.canonicalizeParameters(value);\n      } else if (Array.isArray(value)) {\n        // Sort arrays for consistency\n        canonical[key] = value.slice().sort();\n      } else {\n        canonical[key] = value;\n      }\n    }\n    \n    return canonical;\n  }\n  \n  /**\n   * Verify a connection matches the expected template\n   * Section 8.1.5 - Compliance verification\n   */\n  async verifyConnection(hostname, currentParameters) {\n    const template = this.getFromCache(hostname);\n    \n    if (!template) {\n      // No template cached, perform calibration\n      return await this.calibrate(hostname);\n    }\n    \n    // Generate TemplateID for current parameters\n    const currentTemplateId = this.generateTemplateId(currentParameters);\n    \n    // Compare with cached template\n    const matches = this.compareTemplateIds(template.templateId, currentTemplateId);\n    \n    if (!matches) {\n      // Check if parameters are within tolerance\n      const withinTolerance = this.checkTolerance(\n        template.parameters,\n        currentParameters\n      );\n      \n      if (!withinTolerance) {\n        this.alertTemplateChange(hostname, template, {\n          templateId: currentTemplateId,\n          parameters: currentParameters\n        });\n        \n        return {\n          valid: false,\n          error: 'Template mismatch detected - possible MITM',\n          expected: template.templateId,\n          actual: currentTemplateId\n        };\n      }\n    }\n    \n    return {\n      valid: true,\n      templateId: template.templateId\n    };\n  }\n  \n  /**\n   * Check if parameters are within tolerance\n   * Section 8.1.5 - Â±10% for numeric values\n   */\n  checkTolerance(expected, actual) {\n    for (const key in expected) {\n      const expectedValue = expected[key];\n      const actualValue = actual[key];\n      \n      if (typeof expectedValue === 'number' && typeof actualValue === 'number') {\n        const tolerance = expectedValue * (TOLERANCE_PERCENT / 100);\n        const diff = Math.abs(expectedValue - actualValue);\n        \n        if (diff > tolerance) {\n          return false;\n        }\n      } else if (typeof expectedValue === 'object' && expectedValue !== null) {\n        if (!this.checkTolerance(expectedValue, actualValue || {})) {\n          return false;\n        }\n      } else if (expectedValue !== actualValue) {\n        // Non-numeric values must match exactly\n        return false;\n      }\n    }\n    \n    return true;\n  }\n  \n  /**\n   * Compare TemplateIDs in constant time\n   */\n  compareTemplateIds(expected, actual) {\n    if (expected.length !== actual.length) {\n      return false;\n    }\n    \n    let equal = true;\n    for (let i = 0; i < expected.length; i++) {\n      if (expected[i] !== actual[i]) {\n        equal = false;\n      }\n    }\n    \n    return equal;\n  }\n  \n  /**\n   * Get template from cache if valid\n   */\n  getFromCache(hostname) {\n    const cached = this.cache.get(hostname);\n    \n    if (!cached) {\n      return null;\n    }\n    \n    // Check if expired\n    if (Date.now() > cached.expires) {\n      this.cache.delete(hostname);\n      return null;\n    }\n    \n    return cached;\n  }\n  \n  /**\n   * Alert on template change (potential MITM)\n   */\n  alertTemplateChange(hostname, oldTemplate, newTemplate) {\n    const alert = {\n      timestamp: Date.now(),\n      hostname,\n      severity: 'HIGH',\n      message: `Template change detected for ${hostname}`,\n      oldTemplateId: this.bytesToHex(oldTemplate.templateId),\n      newTemplateId: this.bytesToHex(newTemplate.templateId),\n      changes: this.identifyChanges(oldTemplate.parameters, newTemplate.parameters)\n    };\n    \n    this.alerts.push(alert);\n    \n    // Emit event for monitoring\n    if (typeof window !== 'undefined' && window.dispatchEvent) {\n      window.dispatchEvent(new CustomEvent('template-change', { detail: alert }));\n    }\n    \n    console.error('[SECURITY ALERT]', alert.message, alert);\n    \n    return alert;\n  }\n  \n  /**\n   * Identify what changed between templates\n   */\n  identifyChanges(oldParams, newParams, path = '') {\n    const changes = [];\n    \n    // Check for removed keys\n    for (const key in oldParams) {\n      if (!(key in newParams)) {\n        changes.push({\n          path: path ? `${path}.${key}` : key,\n          type: 'removed',\n          oldValue: oldParams[key]\n        });\n      }\n    }\n    \n    // Check for added or changed keys\n    for (const key in newParams) {\n      const fullPath = path ? `${path}.${key}` : key;\n      \n      if (!(key in oldParams)) {\n        changes.push({\n          path: fullPath,\n          type: 'added',\n          newValue: newParams[key]\n        });\n      } else if (typeof newParams[key] === 'object' && newParams[key] !== null) {\n        // Recursively check nested objects\n        const nestedChanges = this.identifyChanges(\n          oldParams[key],\n          newParams[key],\n          fullPath\n        );\n        changes.push(...nestedChanges);\n      } else if (oldParams[key] !== newParams[key]) {\n        changes.push({\n          path: fullPath,\n          type: 'modified',\n          oldValue: oldParams[key],\n          newValue: newParams[key]\n        });\n      }\n    }\n    \n    return changes;\n  }\n  \n  /**\n   * Convert bytes to hex for display\n   */\n  bytesToHex(bytes) {\n    return Array.from(bytes)\n      .map(b => b.toString(16).padStart(2, '0'))\n      .join('');\n  }\n  \n  /**\n   * Get current alerts\n   */\n  getAlerts(since = 0) {\n    return this.alerts.filter(alert => alert.timestamp > since);\n  }\n  \n  /**\n   * Clear alerts\n   */\n  clearAlerts() {\n    this.alerts = [];\n  }\n  \n  /**\n   * Export cache for persistence\n   */\n  exportCache() {\n    const exported = [];\n    \n    for (const [hostname, template] of this.cache) {\n      exported.push({\n        hostname,\n        templateId: Array.from(template.templateId),\n        parameters: template.parameters,\n        captured: template.captured,\n        expires: template.expires,\n        calibrationPath: template.calibrationPath\n      });\n    }\n    \n    return exported;\n  }\n  \n  /**\n   * Import cache from persistence\n   */\n  importCache(data) {\n    for (const item of data) {\n      if (item.expires > Date.now()) {\n        this.cache.set(item.hostname, {\n          ...item,\n          templateId: new Uint8Array(item.templateId)\n        });\n      }\n    }\n  }\n}\n\n/**\n * Template Registry - Manage known good templates\n */\nexport class TemplateRegistry {\n  constructor() {\n    this.registry = new Map();\n    this.signatures = new Map();\n  }\n  \n  /**\n   * Register a known good template\n   */\n  register(hostname, templateId, metadata = {}) {\n    this.registry.set(hostname, {\n      templateId,\n      metadata,\n      registered: Date.now()\n    });\n  }\n  \n  /**\n   * Check if a template is registered\n   */\n  isRegistered(hostname, templateId) {\n    const registered = this.registry.get(hostname);\n    \n    if (!registered) {\n      return false;\n    }\n    \n    // Compare template IDs\n    const registeredId = registered.templateId;\n    if (registeredId.length !== templateId.length) {\n      return false;\n    }\n    \n    for (let i = 0; i < registeredId.length; i++) {\n      if (registeredId[i] !== templateId[i]) {\n        return false;\n      }\n    }\n    \n    return true;\n  }\n  \n  /**\n   * Get all registered templates\n   */\n  getAll() {\n    const all = [];\n    for (const [hostname, data] of this.registry) {\n      all.push({\n        hostname,\n        ...data\n      });\n    }\n    return all;\n  }\n}\n\nexport default {\n  TemplateCalibration,\n  TemplateRegistry,\n  CACHE_DURATION,\n  TOLERANCE_PERCENT\n};"],"mappings":"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","ignoreList":[]}