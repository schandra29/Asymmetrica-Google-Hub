{"version":3,"names":["_selfCertifying","require","_deterministicCbor","_frontOriginRegistry","_relayMixing","cov_2khu1btxp6","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","DefenseKitEngine","constructor","config","enableStealth","enablePrivacy","complianceProfile","frontOrigins","identityManager","IdentityManager","frontRegistry","FrontOriginRegistry","trafficMimic","TrafficMimic","templateCaliber","TemplateCaliber","privacyManager","mainIdentity","stats","messagesSecured","bytesProtected","identitiesManaged","templatesCalibrated","privacyPathsUsed","initialized","initialize","identityLabel","console","log","createIdentity","PrivacyManager","calibrateFrontOrigins","success","identity","features","stealth","privacy","compliance","error","Error","message","origin","template","calibrateOrigin","addEntry","templateId","id","hostPattern","expiry","Date","now","warn","secureMessage","data","options","startTime","envelope","timestamp","sender","messageId","generateMessageId","security","profile","usePrivacy","encoder","DeterministicCBOREncoder","encoded","encode","signature","sign","CBORUtils","hashCBOR","securePackage","Array","from","publicKey","secured","length","duration","verifyMessage","Uint8Array","expectedHash","signatureValid","SelfCertifyingIdentity","verify","decoder","DeterministicCBORDecoder","decode","integrityValid","verifyCBOR","senderNodeId","parseNodeId","valid","stealthConnection","connectionParams","targetHost","entry","entries","matchesPattern","stealthParams","applyTemplate","sendSecureMessage","recipient","securedMessage","enable","result","sendMessage","hops","direct","random","Math","toString","substr","getStatus","nodeId","slice","map","padStart","join","hasPrivateKey","privateKey","statistics","templatesActive","size","privacyEnabled","enabled","generateComplianceReport","report","reportId","enterprise","identityManagement","dataIntegrity","messageAuthentication","trafficSecurity","privacyLevel","encryptionStandard","keyExchange","signatures","hashing","encoding","audit","noPasswordStorage","noCentralAuthority","cryptographicallyVerifiable","injectionProof","trafficAnalysisResistant","privacyPreserving","generated","emergencyWipe","cache","clear","exports","AsymmFlowDefenseKit","engine","status","getSecurityStatus","secure","secureApiRequest","endpoint","securedData","getComplianceReport","defenseKit","_default","default"],"sources":["asymmflow-integration.js"],"sourcesContent":["/**\n * AsymmFlow DefenseKit Integration\n * Integrates Betanet v1.2 security components into AsymmFlow ERP\n *\n * This module provides enterprise-grade security while maintaining\n * the professional, business-focused interface AsymmFlow requires.\n *\n * Features:\n * - Self-certifying identities (no CAs needed)\n * - Injection-proof CBOR encoding\n * - Traffic indistinguishability (stealth mode)\n * - Optional privacy mixing for sensitive operations\n * - Military-grade security that looks like normal business traffic\n */\n\nimport {\n  SelfCertifyingIdentity,\n  IdentityManager\n} from './identity/self-certifying.js';\n\nimport {\n  DeterministicCBOREncoder,\n  DeterministicCBORDecoder,\n  CBORUtils\n} from './cbor/deterministic-cbor.js';\n\nimport {\n  TemplateCaliber,\n  FrontOriginRegistry,\n  TrafficMimic\n} from './calibration/front-origin-registry.js';\n\nimport {\n  PrivacyManager\n} from './privacy/relay-mixing.js';\n\n/**\n * DefenseKit Security Engine\n * Main integration class for AsymmFlow\n */\nexport class DefenseKitEngine {\n  constructor(config = {}) {\n    this.config = {\n      enableStealth: config.enableStealth || true,\n      enablePrivacy: config.enablePrivacy || false,\n      complianceProfile: config.complianceProfile || 'STANDARD',\n      frontOrigins: config.frontOrigins || ['www.google.com', 'api.github.com'],\n      ...config\n    };\n\n    // Initialize components\n    this.identityManager = new IdentityManager();\n    this.frontRegistry = new FrontOriginRegistry();\n    this.trafficMimic = new TrafficMimic(this.frontRegistry);\n    this.templateCaliber = new TemplateCaliber();\n\n    // Privacy manager (optional)\n    this.privacyManager = null;\n    this.mainIdentity = null;\n\n    // Statistics\n    this.stats = {\n      messagesSecured: 0,\n      bytesProtected: 0,\n      identitiesManaged: 0,\n      templatesCalibrated: 0,\n      privacyPathsUsed: 0\n    };\n\n    this.initialized = false;\n  }\n\n  /**\n   * Initialize DefenseKit for AsymmFlow\n   */\n  async initialize(identityLabel = 'AsymmFlow Enterprise') {\n    console.log('üõ°Ô∏è  Initializing DefenseKit Security Engine...');\n\n    try {\n      // Create main enterprise identity\n      this.mainIdentity = this.identityManager.createIdentity(identityLabel);\n      this.stats.identitiesManaged++;\n\n      console.log(`üîê Created enterprise identity: ${this.mainIdentity.name}`);\n\n      // Initialize privacy manager if enabled\n      if (this.config.enablePrivacy) {\n        this.privacyManager = new PrivacyManager(this.mainIdentity);\n        console.log('üïµÔ∏è  Privacy mixing enabled');\n      }\n\n      // Calibrate front origins if stealth enabled\n      if (this.config.enableStealth) {\n        await this.calibrateFrontOrigins();\n      }\n\n      this.initialized = true;\n      console.log('‚úÖ DefenseKit initialization complete');\n\n      return {\n        success: true,\n        identity: this.mainIdentity.name,\n        features: {\n          stealth: this.config.enableStealth,\n          privacy: this.config.enablePrivacy,\n          compliance: this.config.complianceProfile\n        }\n      };\n\n    } catch (error) {\n      console.error('‚ùå DefenseKit initialization failed:', error);\n      throw new Error(`DefenseKit initialization failed: ${error.message}`);\n    }\n  }\n\n  /**\n   * Calibrate front origins for traffic stealth\n   */\n  async calibrateFrontOrigins() {\n    console.log('üé≠ Calibrating front origins for stealth mode...');\n\n    for (const origin of this.config.frontOrigins) {\n      try {\n        const template = await this.templateCaliber.calibrateOrigin(origin);\n        this.stats.templatesCalibrated++;\n\n        // Add to registry with enterprise compliance\n        this.frontRegistry.addEntry({\n          templateId: template.id,\n          hostPattern: origin,\n          complianceProfile: this.config.complianceProfile,\n          expiry: Date.now() + 24 * 60 * 60 * 1000 // 24 hours\n        });\n\n        console.log(`üìã Registered template for ${origin}`);\n      } catch (error) {\n        console.warn(`‚ö†Ô∏è  Failed to calibrate ${origin}: ${error.message}`);\n      }\n    }\n  }\n\n  /**\n   * Secure enterprise message/data\n   */\n  secureMessage(data, options = {}) {\n    if (!this.initialized) {\n      throw new Error('DefenseKit not initialized');\n    }\n\n    const startTime = Date.now();\n\n    try {\n      // 1. Create secure message envelope\n      const envelope = {\n        data,\n        timestamp: Date.now(),\n        sender: this.mainIdentity.name,\n        messageId: this.generateMessageId(),\n        security: {\n          profile: this.config.complianceProfile,\n          stealth: this.config.enableStealth,\n          privacy: options.usePrivacy || false\n        }\n      };\n\n      // 2. Encode with deterministic CBOR (injection-proof)\n      const encoder = new DeterministicCBOREncoder();\n      const encoded = encoder.encode(envelope);\n\n      // 3. Sign with enterprise identity\n      const signature = this.mainIdentity.sign(encoded);\n\n      // 4. Create integrity hash\n      const hash = CBORUtils.hashCBOR(envelope);\n\n      // 5. Build final secure package\n      const securePackage = {\n        envelope: Array.from(encoded),\n        signature: Array.from(signature),\n        hash: Array.from(hash),\n        identity: this.mainIdentity.name,\n        publicKey: Array.from(this.mainIdentity.publicKey),\n        secured: Date.now()\n      };\n\n      // Update statistics\n      this.stats.messagesSecured++;\n      this.stats.bytesProtected += encoded.length;\n\n      const duration = Date.now() - startTime;\n      console.log(`üîí Secured message in ${duration}ms (${encoded.length} bytes)`);\n\n      return securePackage;\n\n    } catch (error) {\n      console.error('‚ùå Message security failed:', error);\n      throw new Error(`Failed to secure message: ${error.message}`);\n    }\n  }\n\n  /**\n   * Verify and decrypt secure message\n   */\n  verifyMessage(securePackage) {\n    if (!this.initialized) {\n      throw new Error('DefenseKit not initialized');\n    }\n\n    try {\n      // 1. Extract components\n      const encoded = new Uint8Array(securePackage.envelope);\n      const signature = new Uint8Array(securePackage.signature);\n      const expectedHash = new Uint8Array(securePackage.hash);\n      const publicKey = new Uint8Array(securePackage.publicKey);\n\n      // 2. Verify signature\n      const signatureValid = SelfCertifyingIdentity.verify(signature, encoded, publicKey);\n      if (!signatureValid) {\n        throw new Error('Invalid message signature');\n      }\n\n      // 3. Decode CBOR\n      const decoder = new DeterministicCBORDecoder(encoded);\n      const envelope = decoder.decode();\n\n      // 4. Verify integrity\n      const integrityValid = CBORUtils.verifyCBOR(envelope, expectedHash);\n      if (!integrityValid) {\n        throw new Error('Message integrity verification failed');\n      }\n\n      // 5. Verify sender identity\n      try {\n        const senderNodeId = SelfCertifyingIdentity.parseNodeId(securePackage.identity);\n        // Additional verification could be added here\n      } catch (error) {\n        throw new Error('Invalid sender identity');\n      }\n\n      console.log(`‚úÖ Message verified from ${securePackage.identity}`);\n\n      return {\n        valid: true,\n        data: envelope.data,\n        sender: envelope.sender,\n        timestamp: envelope.timestamp,\n        security: envelope.security\n      };\n\n    } catch (error) {\n      console.error('‚ùå Message verification failed:', error);\n      return {\n        valid: false,\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Apply traffic stealth to HTTP connection\n   */\n  async stealthConnection(connectionParams, targetHost) {\n    if (!this.config.enableStealth) {\n      return connectionParams;\n    }\n\n    try {\n      // Find matching template\n      let templateId = null;\n      for (const [id, entry] of this.frontRegistry.entries.entries()) {\n        if (this.frontRegistry.matchesPattern(targetHost, entry.hostPattern)) {\n          templateId = id;\n          break;\n        }\n      }\n\n      if (!templateId) {\n        console.warn(`‚ö†Ô∏è  No stealth template found for ${targetHost}, using default`);\n        return connectionParams;\n      }\n\n      // Apply traffic mimicking\n      const stealthParams = await this.trafficMimic.applyTemplate(templateId, connectionParams);\n\n      console.log(`üé≠ Applied stealth template for ${targetHost}`);\n      return stealthParams;\n\n    } catch (error) {\n      console.warn(`‚ö†Ô∏è  Stealth application failed: ${error.message}`);\n      return connectionParams;\n    }\n  }\n\n  /**\n   * Send message with optional privacy\n   */\n  async sendSecureMessage(data, recipient, options = {}) {\n    if (!this.initialized) {\n      throw new Error('DefenseKit not initialized');\n    }\n\n    try {\n      // 1. Secure the message\n      const securedMessage = this.secureMessage(data, options);\n\n      // 2. Use privacy mixing if requested\n      if (options.usePrivacy && this.privacyManager) {\n        this.privacyManager.enable();\n\n        const result = await this.privacyManager.sendMessage(\n          securedMessage,\n          recipient,\n          true\n        );\n\n        this.stats.privacyPathsUsed++;\n        console.log(`üïµÔ∏è  Message sent through ${result.hops}-hop privacy path`);\n\n        return result;\n      }\n\n      // 3. Direct secure send\n      console.log(`üì§ Sending secure message to ${recipient}`);\n      return {\n        message: securedMessage,\n        direct: true,\n        privacy: false\n      };\n\n    } catch (error) {\n      console.error('‚ùå Secure message send failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Generate unique message ID\n   */\n  generateMessageId() {\n    const timestamp = Date.now();\n    const random = Math.random().toString(36).substr(2, 9);\n    return `DK-${timestamp}-${random}`;\n  }\n\n  /**\n   * Get DefenseKit status for AsymmFlow dashboard\n   */\n  getStatus() {\n    return {\n      initialized: this.initialized,\n      identity: this.mainIdentity ? {\n        name: this.mainIdentity.name,\n        nodeId: Array.from(this.mainIdentity.nodeId).slice(0, 8)\n          .map(b => b.toString(16).padStart(2, '0')).join(''),\n        hasPrivateKey: !!this.mainIdentity.privateKey\n      } : null,\n      features: {\n        stealth: this.config.enableStealth,\n        privacy: this.config.enablePrivacy,\n        compliance: this.config.complianceProfile\n      },\n      statistics: this.stats,\n      frontOrigins: this.config.frontOrigins.length,\n      templatesActive: this.frontRegistry.entries.size,\n      privacyEnabled: this.privacyManager?.enabled || false\n    };\n  }\n\n  /**\n   * Create enterprise compliance report\n   */\n  generateComplianceReport() {\n    const report = {\n      reportId: this.generateMessageId(),\n      timestamp: Date.now(),\n      enterprise: this.mainIdentity?.name || 'Unknown',\n      compliance: {\n        profile: this.config.complianceProfile,\n        identityManagement: 'Self-Certifying (No CA Required)',\n        dataIntegrity: 'Deterministic CBOR + SHA-256',\n        messageAuthentication: 'Ed25519 Digital Signatures',\n        trafficSecurity: this.config.enableStealth ? 'Stealth Mode Active' : 'Standard Mode',\n        privacyLevel: this.config.enablePrivacy ? 'Privacy Mixing Available' : 'Direct Communications'\n      },\n      statistics: this.stats,\n      security: {\n        encryptionStandard: 'ChaCha20-Poly1305',\n        keyExchange: 'X25519 Elliptic Curve',\n        signatures: 'Ed25519',\n        hashing: 'SHA-256',\n        encoding: 'Deterministic CBOR'\n      },\n      audit: {\n        noPasswordStorage: true,\n        noCentralAuthority: true,\n        cryptographicallyVerifiable: true,\n        injectionProof: true,\n        trafficAnalysisResistant: this.config.enableStealth,\n        privacyPreserving: this.config.enablePrivacy\n      }\n    };\n\n    // Sign the report\n    const encoder = new DeterministicCBOREncoder();\n    const encoded = encoder.encode(report);\n    const signature = this.mainIdentity.sign(encoded);\n\n    return {\n      report,\n      signature: Array.from(signature),\n      generated: Date.now()\n    };\n  }\n\n  /**\n   * Emergency security wipe\n   */\n  emergencyWipe() {\n    console.log('üö® EMERGENCY SECURITY WIPE INITIATED');\n\n    // Clear sensitive data\n    this.mainIdentity = null;\n    this.identityManager = new IdentityManager();\n    this.privacyManager = null;\n\n    // Clear caches\n    this.templateCaliber.cache.clear();\n    this.frontRegistry.entries.clear();\n\n    // Reset statistics\n    this.stats = {\n      messagesSecured: 0,\n      bytesProtected: 0,\n      identitiesManaged: 0,\n      templatesCalibrated: 0,\n      privacyPathsUsed: 0\n    };\n\n    this.initialized = false;\n\n    console.log('üî• Security wipe completed - all sensitive data destroyed');\n  }\n}\n\n/**\n * AsymmFlow DefenseKit Provider\n * React context provider for DefenseKit integration\n */\nexport class AsymmFlowDefenseKit {\n  constructor() {\n    this.engine = null;\n    this.status = 'uninitialized';\n  }\n\n  /**\n   * Initialize DefenseKit for AsymmFlow\n   */\n  async initialize(config = {}) {\n    try {\n      this.status = 'initializing';\n      this.engine = new DefenseKitEngine(config);\n\n      const result = await this.engine.initialize('AsymmFlow Enterprise System');\n\n      this.status = 'ready';\n      return result;\n    } catch (error) {\n      this.status = 'error';\n      throw error;\n    }\n  }\n\n  /**\n   * Get security status for UI display\n   */\n  getSecurityStatus() {\n    if (!this.engine) {\n      return {\n        status: this.status,\n        secure: false,\n        message: 'DefenseKit not initialized'\n      };\n    }\n\n    const status = this.engine.getStatus();\n\n    return {\n      status: this.status,\n      secure: status.initialized,\n      identity: status.identity?.name || 'None',\n      features: status.features,\n      statistics: status.statistics,\n      message: status.initialized\n        ? 'Enterprise security active'\n        : 'Security initialization required'\n    };\n  }\n\n  /**\n   * Secure API request for AsymmFlow\n   */\n  async secureApiRequest(endpoint, data, options = {}) {\n    if (!this.engine?.initialized) {\n      throw new Error('DefenseKit not initialized');\n    }\n\n    // Secure the request data\n    const securedData = this.engine.secureMessage({\n      endpoint,\n      data,\n      timestamp: Date.now()\n    }, options);\n\n    return securedData;\n  }\n\n  /**\n   * Get compliance report for enterprise audit\n   */\n  getComplianceReport() {\n    if (!this.engine?.initialized) {\n      throw new Error('DefenseKit not initialized');\n    }\n\n    return this.engine.generateComplianceReport();\n  }\n}\n\n// Export singleton instance for AsymmFlow\nexport const defenseKit = new AsymmFlowDefenseKit();\n\nexport default {\n  DefenseKitEngine,\n  AsymmFlowDefenseKit,\n  defenseKit\n};"],"mappings":"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","ignoreList":[]}