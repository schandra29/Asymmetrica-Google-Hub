{"version":3,"names":["_quantum_network_consciousness_engine","require","cov_2l576ci32z","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","branchMap","s","f","b","_coverageSchema","coverage","actualCoverage","console","log","engine","QuantumNetworkConsciousnessEngine","enableQuantumConsciousness","enableRealWorldTesting","teslaFrequencyEnhancement","initialize","error","message","stack"],"sources":["test_initialization.js"],"sourcesContent":["/**\n * Test Quantum Network Consciousness Engine Initialization\n */\n\nimport { QuantumNetworkConsciousnessEngine } from './quantum_network_consciousness_engine.js';\n\nconsole.log('üîß Testing Quantum Network Consciousness Engine initialization...');\n\ntry {\n  const engine = new QuantumNetworkConsciousnessEngine({\n    enableQuantumConsciousness: false, // Disable to test basic initialization first\n    enableRealWorldTesting: true,\n    teslaFrequencyEnhancement: false\n  });\n\n  console.log('‚úÖ Engine created successfully');\n\n  await engine.initialize();\n  console.log('‚úÖ Engine initialized successfully');\n\n  console.log('\\nüéâ Basic initialization test completed!');\n\n} catch (error) {\n  console.error('‚ùå Initialization failed:', error.message);\n  console.error('Stack:', error.stack);\n}"],"mappings":"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","ignoreList":[]}