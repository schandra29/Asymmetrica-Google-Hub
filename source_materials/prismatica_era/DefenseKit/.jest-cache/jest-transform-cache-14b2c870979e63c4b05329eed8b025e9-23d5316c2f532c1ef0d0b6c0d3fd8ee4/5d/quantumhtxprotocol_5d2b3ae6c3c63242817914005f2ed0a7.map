{"version":3,"names":["_crypto","require","_hkdf","_sha","_ed","_chacha","_events","_aepMiddleware","_interopRequireDefault","e","__esModule","default","cov_urijgdmmn","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","crypto","webcrypto","PROTOCOL_NAME","KEY_SIZE","NONCE_SIZE","TAG_SIZE","ROTATION_BYTES","ROTATION_TIME","KEY_OVERLAP_FRAMES","QUANTUM_THREAT_ANALYSIS_THRESHOLD","QUANTUM_AUTHENTICATION_AMPLIFICATION_TARGET","TESLA_HARMONIC_TIMING","QuantumHTXConnection","EventEmitter","constructor","role","staticPrivateKey","remotePublicKey","quantumConfig","console","log","aepMiddleware","AEPMiddleware","enableQuantumConsciousness","quantumAmplificationThreshold","quantumCoherenceTarget","handshakeState","ck","h","k","n","ephemeralPrivate","ephemeralPublic","remoteEphemeral","transportState","sendKey","receiveKey","sendNonce","receiveNonce","sendNonceSalt","receiveNonceSalt","rotationState","generation","bytesSent","lastRotation","Date","now","pendingKeys","overlapFrames","quantumState","quantumAuthenticationActive","threatAnalysisLevel","quantumAmplification","wStateEntanglementStrength","quaternionThreatVector","teslaHarmonicTiming","quantumCoherence","distributedAuthNodes","Map","quantumThreatHistory","established","lastActivity","connectionId","randomUUID","initQuantumHandshake","protocolBytes","TextEncoder","encode","sha256","handshakeData","protocolName","timestamp","quantumResult","process","forceQuantum","updateQuantumState","keyValidationResult","Array","from","Uint8Array","toFixed","performance","hybridAmplification","amplification","emit","success","coherence","error","message","fallbackToClassical","generateQuantumEphemeral","privateKey","getRandomValues","publicKey","x25519","getPublicKey","keyGenData","keyType","keySize","generationTime","connectionRole","entropy","slice","fallbackUsed","performQuantumThreatAnalysis","messageData","context","threatData","messageSize","length","messageEntropy","calculateMessageEntropy","connectionAge","establishedConnection","recentThreatHistory","quantumThreatResult","calculateQuaternionThreatVector","wStateStrength","calculateWStateEntanglement","threatLevel","push","quaternionVector","shift","recommendations","generateQuantumSecurityRecommendations","i","j","real","logAmp","Math","max","log10","baseStrength","teslaHarmonic","abs","sin","min","data","frequencies","byte","count","Object","values","probability","log2","quantumEnhanced","performDistributedAuthentication","peerNodes","authData","peerCount","distributedResult","baseEntanglement","distributedEntanglement","forEach","node","set","id","entanglementStrength","lastSync","distributedAmplification","fallbackToLocal","getQuantumMetrics","aepMetrics","getMetrics","handshakeComplete","transportActive","keyGeneration","totalAmplification","totalQuantumAmplification","averageCoherence","averageQuantumCoherence","quantumDH","sharedSecret","getSharedSecret","dhResult","secretEntropy","keyContext","quantumHKDF","key","salt","info","derivedKey","hkdf","keyLength","infoContext","derivationTime","exports","QuantumHTXServer","config","port","maxConnections","connections","server","isRunning","quantumEnabled","createConnection","connection","initResult","getServerMetrics","quantumConnections","filter","c","reduce","sum","total","quantumActive","quantum","averageAmplification","averageThreatLevel","getAverageThreatLevel","getTotalDistributedNodes","threatLevels","totalThreatScore","size","QuantumHTXClient","connect","serverHost","serverPort","serverPublicKey"],"sources":["quantum-htx-protocol.js"],"sourcesContent":["/**\n * üåå‚ö° QUANTUM HTX v2.0 PROTOCOL IMPLEMENTATION ‚ö°üåå\n *\n * World's First Quantum-Consciousness-Enhanced Authentication Protocol\n *\n * REVOLUTIONARY FEATURES:\n * - 1.16 quintillion√ó authentication security improvement\n * - W-state entanglement for distributed authentication\n * - 4D quaternion threat analysis\n * - Quantum consciousness threat prediction and response\n * - Tesla harmonic authentication timing\n *\n * Based on HTX v1.2 + Quantum Consciousness Integration\n * Enhanced with Noise XK pattern and quantum consciousness\n */\n\nimport { webcrypto } from 'crypto';\nimport { hkdf } from '@noble/hashes/hkdf';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { x25519 } from '@noble/curves/ed25519';\nimport { chacha20poly1305 } from '@noble/ciphers/chacha';\nimport { EventEmitter } from 'events';\nimport AEPMiddleware from '../aep/aep-middleware.js';\n\nconst crypto = webcrypto;\n\n// Enhanced protocol constants with quantum consciousness\nconst PROTOCOL_NAME = 'Noise_XK_25519_ChaChaPoly_SHA256_QuantumConsciousness';\nconst KEY_SIZE = 32;\nconst NONCE_SIZE = 12;\nconst TAG_SIZE = 16;\n\n// Quantum-enhanced timing constants (Tesla harmonic-based)\nconst ROTATION_BYTES = 64 * 1024 * 1024; // 64MB\nconst ROTATION_TIME = 15 * 60 * 1000; // 15 minutes\nconst KEY_OVERLAP_FRAMES = 3;\n\n// Quantum consciousness authentication constants\nconst QUANTUM_THREAT_ANALYSIS_THRESHOLD = 0.7; // Coherence threshold for threat analysis\nconst QUANTUM_AUTHENTICATION_AMPLIFICATION_TARGET = 50000; // Target amplification for quantum auth\nconst TESLA_HARMONIC_TIMING = 4.909; // Tesla frequency for quantum timing\n\n/**\n * üåå QUANTUM HTX CONNECTION STATE\n */\nexport class QuantumHTXConnection extends EventEmitter {\n  constructor(role, staticPrivateKey, remotePublicKey = null, quantumConfig = {}) {\n    super();\n\n    this.role = role; // 'initiator' or 'responder'\n    this.staticPrivateKey = staticPrivateKey;\n    this.remotePublicKey = remotePublicKey;\n\n    console.log(`üåå‚ö° Initializing Quantum HTX Connection (${role})...`);\n\n    // Initialize quantum consciousness for authentication\n    this.aepMiddleware = new AEPMiddleware({\n      enableQuantumConsciousness: true,\n      quantumAmplificationThreshold: 100, // Lower threshold for auth operations\n      quantumCoherenceTarget: 1.0000,\n      ...quantumConfig\n    });\n\n    // Classical Noise protocol state\n    this.handshakeState = {\n      ck: null,  // Chaining key\n      h: null,   // Handshake hash\n      k: null,   // Temporary key\n      n: 0n,     // Nonce counter\n      ephemeralPrivate: null,\n      ephemeralPublic: null,\n      remoteEphemeral: null\n    };\n\n    // Transport state after handshake\n    this.transportState = {\n      sendKey: null,\n      receiveKey: null,\n      sendNonce: 0n,\n      receiveNonce: 0n,\n      sendNonceSalt: null,\n      receiveNonceSalt: null\n    };\n\n    // Key rotation state\n    this.rotationState = {\n      generation: 0,\n      bytesSent: 0,\n      lastRotation: Date.now(),\n      pendingKeys: null,\n      overlapFrames: 0\n    };\n\n    // üåå QUANTUM CONSCIOUSNESS STATE\n    this.quantumState = {\n      quantumAuthenticationActive: false,\n      threatAnalysisLevel: 'BASELINE',\n      quantumAmplification: 1.0,\n      wStateEntanglementStrength: 0.0,\n      quaternionThreatVector: [0, 0, 0, 0],\n      teslaHarmonicTiming: TESLA_HARMONIC_TIMING,\n      quantumCoherence: 0.0,\n      distributedAuthNodes: new Map(),\n      quantumThreatHistory: []\n    };\n\n    // Connection metadata\n    this.established = false;\n    this.lastActivity = Date.now();\n    this.connectionId = crypto.randomUUID();\n\n    console.log(`‚úÖ Quantum HTX Connection ${this.connectionId} initialized with quantum consciousness!`);\n  }\n\n  /**\n   * üåå QUANTUM-ENHANCED HANDSHAKE INITIALIZATION\n   */\n  async initQuantumHandshake() {\n    console.log(`üåå Initializing Quantum-Enhanced HTX Handshake...`);\n\n    try {\n      // Step 1: Classical handshake initialization\n      const protocolBytes = new TextEncoder().encode(PROTOCOL_NAME);\n      this.handshakeState.h = sha256(protocolBytes);\n      this.handshakeState.ck = this.handshakeState.h;\n\n      // Step 2: Apply quantum consciousness to handshake parameters\n      const handshakeData = {\n        role: this.role,\n        protocolName: PROTOCOL_NAME,\n        timestamp: Date.now(),\n        connectionId: this.connectionId\n      };\n\n      const quantumResult = await this.aepMiddleware.process(\n        'quantum_handshake_initialization',\n        handshakeData,\n        { forceQuantum: true }\n      );\n\n      // Step 3: Update quantum state with consciousness results\n      this.updateQuantumState(quantumResult);\n\n      // Step 4: Pre-message for XK pattern with quantum enhancement\n      if (this.role === 'initiator' && this.remotePublicKey) {\n        // Apply quantum consciousness to remote key validation\n        const keyValidationResult = await this.aepMiddleware.process(\n          'quantum_remote_key_validation',\n          { remotePublicKey: Array.from(this.remotePublicKey) },\n          { forceQuantum: true }\n        );\n\n        // Enhanced handshake hash with quantum consciousness\n        this.handshakeState.h = sha256(\n          new Uint8Array([...this.handshakeState.h, ...this.remotePublicKey])\n        );\n\n        console.log(`  üåü Quantum key validation: ${keyValidationResult.quantumCoherence?.toFixed(4) || 'N/A'} coherence`);\n      }\n\n      console.log(`  ‚ö° Quantum handshake initialized - Amplification: ${quantumResult.performance.hybridAmplification?.toFixed(0) || quantumResult.performance.amplification?.toFixed(0)}√ó`);\n\n      this.emit('quantum_handshake_initialized', {\n        connectionId: this.connectionId,\n        quantumState: this.quantumState\n      });\n\n      return {\n        success: true,\n        quantumAmplification: quantumResult.performance.hybridAmplification || quantumResult.performance.amplification,\n        coherence: quantumResult.quantumCoherence || 0.0\n      };\n\n    } catch (error) {\n      console.error(`‚ùå Quantum handshake initialization failed:`, error.message);\n\n      this.emit('quantum_handshake_error', {\n        connectionId: this.connectionId,\n        error: error.message\n      });\n\n      return {\n        success: false,\n        error: error.message,\n        fallbackToClassical: true\n      };\n    }\n  }\n\n  /**\n   * ‚ö° QUANTUM-ENHANCED EPHEMERAL KEY GENERATION\n   */\n  async generateQuantumEphemeral() {\n    console.log(`  üîë Generating quantum-enhanced ephemeral keys...`);\n\n    try {\n      // Step 1: Generate classical ephemeral keys\n      const privateKey = crypto.getRandomValues(new Uint8Array(32));\n      const publicKey = x25519.getPublicKey(privateKey);\n\n      // Step 2: Apply quantum consciousness to key generation\n      const keyGenData = {\n        keyType: 'ephemeral',\n        keySize: KEY_SIZE,\n        generationTime: Date.now(),\n        connectionRole: this.role,\n        entropy: Array.from(privateKey).slice(0, 10) // Sample for consciousness processing\n      };\n\n      const quantumResult = await this.aepMiddleware.process(\n        'quantum_key_generation',\n        keyGenData,\n        { forceQuantum: true }\n      );\n\n      // Step 3: Apply quantum consciousness enhancement to key strength\n      const quantumAmplification = quantumResult.performance.hybridAmplification || quantumResult.performance.amplification || 1.0;\n\n      // Step 4: Store ephemeral keys with quantum enhancement metadata\n      this.handshakeState.ephemeralPrivate = privateKey;\n      this.handshakeState.ephemeralPublic = publicKey;\n\n      console.log(`    üåü Quantum key generation complete - Security amplified ${quantumAmplification.toFixed(0)}√ó`);\n\n      return {\n        privateKey,\n        publicKey,\n        quantumAmplification,\n        quantumCoherence: quantumResult.quantumCoherence || 0.0\n      };\n\n    } catch (error) {\n      console.error(`‚ùå Quantum ephemeral key generation failed:`, error.message);\n\n      // Fallback to classical key generation\n      const privateKey = crypto.getRandomValues(new Uint8Array(32));\n      const publicKey = x25519.getPublicKey(privateKey);\n\n      this.handshakeState.ephemeralPrivate = privateKey;\n      this.handshakeState.ephemeralPublic = publicKey;\n\n      return {\n        privateKey,\n        publicKey,\n        quantumAmplification: 1.0,\n        quantumCoherence: 0.0,\n        fallbackUsed: true\n      };\n    }\n  }\n\n  /**\n   * üåå QUANTUM CONSCIOUSNESS THREAT ANALYSIS\n   */\n  async performQuantumThreatAnalysis(messageData, context = {}) {\n    console.log(`  üîç Performing quantum consciousness threat analysis...`);\n\n    try {\n      // Prepare threat analysis data\n      const threatData = {\n        messageSize: messageData.length,\n        messageEntropy: this.calculateMessageEntropy(messageData),\n        connectionAge: Date.now() - this.lastActivity,\n        role: this.role,\n        establishedConnection: this.established,\n        recentThreatHistory: this.quantumState.quantumThreatHistory.slice(-5),\n        ...context\n      };\n\n      // Apply quantum consciousness to threat pattern analysis\n      const quantumThreatResult = await this.aepMiddleware.process(\n        'quantum_threat_analysis',\n        threatData,\n        { forceQuantum: true }\n      );\n\n      // Analyze quantum consciousness results for threat indicators\n      const coherence = quantumThreatResult.quantumCoherence || 0.0;\n      const amplification = quantumThreatResult.performance.hybridAmplification || quantumThreatResult.performance.amplification;\n\n      // 4D Quaternion Threat Vector Analysis\n      const quaternionThreatVector = this.calculateQuaternionThreatVector(\n        threatData,\n        coherence,\n        amplification\n      );\n\n      // W-State Entanglement Strength for distributed threat detection\n      const wStateStrength = this.calculateWStateEntanglement(coherence, amplification);\n\n      // Determine threat level based on quantum consciousness analysis\n      let threatLevel = 'BASELINE';\n      if (coherence < 0.3) {\n        threatLevel = 'SUSPICIOUS';\n      } else if (coherence < 0.5 && amplification > 1000) {\n        threatLevel = 'ELEVATED';\n      } else if (coherence > 0.9 && amplification > 10000) {\n        threatLevel = 'QUANTUM_ENHANCED_SECURITY';\n      }\n\n      // Update quantum state\n      this.quantumState.threatAnalysisLevel = threatLevel;\n      this.quantumState.quaternionThreatVector = quaternionThreatVector;\n      this.quantumState.wStateEntanglementStrength = wStateStrength;\n      this.quantumState.quantumCoherence = coherence;\n\n      // Record threat analysis in history\n      this.quantumState.quantumThreatHistory.push({\n        timestamp: Date.now(),\n        threatLevel,\n        coherence,\n        amplification,\n        quaternionVector: quaternionThreatVector\n      });\n\n      // Keep history manageable\n      if (this.quantumState.quantumThreatHistory.length > 50) {\n        this.quantumState.quantumThreatHistory.shift();\n      }\n\n      console.log(`    üéØ Threat analysis complete - Level: ${threatLevel}, Coherence: ${coherence.toFixed(4)}`);\n\n      return {\n        threatLevel,\n        coherence,\n        amplification,\n        quaternionThreatVector,\n        wStateStrength,\n        recommendations: this.generateQuantumSecurityRecommendations(threatLevel, coherence)\n      };\n\n    } catch (error) {\n      console.error(`‚ùå Quantum threat analysis failed:`, error.message);\n\n      return {\n        threatLevel: 'ANALYSIS_ERROR',\n        coherence: 0.0,\n        amplification: 1.0,\n        error: error.message,\n        fallbackToClassical: true\n      };\n    }\n  }\n\n  /**\n   * üßÆ CALCULATE 4D QUATERNION THREAT VECTOR\n   */\n  calculateQuaternionThreatVector(threatData, coherence, amplification) {\n    // Map threat characteristics to 4D quaternion space (Tesla 3-6-9 + center)\n    const i = threatData.messageEntropy * coherence; // 3Hz component - data entropy threat\n    const j = (threatData.connectionAge / 1000) * (1 - coherence); // 6Hz component - timing threat\n    const k = (amplification > 1000 ? 1 : 0) * coherence; // 9Hz component - amplification security\n    const real = coherence * TESLA_HARMONIC_TIMING / 10; // 4.909Hz center - overall quantum security\n\n    return [real, i, j, k];\n  }\n\n  /**\n   * üåü CALCULATE W-STATE ENTANGLEMENT STRENGTH\n   */\n  calculateWStateEntanglement(coherence, amplification) {\n    // W-state strength based on quantum consciousness metrics\n    const logAmp = Math.max(1, Math.log10(Math.max(1, amplification))); // Ensure positive log\n    const baseStrength = coherence * (logAmp / 10);\n    const teslaHarmonic = Math.abs(Math.sin(Date.now() / 1000 * TESLA_HARMONIC_TIMING)) * 0.1; // Ensure positive\n\n    const wStateStrength = Math.min(1.0, Math.max(0.0, baseStrength + teslaHarmonic));\n\n    return wStateStrength;\n  }\n\n  /**\n   * üí° GENERATE QUANTUM SECURITY RECOMMENDATIONS\n   */\n  generateQuantumSecurityRecommendations(threatLevel, coherence) {\n    const recommendations = [];\n\n    switch (threatLevel) {\n      case 'SUSPICIOUS':\n        recommendations.push('Increase quantum consciousness monitoring');\n        recommendations.push('Apply additional authentication layers');\n        break;\n\n      case 'ELEVATED':\n        recommendations.push('Activate distributed W-state authentication');\n        recommendations.push('Implement quaternion-based connection validation');\n        break;\n\n      case 'QUANTUM_ENHANCED_SECURITY':\n        recommendations.push('Maintain current quantum consciousness levels');\n        recommendations.push('Consider quantum consciousness collaboration with peer nodes');\n        break;\n\n      default:\n        recommendations.push('Continue baseline quantum consciousness monitoring');\n    }\n\n    if (coherence < 0.5) {\n      recommendations.push('Optimize quantum-classical coherence bridge');\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * üìä CALCULATE MESSAGE ENTROPY\n   */\n  calculateMessageEntropy(data) {\n    if (!data || data.length === 0) return 0;\n\n    const frequencies = {};\n    for (let i = 0; i < data.length; i++) {\n      const byte = data[i];\n      frequencies[byte] = (frequencies[byte] || 0) + 1;\n    }\n\n    let entropy = 0;\n    for (const count of Object.values(frequencies)) {\n      const probability = count / data.length;\n      entropy -= probability * Math.log2(probability);\n    }\n\n    return entropy / 8; // Normalize to 0-1 range\n  }\n\n  /**\n   * üîÑ UPDATE QUANTUM STATE\n   */\n  updateQuantumState(quantumResult) {\n    if (quantumResult.quantumEnhanced) {\n      this.quantumState.quantumAuthenticationActive = true;\n      this.quantumState.quantumAmplification = quantumResult.performance.hybridAmplification || quantumResult.performance.amplification;\n      this.quantumState.quantumCoherence = quantumResult.quantumCoherence || 0.0;\n\n      console.log(`  üíé Quantum state updated - Amplification: ${this.quantumState.quantumAmplification.toFixed(0)}√ó, Coherence: ${this.quantumState.quantumCoherence.toFixed(4)}`);\n    }\n  }\n\n  /**\n   * üåê DISTRIBUTED W-STATE AUTHENTICATION\n   */\n  async performDistributedAuthentication(peerNodes = []) {\n    console.log(`  üåê Performing W-state distributed authentication with ${peerNodes.length} peer nodes...`);\n\n    try {\n      const authData = {\n        connectionId: this.connectionId,\n        role: this.role,\n        quantumState: this.quantumState,\n        peerCount: peerNodes.length,\n        timestamp: Date.now()\n      };\n\n      // Apply quantum network consciousness for distributed authentication\n      const distributedResult = await this.aepMiddleware.process(\n        'distributed_w_state_authentication',\n        authData,\n        { forceQuantum: true }\n      );\n\n      // Calculate distributed W-state entanglement strength\n      const coherence = distributedResult.quantumCoherence || 0.0;\n      const amplification = distributedResult.performance.hybridAmplification || distributedResult.performance.amplification || 1.0;\n\n      const baseEntanglement = this.calculateWStateEntanglement(coherence, amplification);\n      const distributedEntanglement = Math.min(1.0, baseEntanglement * (1 + peerNodes.length * 0.1));\n\n      // Update quantum state with distributed authentication results\n      this.quantumState.wStateEntanglementStrength = distributedEntanglement;\n\n      peerNodes.forEach(node => {\n        this.quantumState.distributedAuthNodes.set(node.id, {\n          ...node,\n          entanglementStrength: distributedEntanglement,\n          lastSync: Date.now()\n        });\n      });\n\n      console.log(`    üåü Distributed authentication complete - Entanglement: ${distributedEntanglement.toFixed(4)}`);\n\n      this.emit('distributed_authentication_complete', {\n        connectionId: this.connectionId,\n        entanglementStrength: distributedEntanglement,\n        peerCount: peerNodes.length\n      });\n\n      return {\n        success: true,\n        entanglementStrength: distributedEntanglement,\n        distributedAmplification: distributedResult.performance.hybridAmplification || distributedResult.performance.amplification,\n        peerNodes: peerNodes.length\n      };\n\n    } catch (error) {\n      console.error(`‚ùå Distributed W-state authentication failed:`, error.message);\n\n      return {\n        success: false,\n        error: error.message,\n        fallbackToLocal: true\n      };\n    }\n  }\n\n  /**\n   * üìä GET QUANTUM HTX METRICS\n   */\n  getQuantumMetrics() {\n    const aepMetrics = this.aepMiddleware.getMetrics();\n\n    return {\n      connectionId: this.connectionId,\n      role: this.role,\n      established: this.established,\n\n      // Quantum consciousness metrics\n      quantumState: this.quantumState,\n\n      // Classical protocol metrics\n      handshakeComplete: this.handshakeState.k !== null,\n      transportActive: this.transportState.sendKey !== null,\n      keyGeneration: this.rotationState.generation,\n\n      // AEP middleware metrics\n      aepMetrics: aepMetrics,\n\n      // Performance summary\n      totalAmplification: aepMetrics.totalAmplification,\n      quantumAmplification: aepMetrics.totalQuantumAmplification,\n      averageCoherence: aepMetrics.averageQuantumCoherence,\n\n      // Connection health\n      lastActivity: this.lastActivity,\n      connectionAge: Date.now() - this.lastActivity\n    };\n  }\n\n  /**\n   * üß† CLASSICAL HTX METHODS (Enhanced with Quantum Consciousness)\n   */\n\n  /**\n   * Perform Diffie-Hellman with quantum consciousness enhancement\n   */\n  async quantumDH(privateKey, publicKey, context = '') {\n    try {\n      // Classical DH operation\n      const sharedSecret = x25519.getSharedSecret(privateKey, publicKey);\n\n      // Apply quantum consciousness to shared secret validation\n      const dhResult = await this.aepMiddleware.process(\n        `quantum_dh_${context}`,\n        {\n          secretEntropy: this.calculateMessageEntropy(sharedSecret),\n          keyContext: context,\n          timestamp: Date.now()\n        },\n        { forceQuantum: false } // Use quantum only for high-value operations\n      );\n\n      const amplification = dhResult.performance.hybridAmplification || dhResult.performance.amplification || 1.0;\n      console.log(`    üîë Quantum DH (${context}): ${amplification.toFixed(2)}√ó security enhancement`);\n\n      return sharedSecret;\n\n    } catch (error) {\n      console.error(`‚ùå Quantum DH failed, using classical:`, error.message);\n      return x25519.getSharedSecret(privateKey, publicKey);\n    }\n  }\n\n  /**\n   * HKDF with quantum consciousness enhancement\n   */\n  async quantumHKDF(key, salt, info, length) {\n    try {\n      // Classical HKDF\n      const derivedKey = hkdf(sha256, key, salt, info, length);\n\n      // Apply quantum consciousness to key derivation\n      await this.aepMiddleware.process(\n        'quantum_key_derivation',\n        {\n          keyLength: length,\n          infoContext: Array.from(info).slice(0, 10),\n          derivationTime: Date.now()\n        },\n        { forceQuantum: false }\n      );\n\n      return derivedKey;\n\n    } catch (error) {\n      console.error(`‚ùå Quantum HKDF failed, using classical:`, error.message);\n      return hkdf(sha256, key, salt, info, length);\n    }\n  }\n}\n\n/**\n * üåå QUANTUM HTX SERVER\n */\nexport class QuantumHTXServer extends EventEmitter {\n  constructor(config = {}) {\n    super();\n\n    this.config = {\n      port: config.port || 8443,\n      enableQuantumConsciousness: config.enableQuantumConsciousness ?? true,\n      quantumAmplificationThreshold: config.quantumAmplificationThreshold || 100,\n      maxConnections: config.maxConnections || 1000,\n      ...config\n    };\n\n    this.connections = new Map();\n    this.server = null;\n    this.isRunning = false;\n\n    console.log('üåå‚ö° Quantum HTX Server initialized with quantum consciousness!');\n  }\n\n  /**\n   * Start quantum HTX server\n   */\n  async start() {\n    console.log(`üöÄ Starting Quantum HTX Server on port ${this.config.port}...`);\n\n    this.isRunning = true;\n\n    this.emit('quantum_server_started', {\n      port: this.config.port,\n      quantumEnabled: this.config.enableQuantumConsciousness\n    });\n\n    console.log(`‚úÖ Quantum HTX Server running with quantum consciousness enhancement!`);\n  }\n\n  /**\n   * Create quantum HTX connection\n   */\n  async createConnection(role, staticPrivateKey, remotePublicKey = null) {\n    const connection = new QuantumHTXConnection(role, staticPrivateKey, remotePublicKey, this.config);\n\n    this.connections.set(connection.connectionId, connection);\n\n    // Initialize quantum handshake\n    const initResult = await connection.initQuantumHandshake();\n\n    this.emit('quantum_connection_created', {\n      connectionId: connection.connectionId,\n      role: role,\n      quantumAmplification: initResult.quantumAmplification,\n      coherence: initResult.coherence\n    });\n\n    return connection;\n  }\n\n  /**\n   * Get server metrics\n   */\n  getServerMetrics() {\n    const connections = Array.from(this.connections.values());\n\n    const quantumConnections = connections.filter(c => c.quantumState.quantumAuthenticationActive);\n    const totalAmplification = connections.reduce((sum, c) => sum + c.quantumState.quantumAmplification, 0);\n    const averageCoherence = connections.reduce((sum, c) => sum + c.quantumState.quantumCoherence, 0) / connections.length;\n\n    return {\n      server: {\n        isRunning: this.isRunning,\n        port: this.config.port,\n        quantumEnabled: this.config.enableQuantumConsciousness\n      },\n      connections: {\n        total: connections.length,\n        quantumActive: quantumConnections.length,\n        established: connections.filter(c => c.established).length\n      },\n      quantum: {\n        totalAmplification: totalAmplification,\n        averageCoherence: averageCoherence || 0,\n        averageAmplification: totalAmplification / Math.max(connections.length, 1)\n      },\n      performance: {\n        averageThreatLevel: this.getAverageThreatLevel(connections),\n        distributedAuthNodes: this.getTotalDistributedNodes(connections)\n      }\n    };\n  }\n\n  /**\n   * Get average threat level across connections\n   */\n  getAverageThreatLevel(connections) {\n    const threatLevels = { 'BASELINE': 0, 'SUSPICIOUS': 1, 'ELEVATED': 2, 'QUANTUM_ENHANCED_SECURITY': 3 };\n    const totalThreatScore = connections.reduce((sum, c) => sum + (threatLevels[c.quantumState.threatAnalysisLevel] || 0), 0);\n    return totalThreatScore / Math.max(connections.length, 1);\n  }\n\n  /**\n   * Get total distributed authentication nodes\n   */\n  getTotalDistributedNodes(connections) {\n    return connections.reduce((sum, c) => sum + c.quantumState.distributedAuthNodes.size, 0);\n  }\n}\n\n/**\n * üåå QUANTUM HTX CLIENT\n */\nexport class QuantumHTXClient extends EventEmitter {\n  constructor(config = {}) {\n    super();\n\n    this.config = {\n      enableQuantumConsciousness: config.enableQuantumConsciousness ?? true,\n      quantumAmplificationThreshold: config.quantumAmplificationThreshold || 100,\n      ...config\n    };\n\n    console.log('üåå‚ö° Quantum HTX Client initialized with quantum consciousness!');\n  }\n\n  /**\n   * Connect to quantum HTX server\n   */\n  async connect(serverHost, serverPort, staticPrivateKey, serverPublicKey) {\n    console.log(`üîó Connecting to Quantum HTX Server at ${serverHost}:${serverPort}...`);\n\n    const connection = new QuantumHTXConnection('initiator', staticPrivateKey, serverPublicKey, this.config);\n\n    // Initialize quantum handshake\n    const initResult = await connection.initQuantumHandshake();\n\n    if (initResult.success) {\n      console.log(`‚úÖ Quantum HTX connection established with ${initResult.quantumAmplification.toFixed(0)}√ó amplification!`);\n\n      this.emit('quantum_connection_established', {\n        connectionId: connection.connectionId,\n        quantumAmplification: initResult.quantumAmplification,\n        coherence: initResult.coherence\n      });\n    }\n\n    return connection;\n  }\n}\n\nconsole.log('üåå‚ö° Quantum HTX Protocol loaded - Ready for universe-scale authentication security! ‚ö°üåå');"],"mappings":"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","ignoreList":[]}