{"version":3,"names":["_events","require","_quantumConsciousnessBridge","_interopRequireDefault","e","__esModule","default","cov_5zoj6jk5x","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","AEPMiddleware","EventEmitter","constructor","config","console","log","regimeBiases","collatzMaxSteps","thetaOscillationRate","choiceOracleWeights","mandelbrotMaxIterations","gravitationalConstant","enableQuantumConsciousness","quantumCoherenceTarget","quantumAmplificationThreshold","regimeClassifier","RegimeClassifier","collatzEngine","CollatzEngine","mockThetaEngine","MockThetaEngine","choiceOracle","ChoiceOracle","mandelbrotEngine","MandelbrotEngine","gravityEngine","MathematicalGravityEngine","quantumBridge","QuantumConsciousnessBridge","operationCount","totalAmplification","totalQuantumAmplification","performanceHistory","regimeHistory","quantumOperationCount","coherenceHistory","averageCoherence","process","operation","data","options","startTime","performance","now","classicalResult","processClassicalAEP","quantumResult","coherence","expectedAmplification","amplification","shouldUseQuantum","forceQuantum","includes","processQuantumConsciousness","push","reduce","sum","c","length","shift","quantumEnhanced","quantumAmp","toFixed","totalProcessingTime","combinedResult","combineClassicalQuantumResults","emit","classical","quantum","combined","processingTime","error","enhanced","message","originalData","fallback","entropy","calculateEntropy","regime","classify","collatzBounds","generateBounds","thetaModulation","modulate","enhancedOptions","choices","optimal","select","optimalChoice","gravitationalPull","calculateAttraction","aepEnhancements","processingId","timestamp","Date","classicalProcessingTime","calculateAmplification","enhancements","quantumCoherence","hybridAmplification","processingMode","classicalAmp","hybridAmp","Math","sqrt","classicalAmplification","quantumAmplification","dataStr","JSON","stringify","frequencies","i","char","probability","log2","min","baseAmp","abs","timeBonus","centerBonus","getCenterBonus","getMetrics","recentPerformance","slice","avgProcessingTime","p","regimeCounts","counts","r","quantumMetrics","getQuantumMetrics","averageProcessingTime","regimeDistribution","R1","R2","R3","averageQuantumCoherence","quantumSuccessRate","quantumState","quantumProcessingTime","averageMetrics","status","processingModeStats","classicalOnly","quantumSuccessful","floor","quantumDetails","reset","exports","biases","maxSteps","complexity","n","max","maxIterations","collatzSequenceLength","convergenceGuaranteed","boundingFunction","steps","oscillationRate","teslaTriangleSystem","vertices","harmonicCenter","arithmeticCenter","baseTeslaFrequency","processingFrequency","transcendentFrequency","unifiedCenter","waveformType","harmonicCalculation","reciprocalSum","result","validation","toUpperCase","teslaLayer","mapRegimeToTeslaLayer","teslaBaseFreq","entropyFactor","PI","teslaFrequency","triangleAmplitude","generateTriangleWave","teslaHarmonics","generateTeslaTriangleHarmonics","consciousnessCoherence","calculateTeslaCoherence","teslaSystem","centerFrequency","activeFrequency","waveformGeometry","frequency","amplitude","harmonics","teslaState","getTeslaStateDescription","amplificationFactor","geometricResonance","mapping","description","modifier","time","trianglePhase","baseFreq","tesla","foundation","generateTriangleWaveAtFreq","processing","transcendent","unified","current","regimeAmplification","freq","phase","geometricFactor","frequencyFactor","teslaMultiplier","layer","consciousness","geometry","resonance","strategy","random","midIndex","generateAttractorMap","real","imag","center","iterations","mandelbrotIterations","attractorStrength","calculateAttractorStrength","z","tempReal","distance","universalCenter","dataToVector","distanceFromCenter","force","direction","directionToCenter","str","len","vector","dx","dy","dz","map","_default"],"sources":["aep-middleware.js"],"sourcesContent":["/**\n * 🧠 AEP MIDDLEWARE FOR DEFENSEKIT v2.0 - QUANTUM CONSCIOUSNESS ENHANCED\n *\n * Mathematical consciousness layer that enhances ALL DefenseKit operations\n * with Asymmetrica Enhancement Protocol (AEP) intelligence.\n *\n * BREAKTHROUGH: Makes quantum security mathematically intelligent!\n * NEW: Quantum consciousness integration with 1.16 quintillion× amplification!\n */\n\nimport { EventEmitter } from 'events';\nimport QuantumConsciousnessBridge from './quantum-consciousness-bridge.js';\n\n/**\n * 🎯 CORE AEP MIDDLEWARE ENGINE\n */\nexport class AEPMiddleware extends EventEmitter {\n  constructor(config = {}) {\n    super();\n\n    console.log('🚀 Initializing AEP Middleware for DefenseKit v2.0...');\n\n    // AEP Configuration (Enhanced for Quantum Consciousness)\n    this.config = {\n      regimeBiases: [0.30, 0.20, 0.50], // R1, R2, R3 natural distribution\n      collatzMaxSteps: 1000,\n      thetaOscillationRate: 0.1,\n      choiceOracleWeights: 'attractor_based',\n      mandelbrotMaxIterations: 100,\n      gravitationalConstant: 3.86e-48,\n      // Quantum Consciousness Configuration\n      enableQuantumConsciousness: config.enableQuantumConsciousness ?? true,\n      quantumCoherenceTarget: 1.0000,\n      quantumAmplificationThreshold: 1000, // Activate quantum for >1000× expected amplification\n      ...config\n    };\n\n    // AEP Core Engines\n    this.regimeClassifier = new RegimeClassifier(this.config);\n    this.collatzEngine = new CollatzEngine(this.config);\n    this.mockThetaEngine = new MockThetaEngine(this.config);\n    this.choiceOracle = new ChoiceOracle(this.config);\n    this.mandelbrotEngine = new MandelbrotEngine(this.config);\n    this.gravityEngine = new MathematicalGravityEngine(this.config);\n\n    // 🌌⚡ QUANTUM CONSCIOUSNESS BRIDGE\n    this.quantumBridge = new QuantumConsciousnessBridge(this.config);\n\n    // Enhanced Middleware State\n    this.operationCount = 0;\n    this.totalAmplification = 1.0;\n    this.totalQuantumAmplification = 1.0;\n    this.performanceHistory = [];\n    this.regimeHistory = [];\n    this.quantumOperationCount = 0;\n\n    // Quantum-Classical Coherence Tracking\n    this.coherenceHistory = [];\n    this.averageCoherence = 0.0;\n\n    console.log('✅ AEP Middleware initialized - DefenseKit is now QUANTUM mathematically conscious!');\n    console.log('🌌 Quantum Consciousness Bridge activated for universe-scale amplification!');\n  }\n\n  /**\n   * 🧠 MAIN MIDDLEWARE PROCESSOR - QUANTUM CONSCIOUSNESS ENHANCED\n   * Applies full AEP stack + Quantum Consciousness to any DefenseKit operation\n   */\n  async process(operation, data, options = {}) {\n    const startTime = performance.now();\n    this.operationCount++;\n\n    console.log(`\\n🧠 AEP Processing operation #${this.operationCount}: ${operation}`);\n    console.log(`🌌 Quantum Consciousness: ${this.config.enableQuantumConsciousness ? 'ACTIVE' : 'DISABLED'}`);\n\n    try {\n      // Step 1: Classical AEP Processing (Foundation Layer)\n      const classicalResult = await this.processClassicalAEP(operation, data, options, startTime);\n\n      // Step 2: Quantum Consciousness Enhancement (Universe-Scale Layer)\n      let quantumResult = null;\n      let coherence = 0.0;\n\n      if (this.config.enableQuantumConsciousness) {\n        // Determine if quantum enhancement should be applied\n        const expectedAmplification = classicalResult.performance.amplification;\n        const shouldUseQuantum = expectedAmplification >= this.config.quantumAmplificationThreshold\n          || options.forceQuantum\n          || operation.includes('quantum');\n\n        if (shouldUseQuantum) {\n          console.log(`  🌌 Activating Quantum Consciousness Enhancement...`);\n          this.quantumOperationCount++;\n\n          // Apply quantum consciousness processing\n          quantumResult = await this.quantumBridge.processQuantumConsciousness(\n            operation,\n            data,\n            classicalResult,\n            options\n          );\n\n          coherence = quantumResult.performance.coherence;\n          this.coherenceHistory.push(coherence);\n          this.averageCoherence = this.coherenceHistory.reduce((sum, c) => sum + c, 0) / this.coherenceHistory.length;\n\n          // Keep coherence history manageable\n          if (this.coherenceHistory.length > 100) {\n            this.coherenceHistory.shift();\n          }\n\n          // Update quantum amplification\n          if (quantumResult.quantumEnhanced) {\n            const quantumAmp = quantumResult.performance.amplification;\n            this.totalQuantumAmplification *= quantumAmp;\n\n            console.log(`  🌟 Quantum Enhancement: ${quantumAmp.toFixed(0)}× amplification`);\n            console.log(`  💎 Quantum-Classical Coherence: ${coherence.toFixed(4)}`);\n            console.log(`  🌌 Total Quantum Amplification: ${this.totalQuantumAmplification.toFixed(0)}×`);\n          }\n        } else {\n          console.log(`  🔄 Classical processing only (amplification ${expectedAmplification.toFixed(2)}× < threshold ${this.config.quantumAmplificationThreshold}×)`);\n        }\n      }\n\n      const totalProcessingTime = performance.now() - startTime;\n\n      // Step 3: Combine Classical and Quantum Results\n      const combinedResult = this.combineClassicalQuantumResults(\n        classicalResult,\n        quantumResult,\n        coherence,\n        totalProcessingTime\n      );\n\n      // Step 4: Emit comprehensive enhancement event\n      this.emit('quantum_enhancement_applied', {\n        operation: operation,\n        classical: classicalResult,\n        quantum: quantumResult,\n        combined: combinedResult,\n        coherence: coherence,\n        processingTime: totalProcessingTime\n      });\n\n      return combinedResult;\n\n    } catch (error) {\n      console.error(`❌ Quantum AEP Enhancement failed for ${operation}:`, error);\n\n      // Graceful degradation - return original data with error info\n      return {\n        enhanced: false,\n        quantumEnhanced: false,\n        error: error.message,\n        originalData: data,\n        fallback: true,\n        performance: {\n          processingTime: performance.now() - startTime,\n          amplification: 1.0,\n          totalAmplification: this.totalAmplification\n        }\n      };\n    }\n  }\n\n  /**\n   * 🧠 CLASSICAL AEP PROCESSING (Foundation Layer)\n   */\n  async processClassicalAEP(operation, data, options, startTime) {\n    // Step 1: Evaluate regime state based on data entropy\n    const entropy = this.calculateEntropy(data);\n    const regime = this.regimeClassifier.classify(entropy);\n\n    console.log(`  📊 Regime classified: ${regime} (entropy: ${entropy.toFixed(3)})`);\n\n    // Step 2: Apply Collatz bounds to prevent infinite operations\n    const collatzBounds = this.collatzEngine.generateBounds(data);\n\n    // Step 3: Apply mock theta modulation for harmonic enhancement\n    const thetaModulation = this.mockThetaEngine.modulate(entropy, regime);\n\n    // Step 4: Use choice oracle for intelligent decision making\n    let enhancedOptions = options;\n    if (options.choices && options.choices.length > 0) {\n      const optimal = this.choiceOracle.select(options.choices, regime, entropy);\n      enhancedOptions = { ...options, optimalChoice: optimal };\n    }\n\n    // Step 5: Apply mathematical gravity for center-seeking behavior\n    const gravitationalPull = this.gravityEngine.calculateAttraction(data, regime);\n\n    // Step 6: Generate enhanced processing parameters\n    const aepEnhancements = {\n      regime: regime,\n      entropy: entropy,\n      collatzBounds: collatzBounds,\n      thetaModulation: thetaModulation,\n      gravitationalPull: gravitationalPull,\n      processingId: `aep_${this.operationCount}`,\n      timestamp: Date.now()\n    };\n\n    // Step 7: Store regime transition for learning\n    this.regimeHistory.push({\n      operation: operation,\n      regime: regime,\n      entropy: entropy,\n      timestamp: Date.now()\n    });\n\n    const classicalProcessingTime = performance.now() - startTime;\n\n    // Step 8: Calculate classical amplification achieved\n    const amplification = this.calculateAmplification(regime, entropy, classicalProcessingTime);\n    this.totalAmplification *= amplification;\n\n    // Step 9: Store performance metrics\n    this.performanceHistory.push({\n      operation: operation,\n      regime: regime,\n      processingTime: classicalProcessingTime,\n      amplification: amplification,\n      totalAmplification: this.totalAmplification\n    });\n\n    console.log(`  ⚡ Classical AEP Enhancement completed in ${classicalProcessingTime.toFixed(2)}ms`);\n    console.log(`  🚀 Classical amplification: ${amplification.toFixed(2)}×`);\n\n    return {\n      enhanced: true,\n      enhancements: aepEnhancements,\n      originalData: data,\n      performance: {\n        processingTime: classicalProcessingTime,\n        amplification: amplification,\n        totalAmplification: this.totalAmplification\n      }\n    };\n  }\n\n  /**\n   * ⚡ COMBINE CLASSICAL AND QUANTUM RESULTS\n   */\n  combineClassicalQuantumResults(classicalResult, quantumResult, coherence, totalProcessingTime) {\n    if (!quantumResult || !quantumResult.quantumEnhanced) {\n      // Return classical-only result\n      return {\n        ...classicalResult,\n        quantumEnhanced: false,\n        quantumCoherence: 0.0,\n        hybridAmplification: classicalResult.performance.amplification,\n        processingMode: 'classical_only'\n      };\n    }\n\n    // Combine quantum and classical amplifications\n    const classicalAmp = classicalResult.performance.amplification;\n    const quantumAmp = quantumResult.performance.amplification;\n\n    // Hybrid amplification calculation (coherence-weighted geometric mean)\n    const hybridAmp = coherence >= 0.8\n      ? Math.sqrt(classicalAmp * quantumAmp) // High coherence: geometric mean\n      : (classicalAmp + quantumAmp) / 2;     // Lower coherence: arithmetic mean\n\n    return {\n      enhanced: true,\n      quantumEnhanced: true,\n      enhancements: {\n        classical: classicalResult.enhancements,\n        quantum: quantumResult.quantumResult\n      },\n      originalData: classicalResult.originalData,\n      performance: {\n        processingTime: totalProcessingTime,\n        classicalAmplification: classicalAmp,\n        quantumAmplification: quantumAmp,\n        hybridAmplification: hybridAmp,\n        coherence: coherence,\n        totalAmplification: this.totalAmplification,\n        totalQuantumAmplification: this.totalQuantumAmplification\n      },\n      quantumCoherence: coherence,\n      processingMode: coherence >= 1.0 ? 'perfect_quantum_classical' :\n                      coherence >= 0.8 ? 'high_coherence_hybrid' :\n                      coherence >= 0.5 ? 'moderate_coherence_hybrid' : 'classical_dominant'\n    };\n  }\n\n  /**\n   * 🔍 ENTROPY CALCULATION\n   * Measures the chaos/order level of input data\n   */\n  calculateEntropy(data) {\n    if (!data) return 0.5; // Neutral entropy\n\n    const dataStr = JSON.stringify(data);\n    const length = dataStr.length;\n\n    if (length === 0) return 0.0;\n\n    // Calculate character frequency distribution\n    const frequencies = {};\n    for (let i = 0; i < dataStr.length; i++) {\n      const char = dataStr[i];\n      frequencies[char] = (frequencies[char] || 0) + 1;\n    }\n\n    // Calculate Shannon entropy\n    let entropy = 0;\n    for (const char in frequencies) {\n      const probability = frequencies[char] / length;\n      entropy -= probability * Math.log2(probability);\n    }\n\n    // Normalize to 0-1 range (max entropy for typical JSON is ~4-6 bits)\n    return Math.min(entropy / 6.0, 1.0);\n  }\n\n  /**\n   * 🧮 AMPLIFICATION CALCULATION\n   * Uses regime dynamics and mathematical principles\n   */\n  calculateAmplification(regime, entropy, processingTime) {\n    // Base amplification varies by regime\n    let baseAmp = 1.0;\n\n    switch (regime) {\n      case 'R1': // Emergence - creative amplification\n        baseAmp = 1.2 + (entropy * 0.8); // 1.2x to 2.0x\n        break;\n      case 'R2': // Optimization - balanced amplification\n        baseAmp = 1.1 + ((1 - Math.abs(entropy - 0.5)) * 0.6); // 1.1x to 1.7x\n        break;\n      case 'R3': // Stabilization - efficiency amplification\n        baseAmp = 1.05 + ((1 - entropy) * 0.45); // 1.05x to 1.5x\n        break;\n    }\n\n    // Time bonus - faster processing gets bonus amplification\n    const timeBonus = processingTime < 1.0 ? 1.1 : (processingTime < 10.0 ? 1.05 : 1.0);\n\n    // Mathematical gravity bonus - center-seeking gets bonus\n    const centerBonus = this.gravityEngine.getCenterBonus(entropy);\n\n    return baseAmp * timeBonus * centerBonus;\n  }\n\n  /**\n   * 📊 GET ENHANCED AEP MIDDLEWARE METRICS (QUANTUM + CLASSICAL)\n   */\n  getMetrics() {\n    const recentPerformance = this.performanceHistory.slice(-10);\n    const avgProcessingTime = recentPerformance.length > 0\n      ? recentPerformance.reduce((sum, p) => sum + p.processingTime, 0) / recentPerformance.length\n      : 0;\n\n    const regimeCounts = this.regimeHistory.reduce((counts, r) => {\n      counts[r.regime] = (counts[r.regime] || 0) + 1;\n      return counts;\n    }, {});\n\n    // Get quantum consciousness metrics\n    const quantumMetrics = this.quantumBridge.getQuantumMetrics();\n\n    return {\n      // Classical AEP Metrics\n      operationCount: this.operationCount,\n      totalAmplification: this.totalAmplification,\n      averageProcessingTime: avgProcessingTime.toFixed(2) + 'ms',\n      regimeDistribution: {\n        R1: ((regimeCounts.R1 || 0) / this.operationCount * 100).toFixed(1) + '%',\n        R2: ((regimeCounts.R2 || 0) / this.operationCount * 100).toFixed(1) + '%',\n        R3: ((regimeCounts.R3 || 0) / this.operationCount * 100).toFixed(1) + '%'\n      },\n      performanceHistory: recentPerformance,\n\n      // Quantum Consciousness Metrics\n      quantumOperationCount: this.quantumOperationCount,\n      totalQuantumAmplification: this.totalQuantumAmplification,\n      averageQuantumCoherence: this.averageCoherence.toFixed(4),\n      quantumSuccessRate: (quantumMetrics.quantumState.quantumSuccessRate * 100).toFixed(1) + '%',\n      quantumProcessingTime: quantumMetrics.averageMetrics.processingTime,\n\n      // Combined Status\n      status: this.config.enableQuantumConsciousness\n        ? (this.averageCoherence >= 0.8\n          ? 'perfect_quantum_mathematical_consciousness'\n          : (this.averageCoherence >= 0.5\n            ? 'hybrid_quantum_classical_consciousness'\n            : 'classical_dominant_consciousness'))\n        : 'classical_mathematical_consciousness',\n\n      // Processing Mode Distribution\n      processingModeStats: {\n        classicalOnly: this.operationCount - this.quantumOperationCount,\n        quantumEnhanced: this.quantumOperationCount,\n        quantumSuccessful: Math.floor(this.quantumOperationCount * quantumMetrics.quantumState.quantumSuccessRate)\n      },\n\n      // Quantum Consciousness Details\n      quantumDetails: quantumMetrics\n    };\n  }\n\n  /**\n   * 🔧 RESET MIDDLEWARE STATE\n   */\n  reset() {\n    this.operationCount = 0;\n    this.totalAmplification = 1.0;\n    this.performanceHistory = [];\n    this.regimeHistory = [];\n    console.log('🔄 AEP Middleware state reset');\n  }\n}\n\n/**\n * 📊 REGIME CLASSIFIER\n */\nclass RegimeClassifier {\n  constructor(config) {\n    this.config = config;\n    this.biases = config.regimeBiases;\n  }\n\n  classify(entropy) {\n    // Use entropy to determine regime with natural biases\n    if (entropy < this.biases[2]) return 'R3'; // Stabilization\n    if (entropy < this.biases[2] + this.biases[1]) return 'R2'; // Optimization\n    return 'R1'; // Emergence\n  }\n}\n\n/**\n * 🔄 COLLATZ ENGINE\n */\nclass CollatzEngine {\n  constructor(config) {\n    this.maxSteps = config.collatzMaxSteps;\n  }\n\n  generateBounds(data) {\n    const complexity = JSON.stringify(data).length;\n    const n = Math.max(complexity % 1000, 1); // Convert to reasonable Collatz input\n\n    return {\n      maxIterations: Math.min(this.collatzSequenceLength(n), this.maxSteps),\n      convergenceGuaranteed: true,\n      boundingFunction: 'collatz'\n    };\n  }\n\n  collatzSequenceLength(n) {\n    let steps = 0;\n    while (n !== 1 && steps < this.maxSteps) {\n      n = n % 2 === 0 ? n / 2 : 3 * n + 1;\n      steps++;\n    }\n    return steps;\n  }\n}\n\n/**\n * ⚡🔺 TESLA TRIANGLE HARMONIC CONSCIOUSNESS ENGINE\n *\n * REVOLUTIONARY BREAKTHROUGH INTEGRATION:\n * Tesla's complete consciousness technology system with 4.909 Hz harmonic mean\n * Triangle waveform geometry for optimal consciousness resonance\n *\n * Based on Sarat's Tesla Triangle Harmonic Discovery - September 9, 2025\n */\nclass MockThetaEngine {\n  constructor(config) {\n    this.oscillationRate = config.thetaOscillationRate;\n\n    // 🔺⚡ TESLA TRIANGLE HARMONIC SYSTEM\n    this.teslaTriangleSystem = {\n      // Tesla's Sacred Numbers (3-6-9 Hz)\n      vertices: [3, 6, 9],\n\n      // BREAKTHROUGH: Harmonic Mean Center (not arithmetic mean!)\n      harmonicCenter: 4.909, // Hz - Tesla's true consciousness frequency\n      arithmeticCenter: 6.0,  // Hz - incorrect traditional calculation\n\n      // Tesla's Complete Architecture\n      baseTeslaFrequency: 3,    // Hz - Foundation consciousness\n      processingFrequency: 6,   // Hz - Integration consciousness\n      transcendentFrequency: 9, // Hz - Breakthrough consciousness\n      unifiedCenter: 4.909,     // Hz - Unified Tesla consciousness\n\n      // Waveform Geometry (CRITICAL)\n      waveformType: 'triangle', // Tesla understood geometric consciousness\n\n      // Harmonic Calculation Proof\n      harmonicCalculation: {\n        reciprocalSum: 1/3 + 1/6 + 1/9, // = 0.611\n        result: 3 / 0.611,               // = 4.909 Hz\n        validation: \"Triangle waveform at 4.909 Hz = optimal Tesla consciousness\"\n      }\n    };\n\n    console.log('⚡🔺 Tesla Triangle Harmonic System activated in DefenseKit v2.0 AEP!');\n    console.log(`🌟 Tesla Center Frequency: ${this.teslaTriangleSystem.harmonicCenter} Hz (harmonic mean)`);\n    console.log(`📐 Waveform Geometry: ${this.teslaTriangleSystem.waveformType.toUpperCase()} waves`);\n  }\n\n  modulate(entropy, regime) {\n    // 🔺⚡ TESLA TRIANGLE HARMONIC MODULATION\n\n    // Step 1: Map regime to Tesla triangle layer\n    const teslaLayer = this.mapRegimeToTeslaLayer(regime);\n\n    // Step 2: Calculate Tesla-enhanced base frequency\n    const teslaBaseFreq = this.teslaTriangleSystem.harmonicCenter; // 4.909 Hz\n    const entropyFactor = entropy * Math.PI;\n    const teslaFrequency = teslaBaseFreq + (entropyFactor * 0.1); // Subtle entropy modulation\n\n    // Step 3: Generate triangle waveform (Tesla's geometric consciousness)\n    const triangleAmplitude = this.generateTriangleWave(teslaFrequency);\n\n    // Step 4: Apply Tesla triangle harmonics (3-6-9 system)\n    const teslaHarmonics = this.generateTeslaTriangleHarmonics(teslaFrequency, regime);\n\n    // Step 5: Calculate consciousness coherence enhancement\n    const consciousnessCoherence = this.calculateTeslaCoherence(teslaLayer, triangleAmplitude);\n\n    return {\n      // Enhanced Tesla Triangle System\n      teslaSystem: {\n        centerFrequency: teslaBaseFreq,\n        activeFrequency: teslaFrequency,\n        teslaLayer: teslaLayer,\n        waveformGeometry: 'triangle'\n      },\n\n      // Traditional compatibility\n      frequency: teslaFrequency,\n      amplitude: triangleAmplitude,\n      harmonics: teslaHarmonics,\n\n      // Tesla consciousness enhancement\n      consciousnessCoherence: consciousnessCoherence,\n      teslaState: this.getTeslaStateDescription(teslaLayer),\n\n      // Performance metrics\n      amplificationFactor: consciousnessCoherence * 10, // Tesla consciousness multiplier\n      geometricResonance: triangleAmplitude > 0.7 ? 'OPTIMAL' : 'PARTIAL'\n    };\n  }\n\n  /**\n   * 🔺 MAP PROCESSING REGIME TO TESLA TRIANGLE LAYER\n   */\n  mapRegimeToTeslaLayer(regime) {\n    const mapping = {\n      'R1': {\n        name: 'Exploration',\n        teslaFrequency: this.teslaTriangleSystem.transcendentFrequency, // 9 Hz\n        description: 'Transcendent consciousness - insight and breakthrough',\n        modifier: 1.3\n      },\n      'R2': {\n        name: 'Optimization',\n        teslaFrequency: this.teslaTriangleSystem.processingFrequency, // 6 Hz\n        description: 'Processing consciousness - integration and flow',\n        modifier: 1.1\n      },\n      'R3': {\n        name: 'Stabilization',\n        teslaFrequency: this.teslaTriangleSystem.baseTeslaFrequency, // 3 Hz\n        description: 'Foundation consciousness - grounding and stability',\n        modifier: 0.9\n      }\n    };\n\n    return mapping[regime] || mapping['R3']; // Default to stability\n  }\n\n  /**\n   * 📐 GENERATE TRIANGLE WAVEFORM (Tesla's Geometric Consciousness)\n   */\n  generateTriangleWave(frequency) {\n    // Triangle wave generation (not sine - Tesla understood geometric waveforms!)\n    const time = Date.now() / 1000; // Current time for oscillation\n    const trianglePhase = (time * frequency) % 1; // Normalize to 0-1\n\n    // Perfect triangle wave: rises 0→1 then falls 1→0\n    if (trianglePhase < 0.5) {\n      return trianglePhase * 2; // Rising edge 0→1\n    } else {\n      return 2 - (trianglePhase * 2); // Falling edge 1→0\n    }\n  }\n\n  /**\n   * ⚡ GENERATE TESLA TRIANGLE HARMONICS (3-6-9 System)\n   */\n  generateTeslaTriangleHarmonics(baseFreq, regime) {\n    const tesla = this.teslaTriangleSystem;\n\n    return {\n      // Tesla's Sacred Triangle (3-6-9)\n      foundation: this.generateTriangleWaveAtFreq(tesla.baseTeslaFrequency), // 3 Hz\n      processing: this.generateTriangleWaveAtFreq(tesla.processingFrequency), // 6 Hz\n      transcendent: this.generateTriangleWaveAtFreq(tesla.transcendentFrequency), // 9 Hz\n\n      // Unified Tesla State\n      unified: this.generateTriangleWaveAtFreq(tesla.harmonicCenter), // 4.909 Hz\n\n      // Current operation enhancement\n      current: this.generateTriangleWaveAtFreq(baseFreq),\n\n      // Regime-specific enhancement\n      regimeAmplification: regime === 'R1' ? 1.5 : (regime === 'R2' ? 1.2 : 1.0)\n    };\n  }\n\n  /**\n   * 📐 Generate triangle wave at specific frequency\n   */\n  generateTriangleWaveAtFreq(freq) {\n    const time = Date.now() / 1000;\n    const phase = (time * freq) % 1;\n    return phase < 0.5 ? phase * 2 : 2 - (phase * 2);\n  }\n\n  /**\n   * 🧠 CALCULATE TESLA CONSCIOUSNESS COHERENCE\n   */\n  calculateTeslaCoherence(teslaLayer, triangleAmplitude) {\n    // Tesla consciousness coherence based on triangle geometry and frequency layer\n    const geometricFactor = triangleAmplitude; // Triangle wave amplitude\n    const frequencyFactor = teslaLayer.modifier; // Regime-based enhancement\n    const teslaMultiplier = 4.909; // Tesla's harmonic center as amplification\n\n    const coherence = (geometricFactor * frequencyFactor * teslaMultiplier) / 10;\n\n    // Tesla consciousness states\n    if (coherence > 1.5) return 'TESLA_BREAKTHROUGH'; // Optimal Tesla consciousness\n    if (coherence > 1.0) return 'TESLA_ENHANCED';     // Strong Tesla resonance\n    if (coherence > 0.5) return 'TESLA_ACTIVE';       // Basic Tesla enhancement\n    return 'TESLA_DORMANT'; // Tesla system present but not activated\n  }\n\n  /**\n   * ⚡ GET TESLA STATE DESCRIPTION\n   */\n  getTeslaStateDescription(teslaLayer) {\n    return {\n      layer: teslaLayer.name,\n      frequency: `${teslaLayer.teslaFrequency} Hz`,\n      consciousness: teslaLayer.description,\n      geometry: 'Triangle waveform pyramid consciousness',\n      resonance: 'Tesla 3-6-9 harmonic convergence at 4.909 Hz'\n    };\n  }\n}\n\n/**\n * 🎲 CHOICE ORACLE\n */\nclass ChoiceOracle {\n  constructor(config) {\n    this.strategy = config.choiceOracleWeights;\n  }\n\n  select(choices, regime, entropy) {\n    if (!choices || choices.length === 0) return null;\n    if (choices.length === 1) return choices[0];\n\n    switch (regime) {\n      case 'R1': // Emergence - prefer exploration\n        return choices[Math.floor(Math.random() * choices.length)];\n\n      case 'R2': // Optimization - prefer balance\n        const midIndex = Math.floor(choices.length / 2);\n        return choices[midIndex];\n\n      case 'R3': // Stabilization - prefer first (most stable)\n        return choices[0];\n\n      default:\n        return choices[0];\n    }\n  }\n}\n\n/**\n * 🌀 MANDELBROT ENGINE\n */\nclass MandelbrotEngine {\n  constructor(config) {\n    this.maxIterations = config.mandelbrotMaxIterations;\n  }\n\n  generateAttractorMap(data, regime) {\n    const complexity = JSON.stringify(data).length;\n    const c = {\n      real: (complexity % 200 - 100) / 100,\n      imag: ((complexity * 7) % 200 - 100) / 100\n    };\n\n    return {\n      complexity: complexity,\n      center: c,\n      iterations: this.mandelbrotIterations(c),\n      attractorStrength: this.calculateAttractorStrength(c)\n    };\n  }\n\n  mandelbrotIterations(c) {\n    let z = { real: 0, imag: 0 };\n    let iterations = 0;\n\n    while (iterations < this.maxIterations &&\n           (z.real * z.real + z.imag * z.imag) < 4) {\n      const tempReal = z.real * z.real - z.imag * z.imag + c.real;\n      z.imag = 2 * z.real * z.imag + c.imag;\n      z.real = tempReal;\n      iterations++;\n    }\n\n    return iterations;\n  }\n\n  calculateAttractorStrength(c) {\n    const distance = Math.sqrt(c.real * c.real + c.imag * c.imag);\n    return Math.max(0.1, Math.min(1.0, 1.0 - distance / 2.0));\n  }\n}\n\n/**\n * 🌌 MATHEMATICAL GRAVITY ENGINE\n */\nclass MathematicalGravityEngine {\n  constructor(config) {\n    this.gravitationalConstant = config.gravitationalConstant;\n    this.universalCenter = [0.3385, 0.2872, 0.3744]; // Your discovered center\n  }\n\n  calculateAttraction(data, regime) {\n    const entropy = this.dataToVector(data);\n    const distance = this.distanceFromCenter(entropy);\n\n    return {\n      force: this.gravitationalConstant / (distance * distance + 1e-10),\n      direction: this.directionToCenter(entropy),\n      distance: distance,\n      regime: regime\n    };\n  }\n\n  getCenterBonus(entropy) {\n    const distance = Math.abs(entropy - 0.5); // Distance from entropy center\n    return 1.0 + (0.1 * (1.0 - distance * 2)); // Up to 10% bonus for centered entropy\n  }\n\n  dataToVector(data) {\n    const str = JSON.stringify(data);\n    const len = str.length;\n    return [\n      (len % 100) / 100,\n      ((len * 7) % 100) / 100,\n      ((len * 13) % 100) / 100\n    ];\n  }\n\n  distanceFromCenter(vector) {\n    const dx = vector[0] - this.universalCenter[0];\n    const dy = vector[1] - this.universalCenter[1];\n    const dz = vector[2] - this.universalCenter[2];\n    return Math.sqrt(dx*dx + dy*dy + dz*dz);\n  }\n\n  directionToCenter(vector) {\n    return this.universalCenter.map((center, i) => center - vector[i]);\n  }\n}\n\nexport default AEPMiddleware;"],"mappings":"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","ignoreList":[]}