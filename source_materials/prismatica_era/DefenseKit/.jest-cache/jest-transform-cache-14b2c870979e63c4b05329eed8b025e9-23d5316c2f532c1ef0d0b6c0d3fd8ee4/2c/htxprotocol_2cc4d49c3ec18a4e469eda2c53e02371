88f9419592aeea7267907799edf98286
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.HTXServer = exports.HTXClient = void 0;
var
/* istanbul ignore next */
_crypto = require("crypto");
var
/* istanbul ignore next */
_hkdf = require("@noble/hashes/hkdf");
var
/* istanbul ignore next */
_sha = require("@noble/hashes/sha256");
var
/* istanbul ignore next */
_ed = require("@noble/curves/ed25519");
var
/* istanbul ignore next */
_chacha = require("@noble/ciphers/chacha");
/* istanbul ignore next */
function cov_29la0jz9sr() {
  var path = "C:\\Projects\\Betanet\\DefenseKit\\src\\htx-v2\\htx-protocol.js";
  var hash = "a64209e58b391cfc4bc0e5482f8151d5b52a21c3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\Betanet\\DefenseKit\\src\\htx-v2\\htx-protocol.js",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 24
        }
      },
      "1": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 56
        }
      },
      "2": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "3": {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 20,
          column: 21
        }
      },
      "4": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 21,
          column: 19
        }
      },
      "5": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 39
        }
      },
      "6": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "7": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 21
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 45
        }
      },
      "10": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 43
        }
      },
      "11": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 46,
          column: 6
        }
      },
      "12": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 56,
          column: 6
        }
      },
      "13": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 65,
          column: 6
        }
      },
      "14": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 29
        }
      },
      "15": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 35
        }
      },
      "16": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 76,
          column: 65
        }
      },
      "17": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 50
        }
      },
      "18": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 51
        }
      },
      "19": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "20": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 84,
          column: 8
        }
      },
      "21": {
        start: {
          line: 92,
          column: 23
        },
        end: {
          line: 92,
          column: 65
        }
      },
      "22": {
        start: {
          line: 93,
          column: 22
        },
        end: {
          line: 93,
          column: 53
        }
      },
      "23": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 37
        }
      },
      "24": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 57
        }
      },
      "25": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 56
        }
      },
      "26": {
        start: {
          line: 109,
          column: 19
        },
        end: {
          line: 109,
          column: 90
        }
      },
      "27": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 113,
          column: 6
        }
      },
      "28": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "29": {
        start: {
          line: 121,
          column: 6
        },
        end: {
          line: 121,
          column: 61
        }
      },
      "30": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 25
        }
      },
      "31": {
        start: {
          line: 127,
          column: 22
        },
        end: {
          line: 127,
          column: 46
        }
      },
      "32": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 64
        }
      },
      "33": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 62
        }
      },
      "34": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 134,
          column: 6
        }
      },
      "35": {
        start: {
          line: 137,
          column: 15
        },
        end: {
          line: 137,
          column: 66
        }
      },
      "36": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 63
        }
      },
      "37": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 40
        }
      },
      "38": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 38
        }
      },
      "39": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 31
        }
      },
      "40": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "41": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 62
        }
      },
      "42": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 155,
          column: 48
        }
      },
      "43": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 37
        }
      },
      "44": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 158,
          column: 58
        }
      },
      "45": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 163,
          column: 6
        }
      },
      "46": {
        start: {
          line: 166,
          column: 15
        },
        end: {
          line: 166,
          column: 77
        }
      },
      "47": {
        start: {
          line: 167,
          column: 21
        },
        end: {
          line: 167,
          column: 64
        }
      },
      "48": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 168,
          column: 41
        }
      },
      "49": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 16
        }
      },
      "50": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "51": {
        start: {
          line: 182,
          column: 6
        },
        end: {
          line: 182,
          column: 61
        }
      },
      "52": {
        start: {
          line: 186,
          column: 15
        },
        end: {
          line: 186,
          column: 82
        }
      },
      "53": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 187,
          column: 63
        }
      },
      "54": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 188,
          column: 40
        }
      },
      "55": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 189,
          column: 38
        }
      },
      "56": {
        start: {
          line: 192,
          column: 19
        },
        end: {
          line: 192,
          column: 58
        }
      },
      "57": {
        start: {
          line: 193,
          column: 18
        },
        end: {
          line: 193,
          column: 36
        }
      },
      "58": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 194,
          column: 53
        }
      },
      "59": {
        start: {
          line: 196,
          column: 25
        },
        end: {
          line: 196,
          column: 67
        }
      },
      "60": {
        start: {
          line: 197,
          column: 23
        },
        end: {
          line: 197,
          column: 81
        }
      },
      "61": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 199,
          column: 28
        }
      },
      "62": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 202,
          column: 21
        }
      },
      "63": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 204,
          column: 22
        }
      },
      "64": {
        start: {
          line: 211,
          column: 18
        },
        end: {
          line: 216,
          column: 5
        }
      },
      "65": {
        start: {
          line: 218,
          column: 17
        },
        end: {
          line: 218,
          column: 35
        }
      },
      "66": {
        start: {
          line: 219,
          column: 17
        },
        end: {
          line: 219,
          column: 36
        }
      },
      "67": {
        start: {
          line: 222,
          column: 18
        },
        end: {
          line: 222,
          column: 80
        }
      },
      "68": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 223,
          column: 84
        }
      },
      "69": {
        start: {
          line: 226,
          column: 18
        },
        end: {
          line: 226,
          column: 80
        }
      },
      "70": {
        start: {
          line: 227,
          column: 20
        },
        end: {
          line: 227,
          column: 84
        }
      },
      "71": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "72": {
        start: {
          line: 230,
          column: 6
        },
        end: {
          line: 230,
          column: 42
        }
      },
      "73": {
        start: {
          line: 231,
          column: 6
        },
        end: {
          line: 231,
          column: 50
        }
      },
      "74": {
        start: {
          line: 232,
          column: 6
        },
        end: {
          line: 232,
          column: 45
        }
      },
      "75": {
        start: {
          line: 233,
          column: 6
        },
        end: {
          line: 233,
          column: 53
        }
      },
      "76": {
        start: {
          line: 235,
          column: 6
        },
        end: {
          line: 235,
          column: 42
        }
      },
      "77": {
        start: {
          line: 236,
          column: 6
        },
        end: {
          line: 236,
          column: 50
        }
      },
      "78": {
        start: {
          line: 237,
          column: 6
        },
        end: {
          line: 237,
          column: 45
        }
      },
      "79": {
        start: {
          line: 238,
          column: 6
        },
        end: {
          line: 238,
          column: 53
        }
      },
      "80": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 241,
          column: 28
        }
      },
      "81": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 242,
          column: 35
        }
      },
      "82": {
        start: {
          line: 249,
          column: 18
        },
        end: {
          line: 249,
          column: 36
        }
      },
      "83": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 250,
          column: 20
        }
      },
      "84": {
        start: {
          line: 253,
          column: 25
        },
        end: {
          line: 253,
          column: 42
        }
      },
      "85": {
        start: {
          line: 254,
          column: 17
        },
        end: {
          line: 254,
          column: 50
        }
      },
      "86": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 255,
          column: 40
        }
      },
      "87": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 259,
          column: 5
        }
      },
      "88": {
        start: {
          line: 257,
          column: 17
        },
        end: {
          line: 257,
          column: 18
        }
      },
      "89": {
        start: {
          line: 258,
          column: 6
        },
        end: {
          line: 258,
          column: 34
        }
      },
      "90": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 261,
          column: 17
        }
      },
      "91": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 270,
          column: 5
        }
      },
      "92": {
        start: {
          line: 269,
          column: 6
        },
        end: {
          line: 269,
          column: 52
        }
      },
      "93": {
        start: {
          line: 272,
          column: 19
        },
        end: {
          line: 272,
          column: 64
        }
      },
      "94": {
        start: {
          line: 273,
          column: 18
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "95": {
        start: {
          line: 278,
          column: 23
        },
        end: {
          line: 278,
          column: 50
        }
      },
      "96": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 279,
          column: 36
        }
      },
      "97": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 282,
          column: 54
        }
      },
      "98": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 287,
          column: 5
        }
      },
      "99": {
        start: {
          line: 286,
          column: 6
        },
        end: {
          line: 286,
          column: 33
        }
      },
      "100": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 289,
          column: 22
        }
      },
      "101": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 298,
          column: 5
        }
      },
      "102": {
        start: {
          line: 297,
          column: 6
        },
        end: {
          line: 297,
          column: 52
        }
      },
      "103": {
        start: {
          line: 301,
          column: 4
        },
        end: {
          line: 319,
          column: 5
        }
      },
      "104": {
        start: {
          line: 302,
          column: 21
        },
        end: {
          line: 302,
          column: 69
        }
      },
      "105": {
        start: {
          line: 303,
          column: 20
        },
        end: {
          line: 306,
          column: 7
        }
      },
      "106": {
        start: {
          line: 308,
          column: 24
        },
        end: {
          line: 308,
          column: 57
        }
      },
      "107": {
        start: {
          line: 309,
          column: 6
        },
        end: {
          line: 309,
          column: 41
        }
      },
      "108": {
        start: {
          line: 310,
          column: 6
        },
        end: {
          line: 310,
          column: 37
        }
      },
      "109": {
        start: {
          line: 312,
          column: 6
        },
        end: {
          line: 312,
          column: 23
        }
      },
      "110": {
        start: {
          line: 315,
          column: 6
        },
        end: {
          line: 317,
          column: 7
        }
      },
      "111": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 55
        }
      },
      "112": {
        start: {
          line: 318,
          column: 6
        },
        end: {
          line: 318,
          column: 18
        }
      },
      "113": {
        start: {
          line: 326,
          column: 26
        },
        end: {
          line: 326,
          column: 72
        }
      },
      "114": {
        start: {
          line: 327,
          column: 25
        },
        end: {
          line: 327,
          column: 86
        }
      },
      "115": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 328,
          column: 41
        }
      },
      "116": {
        start: {
          line: 336,
          column: 23
        },
        end: {
          line: 341,
          column: 5
        }
      },
      "117": {
        start: {
          line: 343,
          column: 20
        },
        end: {
          line: 348,
          column: 5
        }
      },
      "118": {
        start: {
          line: 350,
          column: 22
        },
        end: {
          line: 355,
          column: 5
        }
      },
      "119": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 362,
          column: 6
        }
      },
      "120": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 365,
          column: 36
        }
      },
      "121": {
        start: {
          line: 366,
          column: 4
        },
        end: {
          line: 366,
          column: 37
        }
      },
      "122": {
        start: {
          line: 367,
          column: 4
        },
        end: {
          line: 367,
          column: 49
        }
      },
      "123": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 368,
          column: 41
        }
      },
      "124": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 371,
          column: 39
        }
      },
      "125": {
        start: {
          line: 378,
          column: 4
        },
        end: {
          line: 381,
          column: 6
        }
      },
      "126": {
        start: {
          line: 388,
          column: 19
        },
        end: {
          line: 388,
          column: 71
        }
      },
      "127": {
        start: {
          line: 389,
          column: 18
        },
        end: {
          line: 392,
          column: 5
        }
      },
      "128": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 408,
          column: 5
        }
      },
      "129": {
        start: {
          line: 395,
          column: 24
        },
        end: {
          line: 395,
          column: 57
        }
      },
      "130": {
        start: {
          line: 398,
          column: 6
        },
        end: {
          line: 398,
          column: 41
        }
      },
      "131": {
        start: {
          line: 401,
          column: 6
        },
        end: {
          line: 403,
          column: 7
        }
      },
      "132": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 402,
          column: 33
        }
      },
      "133": {
        start: {
          line: 405,
          column: 6
        },
        end: {
          line: 405,
          column: 23
        }
      },
      "134": {
        start: {
          line: 407,
          column: 6
        },
        end: {
          line: 407,
          column: 78
        }
      },
      "135": {
        start: {
          line: 415,
          column: 4
        },
        end: {
          line: 415,
          column: 72
        }
      },
      "136": {
        start: {
          line: 416,
          column: 4
        },
        end: {
          line: 416,
          column: 80
        }
      },
      "137": {
        start: {
          line: 417,
          column: 4
        },
        end: {
          line: 417,
          column: 42
        }
      },
      "138": {
        start: {
          line: 419,
          column: 4
        },
        end: {
          line: 419,
          column: 42
        }
      },
      "139": {
        start: {
          line: 420,
          column: 4
        },
        end: {
          line: 420,
          column: 41
        }
      },
      "140": {
        start: {
          line: 427,
          column: 4
        },
        end: {
          line: 434,
          column: 6
        }
      },
      "141": {
        start: {
          line: 443,
          column: 4
        },
        end: {
          line: 443,
          column: 33
        }
      },
      "142": {
        start: {
          line: 444,
          column: 4
        },
        end: {
          line: 444,
          column: 53
        }
      },
      "143": {
        start: {
          line: 445,
          column: 4
        },
        end: {
          line: 445,
          column: 33
        }
      },
      "144": {
        start: {
          line: 452,
          column: 23
        },
        end: {
          line: 452,
          column: 70
        }
      },
      "145": {
        start: {
          line: 453,
          column: 4
        },
        end: {
          line: 453,
          column: 51
        }
      },
      "146": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 454,
          column: 22
        }
      },
      "147": {
        start: {
          line: 461,
          column: 4
        },
        end: {
          line: 461,
          column: 26
        }
      },
      "148": {
        start: {
          line: 468,
          column: 16
        },
        end: {
          line: 468,
          column: 26
        }
      },
      "149": {
        start: {
          line: 469,
          column: 4
        },
        end: {
          line: 473,
          column: 5
        }
      },
      "150": {
        start: {
          line: 470,
          column: 6
        },
        end: {
          line: 472,
          column: 7
        }
      },
      "151": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 471,
          column: 36
        }
      },
      "152": {
        start: {
          line: 482,
          column: 4
        },
        end: {
          line: 482,
          column: 33
        }
      },
      "153": {
        start: {
          line: 483,
          column: 4
        },
        end: {
          line: 483,
          column: 53
        }
      },
      "154": {
        start: {
          line: 490,
          column: 4
        },
        end: {
          line: 490,
          column: 76
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        loc: {
          start: {
            line: 32,
            column: 62
          },
          end: {
            line: 70,
            column: 3
          }
        },
        line: 32
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 75,
            column: 2
          },
          end: {
            line: 75,
            column: 3
          }
        },
        loc: {
          start: {
            line: 75,
            column: 18
          },
          end: {
            line: 86,
            column: 3
          }
        },
        line: 75
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 91,
            column: 2
          },
          end: {
            line: 91,
            column: 3
          }
        },
        loc: {
          start: {
            line: 91,
            column: 22
          },
          end: {
            line: 95,
            column: 3
          }
        },
        line: 91
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 100,
            column: 2
          },
          end: {
            line: 100,
            column: 3
          }
        },
        loc: {
          start: {
            line: 100,
            column: 28
          },
          end: {
            line: 102,
            column: 3
          }
        },
        line: 100
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 107,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        },
        loc: {
          start: {
            line: 107,
            column: 33
          },
          end: {
            line: 114,
            column: 3
          }
        },
        line: 107
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 119,
            column: 2
          },
          end: {
            line: 119,
            column: 3
          }
        },
        loc: {
          start: {
            line: 119,
            column: 19
          },
          end: {
            line: 144,
            column: 3
          }
        },
        line: 119
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 149,
            column: 2
          },
          end: {
            line: 149,
            column: 3
          }
        },
        loc: {
          start: {
            line: 149,
            column: 27
          },
          end: {
            line: 175,
            column: 3
          }
        },
        line: 149
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 180,
            column: 2
          },
          end: {
            line: 180,
            column: 3
          }
        },
        loc: {
          start: {
            line: 180,
            column: 19
          },
          end: {
            line: 205,
            column: 3
          }
        },
        line: 180
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 210,
            column: 2
          },
          end: {
            line: 210,
            column: 3
          }
        },
        loc: {
          start: {
            line: 210,
            column: 14
          },
          end: {
            line: 243,
            column: 3
          }
        },
        line: 210
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 248,
            column: 2
          },
          end: {
            line: 248,
            column: 3
          }
        },
        loc: {
          start: {
            line: 248,
            column: 32
          },
          end: {
            line: 262,
            column: 3
          }
        },
        line: 248
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 267,
            column: 2
          },
          end: {
            line: 267,
            column: 3
          }
        },
        loc: {
          start: {
            line: 267,
            column: 16
          },
          end: {
            line: 290,
            column: 3
          }
        },
        line: 267
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 295,
            column: 2
          },
          end: {
            line: 295,
            column: 3
          }
        },
        loc: {
          start: {
            line: 295,
            column: 22
          },
          end: {
            line: 320,
            column: 3
          }
        },
        line: 295
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 325,
            column: 2
          },
          end: {
            line: 325,
            column: 3
          }
        },
        loc: {
          start: {
            line: 325,
            column: 17
          },
          end: {
            line: 329,
            column: 3
          }
        },
        line: 325
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 334,
            column: 2
          },
          end: {
            line: 334,
            column: 3
          }
        },
        loc: {
          start: {
            line: 334,
            column: 24
          },
          end: {
            line: 372,
            column: 3
          }
        },
        line: 334
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 377,
            column: 2
          },
          end: {
            line: 377,
            column: 3
          }
        },
        loc: {
          start: {
            line: 377,
            column: 25
          },
          end: {
            line: 382,
            column: 3
          }
        },
        line: 377
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 387,
            column: 2
          },
          end: {
            line: 387,
            column: 3
          }
        },
        loc: {
          start: {
            line: 387,
            column: 37
          },
          end: {
            line: 409,
            column: 3
          }
        },
        line: 387
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 414,
            column: 2
          },
          end: {
            line: 414,
            column: 3
          }
        },
        loc: {
          start: {
            line: 414,
            column: 22
          },
          end: {
            line: 421,
            column: 3
          }
        },
        line: 414
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 426,
            column: 2
          },
          end: {
            line: 426,
            column: 3
          }
        },
        loc: {
          start: {
            line: 426,
            column: 22
          },
          end: {
            line: 435,
            column: 3
          }
        },
        line: 426
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 442,
            column: 2
          },
          end: {
            line: 442,
            column: 3
          }
        },
        loc: {
          start: {
            line: 442,
            column: 26
          },
          end: {
            line: 446,
            column: 3
          }
        },
        line: 442
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 451,
            column: 2
          },
          end: {
            line: 451,
            column: 3
          }
        },
        loc: {
          start: {
            line: 451,
            column: 33
          },
          end: {
            line: 455,
            column: 3
          }
        },
        line: 451
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 460,
            column: 2
          },
          end: {
            line: 460,
            column: 3
          }
        },
        loc: {
          start: {
            line: 460,
            column: 17
          },
          end: {
            line: 462,
            column: 3
          }
        },
        line: 460
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 467,
            column: 2
          },
          end: {
            line: 467,
            column: 3
          }
        },
        loc: {
          start: {
            line: 467,
            column: 31
          },
          end: {
            line: 474,
            column: 3
          }
        },
        line: 467
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 481,
            column: 2
          },
          end: {
            line: 481,
            column: 3
          }
        },
        loc: {
          start: {
            line: 481,
            column: 26
          },
          end: {
            line: 484,
            column: 3
          }
        },
        line: 481
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 489,
            column: 2
          },
          end: {
            line: 489,
            column: 3
          }
        },
        loc: {
          start: {
            line: 489,
            column: 27
          },
          end: {
            line: 491,
            column: 3
          }
        },
        line: 489
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 38
          },
          end: {
            line: 32,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 56
          },
          end: {
            line: 32,
            column: 60
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "2": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 33
          }
        }, {
          start: {
            line: 81,
            column: 37
          },
          end: {
            line: 81,
            column: 57
          }
        }],
        line: 81
      },
      "3": {
        loc: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "4": {
        loc: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "5": {
        loc: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "6": {
        loc: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        }, {
          start: {
            line: 234,
            column: 11
          },
          end: {
            line: 239,
            column: 5
          }
        }],
        line: 229
      },
      "7": {
        loc: {
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "8": {
        loc: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "9": {
        loc: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "10": {
        loc: {
          start: {
            line: 315,
            column: 6
          },
          end: {
            line: 317,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 6
          },
          end: {
            line: 317,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "11": {
        loc: {
          start: {
            line: 328,
            column: 11
          },
          end: {
            line: 328,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 328,
            column: 11
          },
          end: {
            line: 328,
            column: 24
          }
        }, {
          start: {
            line: 328,
            column: 28
          },
          end: {
            line: 328,
            column: 40
          }
        }],
        line: 328
      },
      "12": {
        loc: {
          start: {
            line: 401,
            column: 6
          },
          end: {
            line: 403,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 6
          },
          end: {
            line: 403,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "13": {
        loc: {
          start: {
            line: 433,
            column: 14
          },
          end: {
            line: 433,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 433,
            column: 33
          },
          end: {
            line: 433,
            column: 63
          }
        }, {
          start: {
            line: 433,
            column: 66
          },
          end: {
            line: 433,
            column: 67
          }
        }],
        line: 433
      },
      "14": {
        loc: {
          start: {
            line: 467,
            column: 10
          },
          end: {
            line: 467,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 467,
            column: 24
          },
          end: {
            line: 467,
            column: 29
          }
        }],
        line: 467
      },
      "15": {
        loc: {
          start: {
            line: 470,
            column: 6
          },
          end: {
            line: 472,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 6
          },
          end: {
            line: 472,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a64209e58b391cfc4bc0e5482f8151d5b52a21c3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29la0jz9sr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29la0jz9sr();
/**
 * HTX v1.2 Protocol Implementation
 * Enhanced with Noise XK pattern and automatic key rotation
 * 
 * Based on Betanet specs Section 8.2-8.3
 * For defensive security only - no dark web capabilities
 */
const crypto =
/* istanbul ignore next */
(cov_29la0jz9sr().s[0]++,
/* istanbul ignore next */
_crypto.
/* istanbul ignore next */
webcrypto);

// Protocol constants from Section 8.2.1
const PROTOCOL_NAME =
/* istanbul ignore next */
(cov_29la0jz9sr().s[1]++, 'Noise_XK_25519_ChaChaPoly_SHA256');
const KEY_SIZE =
/* istanbul ignore next */
(cov_29la0jz9sr().s[2]++, 32);
const NONCE_SIZE =
/* istanbul ignore next */
(cov_29la0jz9sr().s[3]++, 12);
const TAG_SIZE =
/* istanbul ignore next */
(cov_29la0jz9sr().s[4]++, 16);

// Key rotation constants from Section 8.4.5
const ROTATION_BYTES =
/* istanbul ignore next */
(cov_29la0jz9sr().s[5]++, 64 * 1024 * 1024); // 64MB
const ROTATION_TIME =
/* istanbul ignore next */
(cov_29la0jz9sr().s[6]++, 15 * 60 * 1000); // 15 minutes
const KEY_OVERLAP_FRAMES =
/* istanbul ignore next */
(cov_29la0jz9sr().s[7]++, 3); // Accept old key for 3 frames during rotation

/**
 * HTX v1.2 Connection State
 */
class HTXConnection {
  constructor(role, staticPrivateKey, remotePublicKey =
  /* istanbul ignore next */
  (cov_29la0jz9sr().b[0][0]++, null)) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[0]++;
    cov_29la0jz9sr().s[8]++;
    this.role = role; // 'initiator' or 'responder'
    /* istanbul ignore next */
    cov_29la0jz9sr().s[9]++;
    this.staticPrivateKey = staticPrivateKey;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[10]++;
    this.remotePublicKey = remotePublicKey;

    // Noise protocol state (Section 8.2.2)
    /* istanbul ignore next */
    cov_29la0jz9sr().s[11]++;
    this.handshakeState = {
      ck: null,
      // Chaining key
      h: null,
      // Handshake hash
      k: null,
      // Temporary key
      n: 0n,
      // Nonce counter
      ephemeralPrivate: null,
      ephemeralPublic: null,
      remoteEphemeral: null
    };

    // Transport state after handshake
    /* istanbul ignore next */
    cov_29la0jz9sr().s[12]++;
    this.transportState = {
      sendKey: null,
      receiveKey: null,
      sendNonce: 0n,
      receiveNonce: 0n,
      sendNonceSalt: null,
      receiveNonceSalt: null
    };

    // Key rotation state (Section 8.4.5)
    /* istanbul ignore next */
    cov_29la0jz9sr().s[13]++;
    this.rotationState = {
      generation: 0,
      bytesSent: 0,
      lastRotation: Date.now(),
      pendingKeys: null,
      overlapFrames: 0
    };

    // Connection metadata
    /* istanbul ignore next */
    cov_29la0jz9sr().s[14]++;
    this.established = false;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[15]++;
    this.lastActivity = Date.now();
  }

  /**
   * Initialize handshake state (Section 8.2.2)
   */
  initHandshake() {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[1]++;
    const protocolBytes =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[16]++, new TextEncoder().encode(PROTOCOL_NAME));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[17]++;
    this.handshakeState.h =
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256)(protocolBytes);
    /* istanbul ignore next */
    cov_29la0jz9sr().s[18]++;
    this.handshakeState.ck = this.handshakeState.h;

    // Pre-message for XK pattern: initiator knows responder's static key
    /* istanbul ignore next */
    cov_29la0jz9sr().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_29la0jz9sr().b[2][0]++, this.role === 'initiator') &&
    /* istanbul ignore next */
    (cov_29la0jz9sr().b[2][1]++, this.remotePublicKey)) {
      /* istanbul ignore next */
      cov_29la0jz9sr().b[1][0]++;
      cov_29la0jz9sr().s[20]++;
      this.handshakeState.h =
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _sha.
      /* istanbul ignore next */
      sha256)(new Uint8Array([...this.handshakeState.h, ...this.remotePublicKey]));
    } else
    /* istanbul ignore next */
    {
      cov_29la0jz9sr().b[1][1]++;
    }
  }

  /**
   * Generate ephemeral key pair
   */
  generateEphemeral() {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[2]++;
    const privateKey =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[21]++, crypto.getRandomValues(new Uint8Array(32)));
    const publicKey =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[22]++,
    /* istanbul ignore next */
    _ed.
    /* istanbul ignore next */
    x25519.getPublicKey(privateKey));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[23]++;
    return {
      privateKey,
      publicKey
    };
  }

  /**
   * Perform Diffie-Hellman
   */
  dh(privateKey, publicKey) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[3]++;
    cov_29la0jz9sr().s[24]++;
    return /* istanbul ignore next */_ed.
    /* istanbul ignore next */
    x25519.getSharedSecret(privateKey, publicKey);
  }

  /**
   * HKDF for key derivation (Section 8.2.2)
   */
  hkdfDerive(chainingKey, input) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[4]++;
    const prk =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[25]++,
    /* istanbul ignore next */
    _hkdf.
    /* istanbul ignore next */
    hkdf.extract(
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256, input, chainingKey));
    const output =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[26]++,
    /* istanbul ignore next */
    _hkdf.
    /* istanbul ignore next */
    hkdf.expand(
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256, prk, new TextEncoder().encode('betanet/noise'), 64));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[27]++;
    return {
      ck: output.slice(0, 32),
      k: output.slice(32, 64)
    };
  }

  /**
   * Create initiator handshake message 1 (e, es)
   */
  createMessage1() {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[5]++;
    cov_29la0jz9sr().s[28]++;
    if (this.role !== 'initiator') {
      /* istanbul ignore next */
      cov_29la0jz9sr().b[3][0]++;
      cov_29la0jz9sr().s[29]++;
      throw new Error('Only initiator can create message 1');
    } else
    /* istanbul ignore next */
    {
      cov_29la0jz9sr().b[3][1]++;
    }
    cov_29la0jz9sr().s[30]++;
    this.initHandshake();

    // Generate ephemeral key pair
    const ephemeral =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[31]++, this.generateEphemeral());
    /* istanbul ignore next */
    cov_29la0jz9sr().s[32]++;
    this.handshakeState.ephemeralPrivate = ephemeral.privateKey;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[33]++;
    this.handshakeState.ephemeralPublic = ephemeral.publicKey;

    // Update handshake hash
    /* istanbul ignore next */
    cov_29la0jz9sr().s[34]++;
    this.handshakeState.h =
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256)(new Uint8Array([...this.handshakeState.h, ...ephemeral.publicKey]));

    // Perform es: DH(e_i, rs)
    const es =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[35]++, this.dh(ephemeral.privateKey, this.remotePublicKey));
    const derived =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[36]++, this.hkdfDerive(this.handshakeState.ck, es));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[37]++;
    this.handshakeState.ck = derived.ck;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[38]++;
    this.handshakeState.k = derived.k;

    // Message 1 contains only ephemeral public key
    /* istanbul ignore next */
    cov_29la0jz9sr().s[39]++;
    return ephemeral.publicKey;
  }

  /**
   * Process responder handshake message 2 (e, ee, se)
   */
  processMessage2(message) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[6]++;
    cov_29la0jz9sr().s[40]++;
    if (this.role !== 'initiator') {
      /* istanbul ignore next */
      cov_29la0jz9sr().b[4][0]++;
      cov_29la0jz9sr().s[41]++;
      throw new Error('Only initiator can process message 2');
    } else
    /* istanbul ignore next */
    {
      cov_29la0jz9sr().b[4][1]++;
    }

    // Extract responder ephemeral (32 bytes) and tag (16 bytes)
    const remoteEphemeral =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[42]++, message.slice(0, 32));
    const tag =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[43]++, message.slice(32, 48));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[44]++;
    this.handshakeState.remoteEphemeral = remoteEphemeral;

    // Update handshake hash
    /* istanbul ignore next */
    cov_29la0jz9sr().s[45]++;
    this.handshakeState.h =
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256)(new Uint8Array([...this.handshakeState.h, ...remoteEphemeral]));

    // Perform ee: DH(e_i, e_r)
    const ee =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[46]++, this.dh(this.handshakeState.ephemeralPrivate, remoteEphemeral));
    const derived1 =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[47]++, this.hkdfDerive(this.handshakeState.ck, ee));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[48]++;
    this.handshakeState.ck = derived1.ck;

    // Perform se: DH(s_i, e_r) - will be done in message 3
    // For now, verify the tag with responder's se: DH(s_r, e_i)
    // This requires knowing responder's static key
    /* istanbul ignore next */
    cov_29la0jz9sr().s[49]++;
    return true;
  }

  /**
   * Create initiator handshake message 3 (s, se)
   */
  createMessage3() {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[7]++;
    cov_29la0jz9sr().s[50]++;
    if (this.role !== 'initiator') {
      /* istanbul ignore next */
      cov_29la0jz9sr().b[5][0]++;
      cov_29la0jz9sr().s[51]++;
      throw new Error('Only initiator can create message 3');
    } else
    /* istanbul ignore next */
    {
      cov_29la0jz9sr().b[5][1]++;
    }

    // Perform se: DH(s_i, e_r)
    const se =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[52]++, this.dh(this.staticPrivateKey, this.handshakeState.remoteEphemeral));
    const derived =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[53]++, this.hkdfDerive(this.handshakeState.ck, se));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[54]++;
    this.handshakeState.ck = derived.ck;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[55]++;
    this.handshakeState.k = derived.k;

    // Encrypt static public key
    const cipher =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[56]++,
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _chacha.
    /* istanbul ignore next */
    chacha20poly1305)(this.handshakeState.k));
    const nonce =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[57]++, new Uint8Array(12));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[58]++;
    nonce[0] = Number(this.handshakeState.n & 0xFFn);
    const staticPublic =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[59]++,
    /* istanbul ignore next */
    _ed.
    /* istanbul ignore next */
    x25519.getPublicKey(this.staticPrivateKey));
    const ciphertext =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[60]++, cipher.encrypt(nonce, staticPublic, this.handshakeState.h));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[61]++;
    this.handshakeState.n++;

    // Derive transport keys
    /* istanbul ignore next */
    cov_29la0jz9sr().s[62]++;
    this.splitKeys();
    /* istanbul ignore next */
    cov_29la0jz9sr().s[63]++;
    return ciphertext;
  }

  /**
   * Split handshake keys into transport keys (Section 8.2.2)
   */
  splitKeys() {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[8]++;
    const split =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[64]++,
    /* istanbul ignore next */
    _hkdf.
    /* istanbul ignore next */
    hkdf.expand(
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256, this.handshakeState.ck, new TextEncoder().encode('split'), 64));
    const ts_c =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[65]++, split.slice(0, 32));
    const ts_s =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[66]++, split.slice(32, 64));

    // Derive client keys
    const key_c =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[67]++,
    /* istanbul ignore next */
    _hkdf.
    /* istanbul ignore next */
    hkdf.expand(
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256, ts_c, new TextEncoder().encode('key'), 32));
    const nonce_c =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[68]++,
    /* istanbul ignore next */
    _hkdf.
    /* istanbul ignore next */
    hkdf.expand(
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256, ts_c, new TextEncoder().encode('nonce'), 12));

    // Derive server keys
    const key_s =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[69]++,
    /* istanbul ignore next */
    _hkdf.
    /* istanbul ignore next */
    hkdf.expand(
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256, ts_s, new TextEncoder().encode('key'), 32));
    const nonce_s =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[70]++,
    /* istanbul ignore next */
    _hkdf.
    /* istanbul ignore next */
    hkdf.expand(
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256, ts_s, new TextEncoder().encode('nonce'), 12));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[71]++;
    if (this.role === 'initiator') {
      /* istanbul ignore next */
      cov_29la0jz9sr().b[6][0]++;
      cov_29la0jz9sr().s[72]++;
      this.transportState.sendKey = key_c;
      /* istanbul ignore next */
      cov_29la0jz9sr().s[73]++;
      this.transportState.sendNonceSalt = nonce_c;
      /* istanbul ignore next */
      cov_29la0jz9sr().s[74]++;
      this.transportState.receiveKey = key_s;
      /* istanbul ignore next */
      cov_29la0jz9sr().s[75]++;
      this.transportState.receiveNonceSalt = nonce_s;
    } else {
      /* istanbul ignore next */
      cov_29la0jz9sr().b[6][1]++;
      cov_29la0jz9sr().s[76]++;
      this.transportState.sendKey = key_s;
      /* istanbul ignore next */
      cov_29la0jz9sr().s[77]++;
      this.transportState.sendNonceSalt = nonce_s;
      /* istanbul ignore next */
      cov_29la0jz9sr().s[78]++;
      this.transportState.receiveKey = key_c;
      /* istanbul ignore next */
      cov_29la0jz9sr().s[79]++;
      this.transportState.receiveNonceSalt = nonce_c;
    }
    /* istanbul ignore next */
    cov_29la0jz9sr().s[80]++;
    this.established = true;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[81]++;
    this.lastActivity = Date.now();
  }

  /**
   * Construct nonce for transport encryption (Section 8.2.2)
   */
  constructNonce(salt, counter) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[9]++;
    const nonce =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[82]++, new Uint8Array(12));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[83]++;
    nonce.set(salt);

    // XOR with little-endian counter
    const counterBytes =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[84]++, new Uint8Array(8));
    const view =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[85]++, new DataView(counterBytes.buffer));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[86]++;
    view.setBigUint64(0, counter, true); // little-endian
    /* istanbul ignore next */
    cov_29la0jz9sr().s[87]++;
    for (let i =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[88]++, 0); i < 8; i++) {
      /* istanbul ignore next */
      cov_29la0jz9sr().s[89]++;
      nonce[i] ^= counterBytes[i];
    }
    /* istanbul ignore next */
    cov_29la0jz9sr().s[90]++;
    return nonce;
  }

  /**
   * Encrypt data for transport (Section 8.4)
   */
  encrypt(data) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[10]++;
    cov_29la0jz9sr().s[91]++;
    if (!this.established) {
      /* istanbul ignore next */
      cov_29la0jz9sr().b[7][0]++;
      cov_29la0jz9sr().s[92]++;
      throw new Error('Connection not established');
    } else
    /* istanbul ignore next */
    {
      cov_29la0jz9sr().b[7][1]++;
    }
    const cipher =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[93]++,
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _chacha.
    /* istanbul ignore next */
    chacha20poly1305)(this.transportState.sendKey));
    const nonce =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[94]++, this.constructNonce(this.transportState.sendNonceSalt, this.transportState.sendNonce));
    const ciphertext =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[95]++, cipher.encrypt(nonce, data));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[96]++;
    this.transportState.sendNonce++;

    // Track bytes for rotation
    /* istanbul ignore next */
    cov_29la0jz9sr().s[97]++;
    this.rotationState.bytesSent += ciphertext.length;

    // Check if rotation needed
    /* istanbul ignore next */
    cov_29la0jz9sr().s[98]++;
    if (this.shouldRotate()) {
      /* istanbul ignore next */
      cov_29la0jz9sr().b[8][0]++;
      cov_29la0jz9sr().s[99]++;
      this.initiateKeyRotation();
    } else
    /* istanbul ignore next */
    {
      cov_29la0jz9sr().b[8][1]++;
    }
    cov_29la0jz9sr().s[100]++;
    return ciphertext;
  }

  /**
   * Decrypt data from transport (Section 8.4)
   */
  decrypt(ciphertext) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[11]++;
    cov_29la0jz9sr().s[101]++;
    if (!this.established) {
      /* istanbul ignore next */
      cov_29la0jz9sr().b[9][0]++;
      cov_29la0jz9sr().s[102]++;
      throw new Error('Connection not established');
    } else
    /* istanbul ignore next */
    {
      cov_29la0jz9sr().b[9][1]++;
    }

    // Try current key first
    cov_29la0jz9sr().s[103]++;
    try {
      const cipher =
      /* istanbul ignore next */
      (cov_29la0jz9sr().s[104]++,
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _chacha.
      /* istanbul ignore next */
      chacha20poly1305)(this.transportState.receiveKey));
      const nonce =
      /* istanbul ignore next */
      (cov_29la0jz9sr().s[105]++, this.constructNonce(this.transportState.receiveNonceSalt, this.transportState.receiveNonce));
      const plaintext =
      /* istanbul ignore next */
      (cov_29la0jz9sr().s[106]++, cipher.decrypt(nonce, ciphertext));
      /* istanbul ignore next */
      cov_29la0jz9sr().s[107]++;
      this.transportState.receiveNonce++;
      /* istanbul ignore next */
      cov_29la0jz9sr().s[108]++;
      this.lastActivity = Date.now();
      /* istanbul ignore next */
      cov_29la0jz9sr().s[109]++;
      return plaintext;
    } catch (error) {
      /* istanbul ignore next */
      cov_29la0jz9sr().s[110]++;
      // If we have pending keys from rotation, try those
      if (this.rotationState.pendingKeys) {
        /* istanbul ignore next */
        cov_29la0jz9sr().b[10][0]++;
        cov_29la0jz9sr().s[111]++;
        return this.decryptWithPendingKeys(ciphertext);
      } else
      /* istanbul ignore next */
      {
        cov_29la0jz9sr().b[10][1]++;
      }
      cov_29la0jz9sr().s[112]++;
      throw error;
    }
  }

  /**
   * Check if key rotation is needed (Section 8.4.5)
   */
  shouldRotate() {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[12]++;
    const bytesExceeded =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[113]++, this.rotationState.bytesSent >= ROTATION_BYTES);
    const timeExceeded =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[114]++, Date.now() - this.rotationState.lastRotation >= ROTATION_TIME);
    /* istanbul ignore next */
    cov_29la0jz9sr().s[115]++;
    return /* istanbul ignore next */(cov_29la0jz9sr().b[11][0]++, bytesExceeded) ||
    /* istanbul ignore next */
    (cov_29la0jz9sr().b[11][1]++, timeExceeded);
  }

  /**
   * Initiate key rotation (Section 8.4.5)
   */
  initiateKeyRotation() {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[13]++;
    // Derive next generation keys
    const nextSecret =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[116]++,
    /* istanbul ignore next */
    _hkdf.
    /* istanbul ignore next */
    hkdf.expand(
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256, this.transportState.sendKey, new TextEncoder().encode('next'), 32));
    const nextKey =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[117]++,
    /* istanbul ignore next */
    _hkdf.
    /* istanbul ignore next */
    hkdf.expand(
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256, nextSecret, new TextEncoder().encode('key'), 32));
    const nextNonce =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[118]++,
    /* istanbul ignore next */
    _hkdf.
    /* istanbul ignore next */
    hkdf.expand(
    /* istanbul ignore next */
    _sha.
    /* istanbul ignore next */
    sha256, nextSecret, new TextEncoder().encode('nonce'), 12));

    // Store pending keys
    /* istanbul ignore next */
    cov_29la0jz9sr().s[119]++;
    this.rotationState.pendingKeys = {
      key: nextKey,
      nonce: nextNonce,
      secret: nextSecret
    };

    // Update rotation tracking
    /* istanbul ignore next */
    cov_29la0jz9sr().s[120]++;
    this.rotationState.generation++;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[121]++;
    this.rotationState.bytesSent = 0;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[122]++;
    this.rotationState.lastRotation = Date.now();
    /* istanbul ignore next */
    cov_29la0jz9sr().s[123]++;
    this.rotationState.overlapFrames = 0;

    // Send KEY_UPDATE frame
    /* istanbul ignore next */
    cov_29la0jz9sr().s[124]++;
    return this.createKeyUpdateFrame();
  }

  /**
   * Create KEY_UPDATE frame (Section 8.4.5)
   */
  createKeyUpdateFrame() {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[14]++;
    cov_29la0jz9sr().s[125]++;
    return {
      type: 'KEY_UPDATE',
      generation: this.rotationState.generation
    };
  }

  /**
   * Try decrypting with pending keys during rotation
   */
  decryptWithPendingKeys(ciphertext) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[15]++;
    const cipher =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[126]++,
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _chacha.
    /* istanbul ignore next */
    chacha20poly1305)(this.rotationState.pendingKeys.key));
    const nonce =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[127]++, this.constructNonce(this.rotationState.pendingKeys.nonce, 0n // Reset nonce for new key
    ));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[128]++;
    try {
      const plaintext =
      /* istanbul ignore next */
      (cov_29la0jz9sr().s[129]++, cipher.decrypt(nonce, ciphertext));

      // Increment overlap counter
      /* istanbul ignore next */
      cov_29la0jz9sr().s[130]++;
      this.rotationState.overlapFrames++;

      // After KEY_OVERLAP_FRAMES, commit to new keys
      /* istanbul ignore next */
      cov_29la0jz9sr().s[131]++;
      if (this.rotationState.overlapFrames >= KEY_OVERLAP_FRAMES) {
        /* istanbul ignore next */
        cov_29la0jz9sr().b[12][0]++;
        cov_29la0jz9sr().s[132]++;
        this.commitKeyRotation();
      } else
      /* istanbul ignore next */
      {
        cov_29la0jz9sr().b[12][1]++;
      }
      cov_29la0jz9sr().s[133]++;
      return plaintext;
    } catch (error) {
      /* istanbul ignore next */
      cov_29la0jz9sr().s[134]++;
      throw new Error('Failed to decrypt with both current and pending keys');
    }
  }

  /**
   * Commit key rotation after overlap period
   */
  commitKeyRotation() {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[16]++;
    cov_29la0jz9sr().s[135]++;
    this.transportState.receiveKey = this.rotationState.pendingKeys.key;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[136]++;
    this.transportState.receiveNonceSalt = this.rotationState.pendingKeys.nonce;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[137]++;
    this.transportState.receiveNonce = 0n;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[138]++;
    this.rotationState.pendingKeys = null;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[139]++;
    this.rotationState.overlapFrames = 0;
  }

  /**
   * Get connection info for monitoring
   */
  getConnectionInfo() {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[17]++;
    cov_29la0jz9sr().s[140]++;
    return {
      established: this.established,
      role: this.role,
      generation: this.rotationState.generation,
      bytesSent: this.rotationState.bytesSent,
      lastActivity: this.lastActivity,
      uptime: this.established ?
      /* istanbul ignore next */
      (cov_29la0jz9sr().b[13][0]++, Date.now() - this.lastActivity) :
      /* istanbul ignore next */
      (cov_29la0jz9sr().b[13][1]++, 0)
    };
  }
}

/**
 * HTX Server - Manages multiple connections
 */
class HTXServer {
  constructor(privateKey) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[18]++;
    cov_29la0jz9sr().s[141]++;
    this.privateKey = privateKey;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[142]++;
    this.publicKey =
    /* istanbul ignore next */
    _ed.
    /* istanbul ignore next */
    x25519.getPublicKey(privateKey);
    /* istanbul ignore next */
    cov_29la0jz9sr().s[143]++;
    this.connections = new Map();
  }

  /**
   * Accept incoming connection
   */
  acceptConnection(connectionId) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[19]++;
    const connection =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[144]++, new HTXConnection('responder', this.privateKey));
    /* istanbul ignore next */
    cov_29la0jz9sr().s[145]++;
    this.connections.set(connectionId, connection);
    /* istanbul ignore next */
    cov_29la0jz9sr().s[146]++;
    return connection;
  }

  /**
   * Get server public key for clients
   */
  getPublicKey() {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[20]++;
    cov_29la0jz9sr().s[147]++;
    return this.publicKey;
  }

  /**
   * Clean up stale connections
   */
  cleanup(maxIdleTime =
  /* istanbul ignore next */
  (cov_29la0jz9sr().b[14][0]++, 30000)) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[21]++;
    const now =
    /* istanbul ignore next */
    (cov_29la0jz9sr().s[148]++, Date.now());
    /* istanbul ignore next */
    cov_29la0jz9sr().s[149]++;
    for (const [id, conn] of this.connections) {
      /* istanbul ignore next */
      cov_29la0jz9sr().s[150]++;
      if (now - conn.lastActivity > maxIdleTime) {
        /* istanbul ignore next */
        cov_29la0jz9sr().b[15][0]++;
        cov_29la0jz9sr().s[151]++;
        this.connections.delete(id);
      } else
      /* istanbul ignore next */
      {
        cov_29la0jz9sr().b[15][1]++;
      }
    }
  }
}

/**
 * HTX Client - Initiates connections
 */
/* istanbul ignore next */
exports.HTXServer = HTXServer;
class HTXClient {
  constructor(privateKey) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[22]++;
    cov_29la0jz9sr().s[152]++;
    this.privateKey = privateKey;
    /* istanbul ignore next */
    cov_29la0jz9sr().s[153]++;
    this.publicKey =
    /* istanbul ignore next */
    _ed.
    /* istanbul ignore next */
    x25519.getPublicKey(privateKey);
  }

  /**
   * Connect to server
   */
  connect(serverPublicKey) {
    /* istanbul ignore next */
    cov_29la0jz9sr().f[23]++;
    cov_29la0jz9sr().s[154]++;
    return new HTXConnection('initiator', this.privateKey, serverPublicKey);
  }
}
/* istanbul ignore next */
exports.HTXClient = HTXClient;
var _default = exports.default = {
  HTXConnection,
  HTXServer,
  HTXClient,
  PROTOCOL_NAME,
  KEY_SIZE,
  ROTATION_BYTES,
  ROTATION_TIME
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,