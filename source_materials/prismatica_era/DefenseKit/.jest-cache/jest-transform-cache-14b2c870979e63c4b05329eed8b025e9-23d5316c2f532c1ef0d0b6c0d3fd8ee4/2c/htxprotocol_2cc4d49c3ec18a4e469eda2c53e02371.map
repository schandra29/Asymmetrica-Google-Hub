{"version":3,"names":["_crypto","require","_hkdf","_sha","_ed","_chacha","cov_29la0jz9sr","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","crypto","webcrypto","PROTOCOL_NAME","KEY_SIZE","NONCE_SIZE","TAG_SIZE","ROTATION_BYTES","ROTATION_TIME","KEY_OVERLAP_FRAMES","HTXConnection","constructor","role","staticPrivateKey","remotePublicKey","handshakeState","ck","h","k","n","ephemeralPrivate","ephemeralPublic","remoteEphemeral","transportState","sendKey","receiveKey","sendNonce","receiveNonce","sendNonceSalt","receiveNonceSalt","rotationState","generation","bytesSent","lastRotation","Date","now","pendingKeys","overlapFrames","established","lastActivity","initHandshake","protocolBytes","TextEncoder","encode","sha256","Uint8Array","generateEphemeral","privateKey","getRandomValues","publicKey","x25519","getPublicKey","dh","getSharedSecret","hkdfDerive","chainingKey","input","prk","hkdf","extract","output","expand","slice","createMessage1","Error","ephemeral","es","derived","processMessage2","message","tag","ee","derived1","createMessage3","se","cipher","chacha20poly1305","nonce","Number","staticPublic","ciphertext","encrypt","splitKeys","split","ts_c","ts_s","key_c","nonce_c","key_s","nonce_s","constructNonce","salt","counter","set","counterBytes","view","DataView","buffer","setBigUint64","i","data","length","shouldRotate","initiateKeyRotation","decrypt","plaintext","error","decryptWithPendingKeys","bytesExceeded","timeExceeded","nextSecret","nextKey","nextNonce","key","secret","createKeyUpdateFrame","commitKeyRotation","getConnectionInfo","uptime","HTXServer","connections","Map","acceptConnection","connectionId","connection","cleanup","maxIdleTime","id","conn","delete","exports","HTXClient","connect","serverPublicKey","_default","default"],"sources":["htx-protocol.js"],"sourcesContent":["/**\n * HTX v1.2 Protocol Implementation\n * Enhanced with Noise XK pattern and automatic key rotation\n * \n * Based on Betanet specs Section 8.2-8.3\n * For defensive security only - no dark web capabilities\n */\n\nimport { webcrypto } from 'crypto';\nimport { hkdf } from '@noble/hashes/hkdf';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { x25519 } from '@noble/curves/ed25519';\nimport { chacha20poly1305 } from '@noble/ciphers/chacha';\n\nconst crypto = webcrypto;\n\n// Protocol constants from Section 8.2.1\nconst PROTOCOL_NAME = 'Noise_XK_25519_ChaChaPoly_SHA256';\nconst KEY_SIZE = 32;\nconst NONCE_SIZE = 12;\nconst TAG_SIZE = 16;\n\n// Key rotation constants from Section 8.4.5\nconst ROTATION_BYTES = 64 * 1024 * 1024; // 64MB\nconst ROTATION_TIME = 15 * 60 * 1000; // 15 minutes\nconst KEY_OVERLAP_FRAMES = 3; // Accept old key for 3 frames during rotation\n\n/**\n * HTX v1.2 Connection State\n */\nclass HTXConnection {\n  constructor(role, staticPrivateKey, remotePublicKey = null) {\n    this.role = role; // 'initiator' or 'responder'\n    this.staticPrivateKey = staticPrivateKey;\n    this.remotePublicKey = remotePublicKey;\n    \n    // Noise protocol state (Section 8.2.2)\n    this.handshakeState = {\n      ck: null,  // Chaining key\n      h: null,   // Handshake hash\n      k: null,   // Temporary key\n      n: 0n,     // Nonce counter\n      ephemeralPrivate: null,\n      ephemeralPublic: null,\n      remoteEphemeral: null\n    };\n    \n    // Transport state after handshake\n    this.transportState = {\n      sendKey: null,\n      receiveKey: null,\n      sendNonce: 0n,\n      receiveNonce: 0n,\n      sendNonceSalt: null,\n      receiveNonceSalt: null\n    };\n    \n    // Key rotation state (Section 8.4.5)\n    this.rotationState = {\n      generation: 0,\n      bytesSent: 0,\n      lastRotation: Date.now(),\n      pendingKeys: null,\n      overlapFrames: 0\n    };\n    \n    // Connection metadata\n    this.established = false;\n    this.lastActivity = Date.now();\n  }\n  \n  /**\n   * Initialize handshake state (Section 8.2.2)\n   */\n  initHandshake() {\n    const protocolBytes = new TextEncoder().encode(PROTOCOL_NAME);\n    this.handshakeState.h = sha256(protocolBytes);\n    this.handshakeState.ck = this.handshakeState.h;\n    \n    // Pre-message for XK pattern: initiator knows responder's static key\n    if (this.role === 'initiator' && this.remotePublicKey) {\n      this.handshakeState.h = sha256(\n        new Uint8Array([...this.handshakeState.h, ...this.remotePublicKey])\n      );\n    }\n  }\n  \n  /**\n   * Generate ephemeral key pair\n   */\n  generateEphemeral() {\n    const privateKey = crypto.getRandomValues(new Uint8Array(32));\n    const publicKey = x25519.getPublicKey(privateKey);\n    return { privateKey, publicKey };\n  }\n  \n  /**\n   * Perform Diffie-Hellman\n   */\n  dh(privateKey, publicKey) {\n    return x25519.getSharedSecret(privateKey, publicKey);\n  }\n  \n  /**\n   * HKDF for key derivation (Section 8.2.2)\n   */\n  hkdfDerive(chainingKey, input) {\n    const prk = hkdf.extract(sha256, input, chainingKey);\n    const output = hkdf.expand(sha256, prk, new TextEncoder().encode('betanet/noise'), 64);\n    return {\n      ck: output.slice(0, 32),\n      k: output.slice(32, 64)\n    };\n  }\n  \n  /**\n   * Create initiator handshake message 1 (e, es)\n   */\n  createMessage1() {\n    if (this.role !== 'initiator') {\n      throw new Error('Only initiator can create message 1');\n    }\n    \n    this.initHandshake();\n    \n    // Generate ephemeral key pair\n    const ephemeral = this.generateEphemeral();\n    this.handshakeState.ephemeralPrivate = ephemeral.privateKey;\n    this.handshakeState.ephemeralPublic = ephemeral.publicKey;\n    \n    // Update handshake hash\n    this.handshakeState.h = sha256(\n      new Uint8Array([...this.handshakeState.h, ...ephemeral.publicKey])\n    );\n    \n    // Perform es: DH(e_i, rs)\n    const es = this.dh(ephemeral.privateKey, this.remotePublicKey);\n    const derived = this.hkdfDerive(this.handshakeState.ck, es);\n    this.handshakeState.ck = derived.ck;\n    this.handshakeState.k = derived.k;\n    \n    // Message 1 contains only ephemeral public key\n    return ephemeral.publicKey;\n  }\n  \n  /**\n   * Process responder handshake message 2 (e, ee, se)\n   */\n  processMessage2(message) {\n    if (this.role !== 'initiator') {\n      throw new Error('Only initiator can process message 2');\n    }\n    \n    // Extract responder ephemeral (32 bytes) and tag (16 bytes)\n    const remoteEphemeral = message.slice(0, 32);\n    const tag = message.slice(32, 48);\n    \n    this.handshakeState.remoteEphemeral = remoteEphemeral;\n    \n    // Update handshake hash\n    this.handshakeState.h = sha256(\n      new Uint8Array([...this.handshakeState.h, ...remoteEphemeral])\n    );\n    \n    // Perform ee: DH(e_i, e_r)\n    const ee = this.dh(this.handshakeState.ephemeralPrivate, remoteEphemeral);\n    const derived1 = this.hkdfDerive(this.handshakeState.ck, ee);\n    this.handshakeState.ck = derived1.ck;\n    \n    // Perform se: DH(s_i, e_r) - will be done in message 3\n    // For now, verify the tag with responder's se: DH(s_r, e_i)\n    // This requires knowing responder's static key\n    \n    return true;\n  }\n  \n  /**\n   * Create initiator handshake message 3 (s, se)\n   */\n  createMessage3() {\n    if (this.role !== 'initiator') {\n      throw new Error('Only initiator can create message 3');\n    }\n    \n    // Perform se: DH(s_i, e_r)\n    const se = this.dh(this.staticPrivateKey, this.handshakeState.remoteEphemeral);\n    const derived = this.hkdfDerive(this.handshakeState.ck, se);\n    this.handshakeState.ck = derived.ck;\n    this.handshakeState.k = derived.k;\n    \n    // Encrypt static public key\n    const cipher = chacha20poly1305(this.handshakeState.k);\n    const nonce = new Uint8Array(12);\n    nonce[0] = Number(this.handshakeState.n & 0xFFn);\n    \n    const staticPublic = x25519.getPublicKey(this.staticPrivateKey);\n    const ciphertext = cipher.encrypt(nonce, staticPublic, this.handshakeState.h);\n    \n    this.handshakeState.n++;\n    \n    // Derive transport keys\n    this.splitKeys();\n    \n    return ciphertext;\n  }\n  \n  /**\n   * Split handshake keys into transport keys (Section 8.2.2)\n   */\n  splitKeys() {\n    const split = hkdf.expand(\n      sha256, \n      this.handshakeState.ck, \n      new TextEncoder().encode('split'), \n      64\n    );\n    \n    const ts_c = split.slice(0, 32);\n    const ts_s = split.slice(32, 64);\n    \n    // Derive client keys\n    const key_c = hkdf.expand(sha256, ts_c, new TextEncoder().encode('key'), 32);\n    const nonce_c = hkdf.expand(sha256, ts_c, new TextEncoder().encode('nonce'), 12);\n    \n    // Derive server keys\n    const key_s = hkdf.expand(sha256, ts_s, new TextEncoder().encode('key'), 32);\n    const nonce_s = hkdf.expand(sha256, ts_s, new TextEncoder().encode('nonce'), 12);\n    \n    if (this.role === 'initiator') {\n      this.transportState.sendKey = key_c;\n      this.transportState.sendNonceSalt = nonce_c;\n      this.transportState.receiveKey = key_s;\n      this.transportState.receiveNonceSalt = nonce_s;\n    } else {\n      this.transportState.sendKey = key_s;\n      this.transportState.sendNonceSalt = nonce_s;\n      this.transportState.receiveKey = key_c;\n      this.transportState.receiveNonceSalt = nonce_c;\n    }\n    \n    this.established = true;\n    this.lastActivity = Date.now();\n  }\n  \n  /**\n   * Construct nonce for transport encryption (Section 8.2.2)\n   */\n  constructNonce(salt, counter) {\n    const nonce = new Uint8Array(12);\n    nonce.set(salt);\n    \n    // XOR with little-endian counter\n    const counterBytes = new Uint8Array(8);\n    const view = new DataView(counterBytes.buffer);\n    view.setBigUint64(0, counter, true); // little-endian\n    \n    for (let i = 0; i < 8; i++) {\n      nonce[i] ^= counterBytes[i];\n    }\n    \n    return nonce;\n  }\n  \n  /**\n   * Encrypt data for transport (Section 8.4)\n   */\n  encrypt(data) {\n    if (!this.established) {\n      throw new Error('Connection not established');\n    }\n    \n    const cipher = chacha20poly1305(this.transportState.sendKey);\n    const nonce = this.constructNonce(\n      this.transportState.sendNonceSalt, \n      this.transportState.sendNonce\n    );\n    \n    const ciphertext = cipher.encrypt(nonce, data);\n    this.transportState.sendNonce++;\n    \n    // Track bytes for rotation\n    this.rotationState.bytesSent += ciphertext.length;\n    \n    // Check if rotation needed\n    if (this.shouldRotate()) {\n      this.initiateKeyRotation();\n    }\n    \n    return ciphertext;\n  }\n  \n  /**\n   * Decrypt data from transport (Section 8.4)\n   */\n  decrypt(ciphertext) {\n    if (!this.established) {\n      throw new Error('Connection not established');\n    }\n    \n    // Try current key first\n    try {\n      const cipher = chacha20poly1305(this.transportState.receiveKey);\n      const nonce = this.constructNonce(\n        this.transportState.receiveNonceSalt,\n        this.transportState.receiveNonce\n      );\n      \n      const plaintext = cipher.decrypt(nonce, ciphertext);\n      this.transportState.receiveNonce++;\n      this.lastActivity = Date.now();\n      \n      return plaintext;\n    } catch (error) {\n      // If we have pending keys from rotation, try those\n      if (this.rotationState.pendingKeys) {\n        return this.decryptWithPendingKeys(ciphertext);\n      }\n      throw error;\n    }\n  }\n  \n  /**\n   * Check if key rotation is needed (Section 8.4.5)\n   */\n  shouldRotate() {\n    const bytesExceeded = this.rotationState.bytesSent >= ROTATION_BYTES;\n    const timeExceeded = Date.now() - this.rotationState.lastRotation >= ROTATION_TIME;\n    return bytesExceeded || timeExceeded;\n  }\n  \n  /**\n   * Initiate key rotation (Section 8.4.5)\n   */\n  initiateKeyRotation() {\n    // Derive next generation keys\n    const nextSecret = hkdf.expand(\n      sha256,\n      this.transportState.sendKey,\n      new TextEncoder().encode('next'),\n      32\n    );\n    \n    const nextKey = hkdf.expand(\n      sha256,\n      nextSecret,\n      new TextEncoder().encode('key'),\n      32\n    );\n    \n    const nextNonce = hkdf.expand(\n      sha256,\n      nextSecret,\n      new TextEncoder().encode('nonce'),\n      12\n    );\n    \n    // Store pending keys\n    this.rotationState.pendingKeys = {\n      key: nextKey,\n      nonce: nextNonce,\n      secret: nextSecret\n    };\n    \n    // Update rotation tracking\n    this.rotationState.generation++;\n    this.rotationState.bytesSent = 0;\n    this.rotationState.lastRotation = Date.now();\n    this.rotationState.overlapFrames = 0;\n    \n    // Send KEY_UPDATE frame\n    return this.createKeyUpdateFrame();\n  }\n  \n  /**\n   * Create KEY_UPDATE frame (Section 8.4.5)\n   */\n  createKeyUpdateFrame() {\n    return {\n      type: 'KEY_UPDATE',\n      generation: this.rotationState.generation\n    };\n  }\n  \n  /**\n   * Try decrypting with pending keys during rotation\n   */\n  decryptWithPendingKeys(ciphertext) {\n    const cipher = chacha20poly1305(this.rotationState.pendingKeys.key);\n    const nonce = this.constructNonce(\n      this.rotationState.pendingKeys.nonce,\n      0n // Reset nonce for new key\n    );\n    \n    try {\n      const plaintext = cipher.decrypt(nonce, ciphertext);\n      \n      // Increment overlap counter\n      this.rotationState.overlapFrames++;\n      \n      // After KEY_OVERLAP_FRAMES, commit to new keys\n      if (this.rotationState.overlapFrames >= KEY_OVERLAP_FRAMES) {\n        this.commitKeyRotation();\n      }\n      \n      return plaintext;\n    } catch (error) {\n      throw new Error('Failed to decrypt with both current and pending keys');\n    }\n  }\n  \n  /**\n   * Commit key rotation after overlap period\n   */\n  commitKeyRotation() {\n    this.transportState.receiveKey = this.rotationState.pendingKeys.key;\n    this.transportState.receiveNonceSalt = this.rotationState.pendingKeys.nonce;\n    this.transportState.receiveNonce = 0n;\n    \n    this.rotationState.pendingKeys = null;\n    this.rotationState.overlapFrames = 0;\n  }\n  \n  /**\n   * Get connection info for monitoring\n   */\n  getConnectionInfo() {\n    return {\n      established: this.established,\n      role: this.role,\n      generation: this.rotationState.generation,\n      bytesSent: this.rotationState.bytesSent,\n      lastActivity: this.lastActivity,\n      uptime: this.established ? Date.now() - this.lastActivity : 0\n    };\n  }\n}\n\n/**\n * HTX Server - Manages multiple connections\n */\nexport class HTXServer {\n  constructor(privateKey) {\n    this.privateKey = privateKey;\n    this.publicKey = x25519.getPublicKey(privateKey);\n    this.connections = new Map();\n  }\n  \n  /**\n   * Accept incoming connection\n   */\n  acceptConnection(connectionId) {\n    const connection = new HTXConnection('responder', this.privateKey);\n    this.connections.set(connectionId, connection);\n    return connection;\n  }\n  \n  /**\n   * Get server public key for clients\n   */\n  getPublicKey() {\n    return this.publicKey;\n  }\n  \n  /**\n   * Clean up stale connections\n   */\n  cleanup(maxIdleTime = 30000) {\n    const now = Date.now();\n    for (const [id, conn] of this.connections) {\n      if (now - conn.lastActivity > maxIdleTime) {\n        this.connections.delete(id);\n      }\n    }\n  }\n}\n\n/**\n * HTX Client - Initiates connections\n */\nexport class HTXClient {\n  constructor(privateKey) {\n    this.privateKey = privateKey;\n    this.publicKey = x25519.getPublicKey(privateKey);\n  }\n  \n  /**\n   * Connect to server\n   */\n  connect(serverPublicKey) {\n    return new HTXConnection('initiator', this.privateKey, serverPublicKey);\n  }\n}\n\nexport default {\n  HTXConnection,\n  HTXServer,\n  HTXClient,\n  PROTOCOL_NAME,\n  KEY_SIZE,\n  ROTATION_BYTES,\n  ROTATION_TIME\n};"],"mappings":"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","ignoreList":[]}