{"version":3,"names":["_ed","require","_sha","_utils","cov_xxf9owlmc","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","NODE_ID_LENGTH","CHECKSUM_LENGTH","NAME_PREFIX","Base32","ALPHABET","encode","bytes","result","buffer","bufferLength","byte","index","decode","str","char","toLowerCase","value","indexOf","Error","push","Uint8Array","SelfCertifyingIdentity","constructor","privateKey","publicKey","ed25519","getPublicKey","utils","randomPrivateKey","nodeId","deriveNodeId","generateName","created","Date","now","sha256","slice","checksumData","TextEncoder","checksum","nameData","encoded","parseNodeId","startsWith","length","decoded","expectedChecksum","i","sign","data","message","verify","signature","createClaim","claimData","claim","issuer","Array","from","timestamp","nonce","randomBytes","claimBytes","JSON","stringify","verifyClaim","claimNodeId","valid","error","derivedNodeId","age","warning","export","includePrivate","exported","import","identity","Object","create","prototype","getInfo","map","toString","padStart","join","hasPrivateKey","toISOString","exports","IdentityManager","identities","Map","defaultIdentity","createIdentity","label","id","set","size","lastUsed","importIdentity","has","getIdentity","entry","get","getDefault","setDefault","listIdentities","list","isDefault","removeIdentity","keys","delete","exportAll","backup","version","importBackup","item","_default","default"],"sources":["self-certifying.js"],"sourcesContent":["/**\n * Self-Certifying Identity System\n * Based on Betanet specs Section 11.1\n * \n * Decentralized identity without certificate authorities\n * The identity IS the public key - no third parties needed\n */\n\nimport { ed25519 } from '@noble/curves/ed25519';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\n\n// Constants from Section 11.1\nconst NODE_ID_LENGTH = 20; // 160 bits\nconst CHECKSUM_LENGTH = 4;\nconst NAME_PREFIX = 'dk1:'; // DefenseKit v1\n\n/**\n * Base32 encoding (RFC 4648) without padding\n * Used for human-readable identity strings\n */\nclass Base32 {\n  static ALPHABET = 'abcdefghijklmnopqrstuvwxyz234567';\n  \n  static encode(bytes) {\n    let result = '';\n    let buffer = 0;\n    let bufferLength = 0;\n    \n    for (const byte of bytes) {\n      buffer = (buffer << 8) | byte;\n      bufferLength += 8;\n      \n      while (bufferLength >= 5) {\n        const index = (buffer >> (bufferLength - 5)) & 0x1F;\n        result += this.ALPHABET[index];\n        bufferLength -= 5;\n      }\n    }\n    \n    if (bufferLength > 0) {\n      const index = (buffer << (5 - bufferLength)) & 0x1F;\n      result += this.ALPHABET[index];\n    }\n    \n    return result;\n  }\n  \n  static decode(str) {\n    const bytes = [];\n    let buffer = 0;\n    let bufferLength = 0;\n    \n    for (const char of str.toLowerCase()) {\n      const value = this.ALPHABET.indexOf(char);\n      if (value === -1) {\n        throw new Error(`Invalid base32 character: ${char}`);\n      }\n      \n      buffer = (buffer << 5) | value;\n      bufferLength += 5;\n      \n      while (bufferLength >= 8) {\n        bytes.push((buffer >> (bufferLength - 8)) & 0xFF);\n        bufferLength -= 8;\n      }\n    }\n    \n    return new Uint8Array(bytes);\n  }\n}\n\n/**\n * Self-Certifying Identity\n * \n * An identity that proves itself without external validation\n */\nexport class SelfCertifyingIdentity {\n  constructor(privateKey = null) {\n    if (privateKey) {\n      this.privateKey = privateKey;\n      this.publicKey = ed25519.getPublicKey(privateKey);\n    } else {\n      // Generate new identity\n      this.privateKey = ed25519.utils.randomPrivateKey();\n      this.publicKey = ed25519.getPublicKey(this.privateKey);\n    }\n    \n    // Derive NodeID from public key\n    this.nodeId = this.deriveNodeId(this.publicKey);\n    \n    // Generate human-readable name\n    this.name = this.generateName(this.nodeId);\n    \n    // Store creation timestamp\n    this.created = Date.now();\n  }\n  \n  /**\n   * Derive NodeID from public key (Section 11.1)\n   * NodeID = SHA-256(Ed25519 public key) truncated to 160 bits\n   */\n  deriveNodeId(publicKey) {\n    const hash = sha256(publicKey);\n    return hash.slice(0, NODE_ID_LENGTH);\n  }\n  \n  /**\n   * Generate human-readable name (Section 11.1)\n   * Format: \"dk1:\" + base32(NodeID || checksum[4])\n   */\n  generateName(nodeId) {\n    // Calculate checksum\n    const checksumData = new Uint8Array([\n      ...new TextEncoder().encode('DK-NAME'),\n      ...nodeId\n    ]);\n    const checksum = sha256(checksumData).slice(0, CHECKSUM_LENGTH);\n    \n    // Combine NodeID and checksum\n    const nameData = new Uint8Array([...nodeId, ...checksum]);\n    \n    // Encode to base32\n    const encoded = Base32.encode(nameData);\n    \n    return NAME_PREFIX + encoded;\n  }\n  \n  /**\n   * Parse a name back to NodeID\n   */\n  static parseNodeId(name) {\n    if (!name.startsWith(NAME_PREFIX)) {\n      throw new Error(`Invalid name prefix, expected ${NAME_PREFIX}`);\n    }\n    \n    const encoded = name.slice(NAME_PREFIX.length);\n    const decoded = Base32.decode(encoded);\n    \n    if (decoded.length !== NODE_ID_LENGTH + CHECKSUM_LENGTH) {\n      throw new Error('Invalid name length');\n    }\n    \n    const nodeId = decoded.slice(0, NODE_ID_LENGTH);\n    const checksum = decoded.slice(NODE_ID_LENGTH);\n    \n    // Verify checksum\n    const expectedChecksum = sha256(\n      new Uint8Array([\n        ...new TextEncoder().encode('DK-NAME'),\n        ...nodeId\n      ])\n    ).slice(0, CHECKSUM_LENGTH);\n    \n    for (let i = 0; i < CHECKSUM_LENGTH; i++) {\n      if (checksum[i] !== expectedChecksum[i]) {\n        throw new Error('Invalid name checksum');\n      }\n    }\n    \n    return nodeId;\n  }\n  \n  /**\n   * Sign data with this identity\n   */\n  sign(data) {\n    if (!this.privateKey) {\n      throw new Error('Private key required for signing');\n    }\n    \n    const message = typeof data === 'string' \n      ? new TextEncoder().encode(data)\n      : new Uint8Array(data);\n    \n    return ed25519.sign(message, this.privateKey);\n  }\n  \n  /**\n   * Verify a signature from this identity\n   */\n  verify(data, signature) {\n    const message = typeof data === 'string'\n      ? new TextEncoder().encode(data)\n      : new Uint8Array(data);\n\n    return ed25519.verify(signature, message, this.publicKey);\n  }\n\n  /**\n   * Static method to verify signature with any public key\n   */\n  static verify(signature, data, publicKey) {\n    const message = typeof data === 'string'\n      ? new TextEncoder().encode(data)\n      : new Uint8Array(data);\n\n    return ed25519.verify(signature, message, publicKey);\n  }\n  \n  /**\n   * Create a verifiable claim\n   */\n  createClaim(claimData) {\n    const claim = {\n      issuer: this.name,\n      nodeId: Array.from(this.nodeId),\n      publicKey: Array.from(this.publicKey),\n      data: claimData,\n      timestamp: Date.now(),\n      nonce: Array.from(randomBytes(16))\n    };\n    \n    // Sign the claim\n    const claimBytes = new TextEncoder().encode(JSON.stringify({\n      issuer: claim.issuer,\n      data: claim.data,\n      timestamp: claim.timestamp,\n      nonce: claim.nonce\n    }));\n    \n    claim.signature = Array.from(this.sign(claimBytes));\n    \n    return claim;\n  }\n  \n  /**\n   * Verify a claim from any identity\n   */\n  static verifyClaim(claim) {\n    try {\n      // Extract NodeID from name\n      const nodeId = this.parseNodeId(claim.issuer);\n      \n      // Verify NodeID matches\n      const claimNodeId = new Uint8Array(claim.nodeId);\n      for (let i = 0; i < NODE_ID_LENGTH; i++) {\n        if (nodeId[i] !== claimNodeId[i]) {\n          return { valid: false, error: 'NodeID mismatch' };\n        }\n      }\n      \n      // Verify public key derives to NodeID\n      const publicKey = new Uint8Array(claim.publicKey);\n      const derivedNodeId = sha256(publicKey).slice(0, NODE_ID_LENGTH);\n      for (let i = 0; i < NODE_ID_LENGTH; i++) {\n        if (derivedNodeId[i] !== nodeId[i]) {\n          return { valid: false, error: 'Public key does not match NodeID' };\n        }\n      }\n      \n      // Verify signature\n      const claimBytes = new TextEncoder().encode(JSON.stringify({\n        issuer: claim.issuer,\n        data: claim.data,\n        timestamp: claim.timestamp,\n        nonce: claim.nonce\n      }));\n      \n      const signature = new Uint8Array(claim.signature);\n      const valid = ed25519.verify(signature, claimBytes, publicKey);\n      \n      if (!valid) {\n        return { valid: false, error: 'Invalid signature' };\n      }\n      \n      // Check timestamp freshness (optional, 24 hour window)\n      const age = Date.now() - claim.timestamp;\n      if (age > 24 * 60 * 60 * 1000) {\n        return { valid: true, warning: 'Claim is older than 24 hours' };\n      }\n      \n      return { valid: true };\n    } catch (error) {\n      return { valid: false, error: error.message };\n    }\n  }\n  \n  /**\n   * Export identity for storage\n   */\n  export(includePrivate = false) {\n    const exported = {\n      name: this.name,\n      nodeId: Array.from(this.nodeId),\n      publicKey: Array.from(this.publicKey),\n      created: this.created\n    };\n    \n    if (includePrivate && this.privateKey) {\n      exported.privateKey = Array.from(this.privateKey);\n    }\n    \n    return exported;\n  }\n  \n  /**\n   * Import identity from storage\n   */\n  static import(data) {\n    if (data.privateKey) {\n      const privateKey = new Uint8Array(data.privateKey);\n      const identity = new SelfCertifyingIdentity(privateKey);\n      identity.created = data.created || Date.now();\n      return identity;\n    } else {\n      // Public identity only (for verification)\n      const identity = Object.create(SelfCertifyingIdentity.prototype);\n      identity.privateKey = null;\n      identity.publicKey = new Uint8Array(data.publicKey);\n      identity.nodeId = new Uint8Array(data.nodeId);\n      identity.name = data.name;\n      identity.created = data.created || Date.now();\n      return identity;\n    }\n  }\n  \n  /**\n   * Get identity info for display\n   */\n  getInfo() {\n    return {\n      name: this.name,\n      nodeId: Array.from(this.nodeId).map(b => b.toString(16).padStart(2, '0')).join(''),\n      publicKey: Array.from(this.publicKey).map(b => b.toString(16).padStart(2, '0')).join(''),\n      hasPrivateKey: !!this.privateKey,\n      created: new Date(this.created).toISOString()\n    };\n  }\n}\n\n/**\n * Identity Manager - Handles multiple identities\n */\nexport class IdentityManager {\n  constructor() {\n    this.identities = new Map();\n    this.defaultIdentity = null;\n  }\n  \n  /**\n   * Create a new identity\n   */\n  createIdentity(label = null) {\n    const identity = new SelfCertifyingIdentity();\n    const id = identity.name;\n    \n    this.identities.set(id, {\n      identity,\n      label: label || `Identity ${this.identities.size + 1}`,\n      created: Date.now(),\n      lastUsed: Date.now()\n    });\n    \n    if (!this.defaultIdentity) {\n      this.defaultIdentity = id;\n    }\n    \n    return identity;\n  }\n  \n  /**\n   * Import an identity\n   */\n  importIdentity(data, label = null) {\n    const identity = SelfCertifyingIdentity.import(data);\n    const id = identity.name;\n    \n    if (this.identities.has(id)) {\n      throw new Error('Identity already exists');\n    }\n    \n    this.identities.set(id, {\n      identity,\n      label: label || `Imported ${new Date().toISOString()}`,\n      created: identity.created,\n      lastUsed: Date.now()\n    });\n    \n    return identity;\n  }\n  \n  /**\n   * Get identity by name\n   */\n  getIdentity(name) {\n    const entry = this.identities.get(name);\n    if (!entry) {\n      throw new Error(`Identity not found: ${name}`);\n    }\n    \n    entry.lastUsed = Date.now();\n    return entry.identity;\n  }\n  \n  /**\n   * Get default identity\n   */\n  getDefault() {\n    if (!this.defaultIdentity) {\n      throw new Error('No default identity set');\n    }\n    return this.getIdentity(this.defaultIdentity);\n  }\n  \n  /**\n   * Set default identity\n   */\n  setDefault(name) {\n    if (!this.identities.has(name)) {\n      throw new Error(`Identity not found: ${name}`);\n    }\n    this.defaultIdentity = name;\n  }\n  \n  /**\n   * List all identities\n   */\n  listIdentities() {\n    const list = [];\n    for (const [id, entry] of this.identities) {\n      list.push({\n        name: id,\n        label: entry.label,\n        isDefault: id === this.defaultIdentity,\n        created: entry.created,\n        lastUsed: entry.lastUsed,\n        hasPrivateKey: !!entry.identity.privateKey\n      });\n    }\n    return list;\n  }\n  \n  /**\n   * Remove an identity\n   */\n  removeIdentity(name) {\n    if (name === this.defaultIdentity) {\n      // Select a new default\n      this.defaultIdentity = null;\n      for (const id of this.identities.keys()) {\n        if (id !== name) {\n          this.defaultIdentity = id;\n          break;\n        }\n      }\n    }\n    \n    return this.identities.delete(name);\n  }\n  \n  /**\n   * Export all identities for backup\n   */\n  exportAll(includePrivate = false) {\n    const backup = {\n      version: '1.0',\n      defaultIdentity: this.defaultIdentity,\n      identities: []\n    };\n    \n    for (const [id, entry] of this.identities) {\n      backup.identities.push({\n        name: id,\n        label: entry.label,\n        created: entry.created,\n        lastUsed: entry.lastUsed,\n        data: entry.identity.export(includePrivate)\n      });\n    }\n    \n    return backup;\n  }\n  \n  /**\n   * Import backup\n   */\n  importBackup(backup) {\n    if (backup.version !== '1.0') {\n      throw new Error('Unsupported backup version');\n    }\n    \n    for (const item of backup.identities) {\n      if (!this.identities.has(item.name)) {\n        const identity = SelfCertifyingIdentity.import(item.data);\n        this.identities.set(item.name, {\n          identity,\n          label: item.label,\n          created: item.created,\n          lastUsed: item.lastUsed\n        });\n      }\n    }\n    \n    if (backup.defaultIdentity && !this.defaultIdentity) {\n      this.defaultIdentity = backup.defaultIdentity;\n    }\n  }\n}\n\nexport default {\n  SelfCertifyingIdentity,\n  IdentityManager,\n  Base32\n};"],"mappings":"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","ignoreList":[]}