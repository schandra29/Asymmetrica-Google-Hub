{"version":3,"names":["_selfCertifying","require","_sha","_utils","cov_1f8pb8oshz","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","ProductionAEPSignatureSystem","SelfCertifyingIdentity","constructor","AEP_SIGNATURE_VERSION","AEP_HEADER_SIZE","ED25519_SIGNATURE_SIZE","MAX_METADATA_SIZE","currentRegime","regimeMetrics","R1","count","totalTime","R2","R3","console","log","signWithAEP","data","aepMiddleware","startTime","performance","now","aepResult","process","dataHash","hashData","dataSize","length","timestamp","Date","regime","enhancements","processingTime","toFixed","processedData","metadata","processDataForSigning","ed25519Signature","sign","aepSignature","createAEPSignature","signingTime","updateRegimeMetrics","error","warn","message","verifyWithAEP","signature","isAEPSignature","verify","parseAEPSignature","verifyMetadataIntegrity","isValid","processForEmergentRegime","processForOptimizedRegime","processForStableRegime","entropyLength","minuteTimestamp","Math","floor","entropySource","Uint8Array","encodeNumber","entropy","sha256","slice","set","method","rotationAmount","i","originalByte","rotatedByte","metadataWithIntegrity","integrityHash","calculateMetadataHash","metadataBytes","serializeMetadata","Error","totalSize","offset","regimeToNumber","version","regimeNumber","numberToRegime","metadataLength","deserializeMetadata","map","number","bytes","result","TextEncoder","encode","JSON","stringify","parse","TextDecoder","decode","time","metadataForHashing","metadataString","Object","keys","sort","Array","from","expectedHash","actualHash","getProductionMetrics","metrics","regimeDistribution","averageSigningTimes","totalSignatures","stats","entries","exports","_default","default"],"sources":["production-signature-system.js"],"sourcesContent":["/**\n * üîê PRODUCTION-GRADE AEP SIGNATURE SYSTEM\n *\n * Self-describing signatures with regime-aware verification\n * Maintains cryptographic integrity while enabling mathematical consciousness\n *\n * Design Principles:\n * 1. Cryptographic Correctness: verify(data, sign(data)) === true ALWAYS\n * 2. Self-Describing: Signatures contain all info needed for verification\n * 3. Regime Awareness: Different regimes use different enhancement strategies\n * 4. Backward Compatibility: Can verify standard Ed25519 signatures\n * 5. Forward Security: Enhancement metadata is cryptographically bound\n */\n\nimport { SelfCertifyingIdentity } from '../identity/self-certifying.js';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\n\n/**\n * üß† AEP SIGNATURE FORMAT\n *\n * Structure:\n * [1 byte: version] [1 byte: regime] [2 bytes: metadata_length] [metadata] [64 bytes: ed25519_signature]\n *\n * Version 1: Basic AEP signatures\n * Regime: R1/R2/R3 (encoded as 1/2/3, 0 for standard)\n * Metadata: Regime-specific parameters needed for verification\n * Signature: Standard Ed25519 signature over processed data\n */\n\nexport class ProductionAEPSignatureSystem extends SelfCertifyingIdentity {\n  constructor() {\n    super();\n\n    // AEP signature constants\n    this.AEP_SIGNATURE_VERSION = 1;\n    this.AEP_HEADER_SIZE = 4; // version + regime + metadata_length\n    this.ED25519_SIGNATURE_SIZE = 64;\n    this.MAX_METADATA_SIZE = 65535; // 2^16 - 1\n\n    // Current regime state\n    this.currentRegime = null;\n    this.regimeMetrics = {\n      R1: { count: 0, totalTime: 0 },\n      R2: { count: 0, totalTime: 0 },\n      R3: { count: 0, totalTime: 0 }\n    };\n\n    console.log('üîê Production AEP Signature System initialized');\n    console.log('‚úÖ Self-describing signatures enabled');\n    console.log('‚úÖ Regime-aware verification enabled');\n  }\n\n  /**\n   * üéØ PRODUCTION AEP SIGNING\n   * Creates self-describing signatures that contain verification metadata\n   */\n  async signWithAEP(data, aepMiddleware) {\n    console.log('üîê Production AEP signing initiated...');\n    const startTime = performance.now();\n\n    try {\n      // Get AEP classification for this signing operation\n      const aepResult = await aepMiddleware.process('signature_classification', {\n        dataHash: this.hashData(data),\n        dataSize: data.length,\n        timestamp: Date.now()\n      });\n\n      // Extract regime and enhancements\n      const regime = aepResult.enhancements?.regime || 'R3';\n      this.currentRegime = regime;\n\n      console.log(`üìä Signing classified as regime: ${regime}`);\n      console.log(`‚ö° AEP processing time: ${aepResult.performance?.processingTime?.toFixed(2) || 'N/A'}ms`);\n\n      // Apply regime-specific data processing\n      const { processedData, metadata } = this.processDataForSigning(data, regime, aepResult.enhancements);\n\n      // Generate Ed25519 signature over processed data\n      const ed25519Signature = super.sign(processedData);\n\n      // Create self-describing AEP signature\n      const aepSignature = this.createAEPSignature(ed25519Signature, regime, metadata);\n\n      // Update metrics\n      const signingTime = performance.now() - startTime;\n      this.updateRegimeMetrics(regime, signingTime);\n\n      console.log(`‚úÖ AEP signature created in ${signingTime.toFixed(2)}ms`);\n      console.log(`üì¶ Signature size: ${aepSignature.length} bytes (${aepSignature.length - this.ED25519_SIGNATURE_SIZE} bytes metadata)`);\n\n      return aepSignature;\n\n    } catch (error) {\n      console.warn('‚ö†Ô∏è AEP signing failed, using standard signing:', error.message);\n      return super.sign(data);\n    }\n  }\n\n  /**\n   * üîç PRODUCTION AEP VERIFICATION WITH METADATA INTEGRITY\n   * Verifies self-describing signatures by reconstructing the signing process\n   */\n  verifyWithAEP(data, signature) {\n    console.log('üîç Production AEP verification initiated...');\n\n    try {\n      // Check if this is an AEP signature or standard Ed25519\n      if (!this.isAEPSignature(signature)) {\n        console.log('üìù Standard Ed25519 signature detected, using standard verification');\n        return super.verify(data, signature);\n      }\n\n      // Parse AEP signature\n      const { regime, metadata, ed25519Signature } = this.parseAEPSignature(signature);\n\n      console.log(`üìä Verifying AEP signature for regime: ${regime}`);\n\n      // Verify metadata integrity first\n      if (!this.verifyMetadataIntegrity(metadata)) {\n        console.log('‚ùå Metadata integrity check failed');\n        return false;\n      }\n\n      // Reconstruct the data processing that was done during signing\n      const { processedData } = this.processDataForSigning(data, regime, metadata);\n\n      // Verify the Ed25519 signature against the processed data\n      const isValid = super.verify(processedData, ed25519Signature);\n\n      if (isValid) {\n        console.log(`‚úÖ AEP signature verification successful for regime ${regime}`);\n      } else {\n        console.log(`‚ùå AEP signature verification failed for regime ${regime}`);\n      }\n\n      return isValid;\n\n    } catch (error) {\n      console.warn('‚ö†Ô∏è AEP verification failed:', error.message);\n      return false;\n    }\n  }\n\n  /**\n   * üìä REGIME-SPECIFIC DATA PROCESSING\n   */\n  processDataForSigning(data, regime, enhancements = {}) {\n    switch (regime) {\n      case 'R1':\n        return this.processForEmergentRegime(data, enhancements);\n      case 'R2':\n        return this.processForOptimizedRegime(data, enhancements);\n      case 'R3':\n        return this.processForStableRegime(data, enhancements);\n      default:\n        return { processedData: data, metadata: {} };\n    }\n  }\n\n  /**\n   * üå± R1: EMERGENT REGIME PROCESSING\n   * Adds deterministic entropy based on data characteristics\n   */\n  processForEmergentRegime(data, enhancements) {\n    console.log('  üå± Applying R1 (Emergent) processing...');\n\n    // Generate deterministic entropy based on data hash and enhancements\n    const dataHash = this.hashData(data);\n    const entropyLength = 32; // 256 bits of additional entropy\n\n    // Create deterministic entropy from data hash + timestamp (rounded to minute for reproducibility)\n    const minuteTimestamp = Math.floor(Date.now() / 60000) * 60000;\n    const entropySource = new Uint8Array([...dataHash, ...this.encodeNumber(minuteTimestamp, 8)]);\n    const entropy = sha256(entropySource).slice(0, entropyLength);\n\n    // Combine original data with entropy\n    const processedData = new Uint8Array(data.length + entropy.length);\n    processedData.set(data);\n    processedData.set(entropy, data.length);\n\n    const metadata = {\n      entropyLength,\n      timestamp: minuteTimestamp,\n      method: 'deterministic_entropy'\n    };\n\n    console.log(`  ‚úÖ R1 processing complete: ${data.length} + ${entropyLength} = ${processedData.length} bytes`);\n\n    return { processedData, metadata };\n  }\n\n  /**\n   * ‚ö° R2: OPTIMIZED REGIME PROCESSING\n   * Applies deterministic modulation based on mathematical patterns\n   */\n  processForOptimizedRegime(data, enhancements) {\n    console.log('  ‚ö° Applying R2 (Optimized) processing...');\n\n    // Apply deterministic bit rotation based on data characteristics\n    const dataHash = this.hashData(data);\n    const rotationAmount = dataHash[0] % 8; // 0-7 bit rotation\n\n    const processedData = new Uint8Array(data.length);\n    for (let i = 0; i < data.length; i++) {\n      // Apply deterministic bit rotation\n      const originalByte = data[i];\n      const rotatedByte = ((originalByte << rotationAmount) | (originalByte >> (8 - rotationAmount))) & 0xFF;\n      processedData[i] = rotatedByte;\n    }\n\n    const metadata = {\n      rotationAmount,\n      method: 'deterministic_rotation'\n    };\n\n    console.log(`  ‚úÖ R2 processing complete: ${rotationAmount}-bit rotation applied`);\n\n    return { processedData, metadata };\n  }\n\n  /**\n   * üéØ R3: STABLE REGIME PROCESSING\n   * Uses standard processing for maximum compatibility and speed\n   */\n  processForStableRegime(data, enhancements) {\n    console.log('  üéØ Applying R3 (Stable) processing...');\n\n    // R3 uses original data without modification for maximum compatibility\n    const metadata = {\n      method: 'passthrough'\n    };\n\n    console.log('  ‚úÖ R3 processing complete: passthrough mode');\n\n    return { processedData: data, metadata };\n  }\n\n  /**\n   * üì¶ AEP SIGNATURE CREATION WITH INTEGRITY PROTECTION\n   */\n  createAEPSignature(ed25519Signature, regime, metadata) {\n    // Add metadata integrity hash for production security\n    const metadataWithIntegrity = {\n      ...metadata,\n      integrityHash: this.calculateMetadataHash(metadata)\n    };\n\n    // Serialize metadata with integrity protection\n    const metadataBytes = this.serializeMetadata(metadataWithIntegrity);\n\n    if (metadataBytes.length > this.MAX_METADATA_SIZE) {\n      throw new Error(`Metadata too large: ${metadataBytes.length} > ${this.MAX_METADATA_SIZE}`);\n    }\n\n    // Create AEP signature structure\n    const totalSize = this.AEP_HEADER_SIZE + metadataBytes.length + this.ED25519_SIGNATURE_SIZE;\n    const aepSignature = new Uint8Array(totalSize);\n\n    let offset = 0;\n\n    // Version (1 byte)\n    aepSignature[offset++] = this.AEP_SIGNATURE_VERSION;\n\n    // Regime (1 byte): R1=1, R2=2, R3=3, Standard=0\n    aepSignature[offset++] = this.regimeToNumber(regime);\n\n    // Metadata length (2 bytes, big-endian)\n    aepSignature[offset++] = (metadataBytes.length >> 8) & 0xFF;\n    aepSignature[offset++] = metadataBytes.length & 0xFF;\n\n    // Metadata\n    aepSignature.set(metadataBytes, offset);\n    offset += metadataBytes.length;\n\n    // Ed25519 signature\n    aepSignature.set(ed25519Signature, offset);\n\n    return aepSignature;\n  }\n\n  /**\n   * üîç AEP SIGNATURE PARSING\n   */\n  parseAEPSignature(signature) {\n    if (signature.length < this.AEP_HEADER_SIZE + this.ED25519_SIGNATURE_SIZE) {\n      throw new Error('Invalid AEP signature: too short');\n    }\n\n    let offset = 0;\n\n    // Parse version\n    const version = signature[offset++];\n    if (version !== this.AEP_SIGNATURE_VERSION) {\n      throw new Error(`Unsupported AEP signature version: ${version}`);\n    }\n\n    // Parse regime\n    const regimeNumber = signature[offset++];\n    const regime = this.numberToRegime(regimeNumber);\n\n    // Parse metadata length\n    const metadataLength = (signature[offset] << 8) | signature[offset + 1];\n    offset += 2;\n\n    if (signature.length !== this.AEP_HEADER_SIZE + metadataLength + this.ED25519_SIGNATURE_SIZE) {\n      throw new Error('Invalid AEP signature: length mismatch');\n    }\n\n    // Parse metadata\n    const metadataBytes = signature.slice(offset, offset + metadataLength);\n    const metadata = this.deserializeMetadata(metadataBytes);\n    offset += metadataLength;\n\n    // Parse Ed25519 signature\n    const ed25519Signature = signature.slice(offset, offset + this.ED25519_SIGNATURE_SIZE);\n\n    return { regime, metadata, ed25519Signature };\n  }\n\n  /**\n   * üîß UTILITY METHODS\n   */\n  isAEPSignature(signature) {\n    return signature.length > this.ED25519_SIGNATURE_SIZE &&\n           signature[0] === this.AEP_SIGNATURE_VERSION;\n  }\n\n  hashData(data) {\n    return sha256(data);\n  }\n\n  regimeToNumber(regime) {\n    const map = { 'R1': 1, 'R2': 2, 'R3': 3 };\n    return map[regime] || 0;\n  }\n\n  numberToRegime(number) {\n    const map = { 1: 'R1', 2: 'R2', 3: 'R3' };\n    return map[number] || 'Standard';\n  }\n\n  encodeNumber(number, bytes) {\n    const result = new Uint8Array(bytes);\n    for (let i = bytes - 1; i >= 0; i--) {\n      result[i] = number & 0xFF;\n      number = number >> 8;\n    }\n    return result;\n  }\n\n  serializeMetadata(metadata) {\n    return new TextEncoder().encode(JSON.stringify(metadata));\n  }\n\n  deserializeMetadata(bytes) {\n    return JSON.parse(new TextDecoder().decode(bytes));\n  }\n\n  updateRegimeMetrics(regime, time) {\n    if (this.regimeMetrics[regime]) {\n      this.regimeMetrics[regime].count++;\n      this.regimeMetrics[regime].totalTime += time;\n    }\n  }\n\n  /**\n   * üîí METADATA INTEGRITY METHODS\n   */\n  calculateMetadataHash(metadata) {\n    // Create hash of metadata without the integrity hash itself\n    const metadataForHashing = { ...metadata };\n    delete metadataForHashing.integrityHash;\n\n    const metadataString = JSON.stringify(metadataForHashing, Object.keys(metadataForHashing).sort());\n    return Array.from(sha256(new TextEncoder().encode(metadataString))).slice(0, 16); // First 16 bytes as array\n  }\n\n  verifyMetadataIntegrity(metadata) {\n    if (!metadata.integrityHash) {\n      // Backward compatibility - metadata without integrity hash is valid\n      return true;\n    }\n\n    const expectedHash = this.calculateMetadataHash(metadata);\n    const actualHash = metadata.integrityHash;\n\n    if (actualHash.length !== expectedHash.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedHash.length; i++) {\n      if (expectedHash[i] !== actualHash[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * üìä GET PRODUCTION METRICS\n   */\n  getProductionMetrics() {\n    const metrics = {\n      regimeDistribution: {},\n      averageSigningTimes: {},\n      totalSignatures: 0\n    };\n\n    for (const [regime, stats] of Object.entries(this.regimeMetrics)) {\n      metrics.totalSignatures += stats.count;\n      metrics.regimeDistribution[regime] = stats.count;\n      metrics.averageSigningTimes[regime] = stats.count > 0 ? stats.totalTime / stats.count : 0;\n    }\n\n    return metrics;\n  }\n}\n\nexport default ProductionAEPSignatureSystem;"],"mappings":";;;;;;;AAcA;AAAA;AAAAA,eAAA,GAAAC,OAAA;AACA;AAAA;AAAAC,IAAA,GAAAD,OAAA;AACA;AAAA;AAAAE,MAAA,GAAAF,OAAA;AAAkD;AAAA,SAAAG,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;U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","ignoreList":[]}