{"version":3,"names":["_sha","require","_utils","_selfCertifying","cov_1uddb0fdyg","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","MIN_DELAY_MS","MAX_DELAY_MS","MAX_TOTAL_DELAY_MS","MAX_RELAYS_PER_PATH","SESSION_KEY_SIZE","RANDOM_SIZE","RelayLottery","constructor","sessionKey","timeBucketMinutes","clientRandom","randomBytes","selectPath","availableRelays","pathLength","Error","length","timeBucket","Math","floor","Date","now","timeBucketBytes","Uint8Array","DataView","buffer","setUint32","seedData","seed","sha256","selectedRelays","remainingRelays","i","relayIndex","deterministicSelection","selectedRelay","splice","push","console","log","map","r","nodeId","slice","join","round","options","roundSeed","seedValue","getUint32","exports","RelayNode","identity","capabilities","publicKey","mix","bandwidth","jurisdiction","operator","stats","packetsForwarded","bytesForwarded","connectionsHandled","uptime","lastSeen","connections","Map","delayQueue","supportsMixing","applyMixingDelay","message","connectionId","Promise","resolve","delay","random","toFixed","setTimeout","forwardMessage","nextHop","delayedMessage","forwardedMessage","updateHopSignature","success","timestamp","error","code","updatedMessage","hopSignatures","hopData","TextEncoder","encode","JSON","stringify","Array","from","messageHash","signature","sign","getAdvertisement","lastUpdated","updateStats","bytes","PrivacyPath","lottery","activePaths","relayDirectory","registerRelay","relay","nodeIdHex","toString","padStart","set","added","reputation","failures","successes","buildPath","requirements","filterRelays","pathId","generatePathId","id","relays","created","totalDelay","estimatePathDelay","active","info","entries","minReputation","excludeJurisdictions","includes","minBandwidth","pathData","flat","pathHash","averageDelayPerHop","min","sendThroughPath","get","currentMessage","result","handlePathFailure","failedHop","failedAt","failedRelay","relayInfo","max","cleanup","maxAge","delete","getPathStats","totalPaths","size","failedPaths","relaysRegistered","averagePathLength","totalHops","values","getRelayDirectory","PrivacyManager","pathConstructor","defaultPathLength","enabled","enable","disable","sendMessage","recipient","usePrivacy","shouldUsePrivacy","direct","sender","hops","addRelay","getStats","sessionAge","sessionStart","paths","_default","default"],"sources":["relay-mixing.js"],"sourcesContent":["/**\n * Privacy Hop Layer - Relay Mixing System\n * Based on Betanet specs Section 10 (Privacy Hop Layer)\n *\n * Provides optional anonymity through relay mixing without the\n * extreme latency of Tor. Designed for legitimate privacy needs:\n * - Journalist source protection\n * - Business confidentiality\n * - Avoiding government surveillance overreach\n * - Protecting activists in authoritarian regions\n */\n\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { SelfCertifyingIdentity } from '../identity/self-certifying.js';\n\n// Privacy constants from Section 10\nconst MIN_DELAY_MS = 30;\nconst MAX_DELAY_MS = 150;\nconst MAX_TOTAL_DELAY_MS = 600;\nconst MAX_RELAYS_PER_PATH = 3;\nconst SESSION_KEY_SIZE = 32;\nconst RANDOM_SIZE = 16;\n\n/**\n * Relay Selection Lottery\n * Deterministic but unpredictable relay selection (Section 10.1)\n */\nexport class RelayLottery {\n  constructor(sessionKey, timeBucketMinutes = 5) {\n    this.sessionKey = sessionKey;\n    this.timeBucketMinutes = timeBucketMinutes;\n    this.clientRandom = randomBytes(RANDOM_SIZE);\n  }\n\n  /**\n   * Select relays for a path using deterministic lottery\n   */\n  selectPath(availableRelays, pathLength = 3) {\n    if (pathLength > MAX_RELAYS_PER_PATH) {\n      throw new Error(`Path length ${pathLength} exceeds maximum ${MAX_RELAYS_PER_PATH}`);\n    }\n\n    if (availableRelays.length < pathLength) {\n      throw new Error('Insufficient relays available for requested path length');\n    }\n\n    // Create selection seed (Section 10.1)\n    const timeBucket = Math.floor(Date.now() / (this.timeBucketMinutes * 60 * 1000));\n    const timeBucketBytes = new Uint8Array(4);\n    new DataView(timeBucketBytes.buffer).setUint32(0, timeBucket, false);\n\n    const seedData = new Uint8Array([\n      ...this.sessionKey,\n      ...timeBucketBytes,\n      ...this.clientRandom\n    ]);\n    const seed = sha256(seedData);\n\n    // Select relays using weighted lottery\n    const selectedRelays = [];\n    const remainingRelays = [...availableRelays];\n\n    for (let i = 0; i < pathLength; i++) {\n      const relayIndex = this.deterministicSelection(seed, i, remainingRelays);\n      const selectedRelay = remainingRelays.splice(relayIndex, 1)[0];\n      selectedRelays.push(selectedRelay);\n    }\n\n    console.log(`🎲 Selected ${pathLength}-hop path: ${selectedRelays.map(r => r.nodeId.slice(0, 8)).join(' -> ')}`);\n    return selectedRelays;\n  }\n\n  /**\n   * Deterministic selection from available options\n   */\n  deterministicSelection(seed, round, options) {\n    // Create round-specific seed\n    const roundSeed = sha256(new Uint8Array([...seed, round]));\n\n    // Convert to number and use modulo\n    const seedValue = new DataView(roundSeed.buffer).getUint32(0, false);\n    return seedValue % options.length;\n  }\n}\n\n/**\n * Relay Node\n * Represents a privacy relay with mixing capabilities\n */\nexport class RelayNode {\n  constructor(identity, capabilities = {}) {\n    this.identity = identity;\n    this.nodeId = identity.nodeId;\n    this.publicKey = identity.publicKey;\n    this.name = identity.name;\n\n    // Relay capabilities\n    this.capabilities = {\n      mix: capabilities.mix || true,\n      bandwidth: capabilities.bandwidth || 1000000, // 1MB/s default\n      jurisdiction: capabilities.jurisdiction || 'unknown',\n      operator: capabilities.operator || 'anonymous',\n      ...capabilities\n    };\n\n    // Statistics\n    this.stats = {\n      packetsForwarded: 0,\n      bytesForwarded: 0,\n      connectionsHandled: 0,\n      uptime: Date.now(),\n      lastSeen: Date.now()\n    };\n\n    // Active connections\n    this.connections = new Map(); // connectionId -> connection state\n    this.delayQueue = []; // Messages awaiting timed release\n  }\n\n  /**\n   * Check if relay supports mixing (Section 10.2)\n   */\n  supportsMixing() {\n    return this.capabilities.mix === true;\n  }\n\n  /**\n   * Apply mixing delay to message (Section 10.3)\n   */\n  applyMixingDelay(message, connectionId) {\n    if (!this.supportsMixing()) {\n      // No mixing - forward immediately\n      return Promise.resolve(message);\n    }\n\n    // Generate delay in acceptable range\n    const delay = MIN_DELAY_MS + Math.random() * (MAX_DELAY_MS - MIN_DELAY_MS);\n\n    console.log(`⏱️  Relay ${this.nodeId.slice(0, 8)} applying ${delay.toFixed(0)}ms mixing delay`);\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        this.stats.packetsForwarded++;\n        this.stats.bytesForwarded += message.length || 0;\n        resolve(message);\n      }, delay);\n    });\n  }\n\n  /**\n   * Forward message to next hop (Section 10.4)\n   */\n  async forwardMessage(message, nextHop, connectionId) {\n    try {\n      // Apply mixing delay\n      const delayedMessage = await this.applyMixingDelay(message, connectionId);\n\n      // Update timestamp and signature for this hop\n      const forwardedMessage = this.updateHopSignature(delayedMessage);\n\n      // Forward to next hop\n      console.log(`📨 Relay ${this.nodeId.slice(0, 8)} forwarding to ${nextHop.slice(0, 8)}`);\n\n      return {\n        success: true,\n        message: forwardedMessage,\n        nextHop,\n        delay: Date.now() - (message.timestamp || Date.now())\n      };\n\n    } catch (error) {\n      console.error(`❌ Forward failed at relay ${this.nodeId.slice(0, 8)}: ${error.message}`);\n\n      // Generate error for previous hop (Section 10.4)\n      return {\n        success: false,\n        error: 'PEER_DOWN',\n        code: 0x0003,\n        message: error.message\n      };\n    }\n  }\n\n  /**\n   * Update hop signature for message (Section 10.4)\n   */\n  updateHopSignature(message) {\n    // Update timestamp for this hop\n    const updatedMessage = {\n      ...message,\n      timestamp: Date.now(),\n      hopSignatures: message.hopSignatures || []\n    };\n\n    // Sign our hop\n    const hopData = new TextEncoder().encode(JSON.stringify({\n      nodeId: Array.from(this.nodeId),\n      timestamp: updatedMessage.timestamp,\n      messageHash: sha256(new TextEncoder().encode(JSON.stringify(message)))\n    }));\n\n    const signature = this.identity.sign(hopData);\n    updatedMessage.hopSignatures.push({\n      nodeId: Array.from(this.nodeId),\n      signature: Array.from(signature),\n      timestamp: updatedMessage.timestamp\n    });\n\n    return updatedMessage;\n  }\n\n  /**\n   * Get relay advertisement\n   */\n  getAdvertisement() {\n    return {\n      nodeId: Array.from(this.nodeId),\n      publicKey: Array.from(this.publicKey),\n      name: this.name,\n      capabilities: this.capabilities,\n      stats: {\n        ...this.stats,\n        uptime: Date.now() - this.stats.uptime\n      },\n      lastUpdated: Date.now()\n    };\n  }\n\n  /**\n   * Update relay statistics\n   */\n  updateStats(bytes = 0, connections = 0) {\n    this.stats.bytesForwarded += bytes;\n    this.stats.connectionsHandled += connections;\n    this.stats.lastSeen = Date.now();\n  }\n}\n\n/**\n * Privacy Path Constructor\n * Builds and manages privacy-preserving paths through relays\n */\nexport class PrivacyPath {\n  constructor(sessionKey) {\n    this.sessionKey = sessionKey;\n    this.lottery = new RelayLottery(sessionKey);\n    this.activePaths = new Map(); // pathId -> path info\n    this.relayDirectory = new Map(); // nodeId -> relay info\n  }\n\n  /**\n   * Register a relay in the directory\n   */\n  registerRelay(relay) {\n    const nodeIdHex = Array.from(relay.nodeId)\n      .map(b => b.toString(16).padStart(2, '0'))\n      .join('');\n\n    this.relayDirectory.set(nodeIdHex, {\n      relay,\n      added: Date.now(),\n      reputation: 1.0,\n      failures: 0,\n      successes: 0\n    });\n\n    console.log(`📍 Registered relay: ${relay.name} (${nodeIdHex.slice(0, 8)}...)`);\n  }\n\n  /**\n   * Build a privacy path through relays\n   */\n  buildPath(pathLength = 3, requirements = {}) {\n    // Get available relays that meet requirements\n    const availableRelays = this.filterRelays(requirements);\n\n    if (availableRelays.length < pathLength) {\n      throw new Error(`Insufficient suitable relays: need ${pathLength}, have ${availableRelays.length}`);\n    }\n\n    // Select path using lottery\n    const selectedRelays = this.lottery.selectPath(availableRelays, pathLength);\n\n    // Create path object\n    const pathId = this.generatePathId(selectedRelays);\n    const path = {\n      id: pathId,\n      relays: selectedRelays,\n      created: Date.now(),\n      totalDelay: this.estimatePathDelay(selectedRelays),\n      active: true\n    };\n\n    this.activePaths.set(pathId, path);\n\n    console.log(`🛤️  Built privacy path ${pathId.slice(0, 8)}: ${path.totalDelay}ms total delay`);\n    return path;\n  }\n\n  /**\n   * Filter relays based on requirements\n   */\n  filterRelays(requirements) {\n    const relays = [];\n\n    for (const [nodeId, info] of this.relayDirectory.entries()) {\n      const relay = info.relay;\n\n      // Check basic requirements\n      if (!relay.supportsMixing()) continue;\n      if (info.reputation < (requirements.minReputation || 0.5)) continue;\n\n      // Jurisdictional diversity\n      if (requirements.excludeJurisdictions) {\n        if (requirements.excludeJurisdictions.includes(relay.capabilities.jurisdiction)) {\n          continue;\n        }\n      }\n\n      // Bandwidth requirements\n      if (requirements.minBandwidth) {\n        if (relay.capabilities.bandwidth < requirements.minBandwidth) {\n          continue;\n        }\n      }\n\n      relays.push(relay);\n    }\n\n    return relays;\n  }\n\n  /**\n   * Generate unique path identifier\n   */\n  generatePathId(relays) {\n    const pathData = relays.map(r => Array.from(r.nodeId)).flat();\n    const pathHash = sha256(new Uint8Array([...pathData, ...randomBytes(8)]));\n    return Array.from(pathHash.slice(0, 16))\n      .map(b => b.toString(16).padStart(2, '0'))\n      .join('');\n  }\n\n  /**\n   * Estimate total path delay\n   */\n  estimatePathDelay(relays) {\n    // Each relay adds 30-150ms, estimate average of 90ms per hop\n    const averageDelayPerHop = (MIN_DELAY_MS + MAX_DELAY_MS) / 2;\n    const totalDelay = relays.length * averageDelayPerHop;\n\n    return Math.min(totalDelay, MAX_TOTAL_DELAY_MS);\n  }\n\n  /**\n   * Send message through privacy path\n   */\n  async sendThroughPath(pathId, message) {\n    const path = this.activePaths.get(pathId);\n    if (!path) {\n      throw new Error(`Path not found: ${pathId}`);\n    }\n\n    if (!path.active) {\n      throw new Error(`Path is inactive: ${pathId}`);\n    }\n\n    console.log(`🔐 Sending message through ${path.relays.length}-hop privacy path`);\n\n    let currentMessage = {\n      ...message,\n      pathId,\n      timestamp: Date.now(),\n      hopSignatures: []\n    };\n\n    // Forward through each relay\n    for (let i = 0; i < path.relays.length; i++) {\n      const relay = path.relays[i];\n      const nextHop = i < path.relays.length - 1 ? path.relays[i + 1].nodeId : null;\n\n      try {\n        const result = await relay.forwardMessage(currentMessage, nextHop, pathId);\n\n        if (!result.success) {\n          console.error(`❌ Path failed at hop ${i + 1}: ${result.error}`);\n          this.handlePathFailure(pathId, i, result.error);\n          throw new Error(`Path failure: ${result.error}`);\n        }\n\n        currentMessage = result.message;\n\n      } catch (error) {\n        this.handlePathFailure(pathId, i, error.message);\n        throw error;\n      }\n    }\n\n    console.log(`✅ Message successfully sent through privacy path (${Date.now() - currentMessage.timestamp}ms total)`);\n    return currentMessage;\n  }\n\n  /**\n   * Handle path failure for reputation management\n   */\n  handlePathFailure(pathId, failedHop, error) {\n    const path = this.activePaths.get(pathId);\n    if (!path) return;\n\n    // Mark path as inactive\n    path.active = false;\n    path.failedAt = Date.now();\n    path.failedHop = failedHop;\n    path.error = error;\n\n    // Update relay reputation\n    const failedRelay = path.relays[failedHop];\n    if (failedRelay) {\n      const nodeIdHex = Array.from(failedRelay.nodeId)\n        .map(b => b.toString(16).padStart(2, '0'))\n        .join('');\n\n      const relayInfo = this.relayDirectory.get(nodeIdHex);\n      if (relayInfo) {\n        relayInfo.failures++;\n        relayInfo.reputation = Math.max(0.1, relayInfo.reputation - 0.1);\n\n        console.log(`📉 Decreased reputation for relay ${nodeIdHex.slice(0, 8)} to ${relayInfo.reputation.toFixed(2)}`);\n      }\n    }\n  }\n\n  /**\n   * Cleanup inactive paths\n   */\n  cleanup(maxAge = 60 * 60 * 1000) { // 1 hour default\n    const now = Date.now();\n\n    for (const [pathId, path] of this.activePaths.entries()) {\n      if (!path.active && (now - path.created) > maxAge) {\n        this.activePaths.delete(pathId);\n      }\n    }\n  }\n\n  /**\n   * Get path statistics\n   */\n  getPathStats() {\n    const stats = {\n      totalPaths: this.activePaths.size,\n      activePaths: 0,\n      failedPaths: 0,\n      relaysRegistered: this.relayDirectory.size,\n      averagePathLength: 0\n    };\n\n    let totalHops = 0;\n\n    for (const path of this.activePaths.values()) {\n      if (path.active) {\n        stats.activePaths++;\n      } else {\n        stats.failedPaths++;\n      }\n      totalHops += path.relays.length;\n    }\n\n    if (stats.totalPaths > 0) {\n      stats.averagePathLength = totalHops / stats.totalPaths;\n    }\n\n    return stats;\n  }\n\n  /**\n   * Get relay directory status\n   */\n  getRelayDirectory() {\n    return Array.from(this.relayDirectory.values()).map(info => ({\n      nodeId: Array.from(info.relay.nodeId).slice(0, 8)\n        .map(b => b.toString(16).padStart(2, '0')).join(''),\n      name: info.relay.name,\n      capabilities: info.relay.capabilities,\n      reputation: info.reputation,\n      failures: info.failures,\n      successes: info.successes,\n      uptime: Date.now() - info.relay.stats.uptime\n    }));\n  }\n}\n\n/**\n * Privacy Manager\n * High-level interface for privacy-preserving communications\n */\nexport class PrivacyManager {\n  constructor(identity) {\n    this.identity = identity;\n    this.sessionKey = randomBytes(SESSION_KEY_SIZE);\n    this.pathConstructor = new PrivacyPath(this.sessionKey);\n    this.defaultPathLength = 3;\n    this.enabled = false;\n  }\n\n  /**\n   * Enable privacy mode\n   */\n  enable() {\n    this.enabled = true;\n    console.log(`🔒 Privacy mode enabled for ${this.identity.name}`);\n  }\n\n  /**\n   * Disable privacy mode\n   */\n  disable() {\n    this.enabled = false;\n    console.log(`🔓 Privacy mode disabled for ${this.identity.name}`);\n  }\n\n  /**\n   * Send message with optional privacy\n   */\n  async sendMessage(message, recipient, usePrivacy = null) {\n    const shouldUsePrivacy = usePrivacy !== null ? usePrivacy : this.enabled;\n\n    if (!shouldUsePrivacy) {\n      // Direct send without privacy\n      console.log(`📤 Sending direct message to ${recipient.slice(0, 8)}`);\n      return { message, direct: true };\n    }\n\n    // Build privacy path if needed\n    const path = this.pathConstructor.buildPath(this.defaultPathLength);\n\n    // Send through privacy path\n    const result = await this.pathConstructor.sendThroughPath(path.id, {\n      ...message,\n      recipient,\n      sender: this.identity.name\n    });\n\n    return {\n      message: result,\n      direct: false,\n      pathId: path.id,\n      hops: path.relays.length\n    };\n  }\n\n  /**\n   * Add relay to network\n   */\n  addRelay(relay) {\n    this.pathConstructor.registerRelay(relay);\n  }\n\n  /**\n   * Get privacy statistics\n   */\n  getStats() {\n    return {\n      enabled: this.enabled,\n      identity: this.identity.name,\n      sessionAge: Date.now() - (this.sessionStart || Date.now()),\n      paths: this.pathConstructor.getPathStats(),\n      relays: this.pathConstructor.getRelayDirectory()\n    };\n  }\n}\n\nexport default {\n  RelayLottery,\n  RelayNode,\n  PrivacyPath,\n  PrivacyManager\n};"],"mappings":"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","ignoreList":[]}